// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/round_data.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 每个Scenario跟用户关联时的额外数据
// 也有一些是场景相关的额外损失
type RoundData struct {
	Payment   int32 `protobuf:"varint,1,opt,name=payment,proto3" json:"payment,omitempty"`
	Balance   int32 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Salary    int32 `protobuf:"varint,3,opt,name=salary,proto3" json:"salary,omitempty"`
	IsOutGame bool  `protobuf:"varint,4,opt,name=isOutGame,proto3" json:"isOutGame,omitempty"`
	// 1: 不是或未经过发薪日，2: 正好是发薪日，3: 经过发薪日
	// NOTE(QuantumGhost): 新版没有经过结算日停住并需要确认的逻辑了，这个字段也没有用了
	IsPayDay   int32 `protobuf:"varint,5,opt,name=isPayDay,proto3" json:"isPayDay,omitempty"` // Deprecated: Do not use.
	CanSellCnt int32 `protobuf:"varint,6,opt,name=canSellCnt,proto3" json:"canSellCnt,omitempty"`
	// 到发薪日的步数，用来给前端处理发薪日问题
	// NOTE(QuantumGhost): 新版没有经过结算日停住并需要确认的逻辑了，这个字段也没有用了
	StepsToPayday        int32    `protobuf:"varint,7,opt,name=StepsToPayday,proto3" json:"StepsToPayday,omitempty"` // Deprecated: Do not use.
	UnemploymentLoss     int32    `protobuf:"varint,8,opt,name=UnemploymentLoss,proto3" json:"UnemploymentLoss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundData) Reset()         { *m = RoundData{} }
func (m *RoundData) String() string { return proto.CompactTextString(m) }
func (*RoundData) ProtoMessage()    {}
func (*RoundData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8cff3f7e95ac56c, []int{0}
}

func (m *RoundData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundData.Unmarshal(m, b)
}
func (m *RoundData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundData.Marshal(b, m, deterministic)
}
func (m *RoundData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundData.Merge(m, src)
}
func (m *RoundData) XXX_Size() int {
	return xxx_messageInfo_RoundData.Size(m)
}
func (m *RoundData) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundData.DiscardUnknown(m)
}

var xxx_messageInfo_RoundData proto.InternalMessageInfo

func (m *RoundData) GetPayment() int32 {
	if m != nil {
		return m.Payment
	}
	return 0
}

func (m *RoundData) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *RoundData) GetSalary() int32 {
	if m != nil {
		return m.Salary
	}
	return 0
}

func (m *RoundData) GetIsOutGame() bool {
	if m != nil {
		return m.IsOutGame
	}
	return false
}

// Deprecated: Do not use.
func (m *RoundData) GetIsPayDay() int32 {
	if m != nil {
		return m.IsPayDay
	}
	return 0
}

func (m *RoundData) GetCanSellCnt() int32 {
	if m != nil {
		return m.CanSellCnt
	}
	return 0
}

// Deprecated: Do not use.
func (m *RoundData) GetStepsToPayday() int32 {
	if m != nil {
		return m.StepsToPayday
	}
	return 0
}

func (m *RoundData) GetUnemploymentLoss() int32 {
	if m != nil {
		return m.UnemploymentLoss
	}
	return 0
}

func init() {
	proto.RegisterType((*RoundData)(nil), "pb.common.RoundData")
}

func init() { proto.RegisterFile("common/round_data.proto", fileDescriptor_c8cff3f7e95ac56c) }

var fileDescriptor_c8cff3f7e95ac56c = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x49, 0xb4, 0x69, 0xb2, 0x20, 0xc8, 0x1e, 0x74, 0x0e, 0x52, 0x8a, 0x07, 0x09, 0x82,
	0xcd, 0xc1, 0x37, 0xa8, 0x05, 0x2f, 0x82, 0x25, 0xd5, 0x8b, 0x17, 0x99, 0x24, 0x4b, 0x09, 0x6c,
	0x76, 0x96, 0xec, 0x44, 0xd8, 0x67, 0xf0, 0xa5, 0x25, 0x9b, 0x5a, 0x15, 0x8f, 0xff, 0xf7, 0x31,
	0x3f, 0xcc, 0x2f, 0x2e, 0x6b, 0xea, 0x3a, 0x32, 0x45, 0x4f, 0x83, 0x69, 0xde, 0x1b, 0x64, 0x5c,
	0xd9, 0x9e, 0x98, 0x64, 0x66, 0xab, 0xd5, 0xe4, 0xae, 0x3f, 0x63, 0x91, 0x95, 0xa3, 0xdf, 0x20,
	0xa3, 0x04, 0x31, 0xb7, 0xe8, 0x3b, 0x65, 0x18, 0xa2, 0x65, 0x94, 0xcf, 0xca, 0xef, 0x38, 0x9a,
	0x0a, 0x35, 0x9a, 0x5a, 0x41, 0x3c, 0x99, 0x43, 0x94, 0x17, 0x22, 0x71, 0xa8, 0xb1, 0xf7, 0x70,
	0x12, 0xc4, 0x21, 0xc9, 0x2b, 0x91, 0xb5, 0xee, 0x79, 0xe0, 0x47, 0xec, 0x14, 0x9c, 0x2e, 0xa3,
	0x3c, 0x2d, 0x7f, 0x80, 0x5c, 0x88, 0xb4, 0x75, 0x5b, 0xf4, 0x1b, 0xf4, 0x30, 0x1b, 0xef, 0xd6,
	0x31, 0x44, 0xe5, 0x91, 0xc9, 0x85, 0x10, 0x35, 0x9a, 0x9d, 0xd2, 0xfa, 0xc1, 0x30, 0x24, 0xa1,
	0xf9, 0x17, 0x91, 0xb9, 0x38, 0xdb, 0xb1, 0xb2, 0xee, 0x85, 0xb6, 0xe8, 0x1b, 0xf4, 0x30, 0x3f,
	0x96, 0xfc, 0x15, 0xf2, 0x56, 0x9c, 0xbf, 0x1a, 0xd5, 0x59, 0x4d, 0xe1, 0x93, 0x27, 0x72, 0x0e,
	0xd2, 0xd0, 0xf7, 0x8f, 0xaf, 0xf3, 0xb7, 0x9b, 0x7d, 0xcb, 0x1a, 0xc3, 0x3c, 0xc5, 0x87, 0xaa,
	0x99, 0xfa, 0xc1, 0x16, 0xe8, 0x9c, 0xe2, 0x3b, 0x5b, 0x15, 0x7b, 0x2a, 0xa6, 0xdd, 0xaa, 0x24,
	0x2c, 0x79, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x00, 0x00, 0xc8, 0x64, 0x01, 0x00, 0x00,
}
