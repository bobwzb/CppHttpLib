// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/cmd.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CmdID int32

const (
	CmdID_DEFAULT       CmdID = 0
	CmdID_LOGIN         CmdID = 1
	CmdID_PUSH          CmdID = 3
	CmdID_HEARBEAT      CmdID = 6
	CmdID_CHECK_PLAYING CmdID = 10
	CmdID_SIGNALLING    CmdID = 20
	// away from keyboard, 掉线(离线)时使用
	CmdID_AFK CmdID = 21
	// 玩家重连上线
	CmdID_RE_CONNECT CmdID = 22
	// ------- lobby ---------- //
	CmdID_LOBBY_ACTION   CmdID = 1000
	CmdID_MATCHING       CmdID = 1005
	CmdID_EXIT_MATCH     CmdID = 1006
	CmdID_PREPARE        CmdID = 1015
	CmdID_ANYONE_TIMEOUT CmdID = 1016
	CmdID_ALL_READY      CmdID = 1020
	//
	CmdID_START_MATCHING          CmdID = 1021
	CmdID_EXIT_ROOM               CmdID = 1022
	CmdID_ROOM_INFO               CmdID = 1023
	CmdID_CREATE_ROOM             CmdID = 1024
	CmdID_GET_AVAILABLE_ROOM_SIZE CmdID = 1025
	CmdID_INVITE                  CmdID = 1026
	CmdID_ENTER_ROOM              CmdID = 1027
	CmdID_GET_PLAYER_STATE        CmdID = 1029
	CmdID_REMOVE_PLAYER_FROM_ROOM CmdID = 1030
	// 修改房间自定义选项, 只有匹配模式可以自定义
	// 房间修改后需要通知房间内的其他玩家
	CmdID_UPDATE_ROOM_OPTION CmdID = 1031
	// 获取可以设置的地图的列表
	CmdID_GET_AVAILABLE_MAPS CmdID = 1032
	//-------- game ---------- //
	CmdID_GAME_ACTION CmdID = 2000
	// init。 关键路径，任何情况重新加入游戏都需要调用： 1. 开始新游戏时(ALL_READY后)； 2. 重连恢复(LOGIN后有游戏)
	CmdID_SYNC_STATE  CmdID = 2001
	CmdID_GET_ROLES   CmdID = 2002
	CmdID_SELECT_ROLE CmdID = 2003
	CmdID_PLAYER_OUT  CmdID = 2004
	CmdID_GAME_OVER   CmdID = 2005
	// 退出当前进行中的游戏(破产后可以退出)
	CmdID_QUIT CmdID = 2006
	// 测试用，目前没有是永乐
	CmdID_TEST_PUSH CmdID = 2007 // Deprecated: Do not use.
	// 过了loading页，玩家主动发起进入游戏，目前没有使用
	CmdID_PLAYER_BEGIN CmdID = 2008 // Deprecated: Do not use.
	CmdID_PASS         CmdID = 2009
	// 掷骰子
	CmdID_NEXT_ROLL CmdID = 2010
	CmdID_ROLL      CmdID = 2011
	// 所有玩家已选择角色
	CmdID_PLAYERS_ALL_SELECTED_ROLE CmdID = 2012
	// 机会
	CmdID_CHOOSE_CHANCE CmdID = 2111
	CmdID_BUY           CmdID = 2112
	// 放弃机会，已废弃，新请求请使用 PASS
	CmdID_GIVEUP_CHANCE CmdID = 2113 // Deprecated: Do not use.
	// 在股票小机会里面卖股票（及理财），这个是非当前玩家也可以执行的
	CmdID_SELL_STOCK CmdID = 2114 // Deprecated: Do not use.
	// 机会子流程: 拍卖
	CmdID_START_AUCTION  CmdID = 2115
	CmdID_GIVEUP_AUCTION CmdID = 2116
	// DEPRECATED(QuantumGhost): 按目前的流程设计不需要加入拍卖了
	// JOIN_AUCTION             = 2117;     // 加入拍卖
	CmdID_OFFER_AUCTION_BID CmdID = 2118
	// DEPRECATED(QuantumGhost): 目前直接在出价的时候计算是否可以支付，不需要确认支付拍卖
	// CONFIRM_PAY_AUCTION         = 2119;     // 确认支付拍卖
	CmdID_AUCTION_TRY_RAISE CmdID = 2119
	CmdID_AUCTION_RESULT    CmdID = 2120
	CmdID_TRY_PAY           CmdID = 2121
	//银行借款、资产出售、还债流程
	// 未使用
	CmdID_BORROW_MONEY_QUOTAS CmdID = 2130 // Deprecated: Do not use.
	// 未使用
	CmdID_BORROW_MONEY_CONFIRM CmdID = 2132 // Deprecated: Do not use.
	// 获取可售资产
	CmdID_GET_CAN_SELL_PLAYER_ASSET CmdID = 2133
	// 卖
	CmdID_SELL CmdID = 2134 // Deprecated: Do not use.
	// 贷款
	CmdID_LOAN CmdID = 2135
	// 还贷款
	CmdID_REPAY_LOAN CmdID = 2136
	// 贷款资格查询, 返回利率, 推荐贷款列表, 贷款剩余额度
	CmdID_LOAN_QUALIFICATION CmdID = 2137
	// 偿还负债，未使用
	CmdID_REPAY_LIABILITIES CmdID = 2138 // Deprecated: Do not use.
	//薪资
	// NOTE(QuantumGhost): 新版路径没有确认结算日这一步了
	CmdID_COMPLETE_SALARY CmdID = 2140 // Deprecated: Do not use.
	// 确认破产，新版路径，负现金流的玩家路过结算日，无法支付支出导致破产时，
	// 需要前端发送这个请求，后端才会发送破产消息并进入下一回合
	// 相关讨论：http://bit.ly/2UU4cmw
	CmdID_CONFIRM_BANKRUPT CmdID = 2141
	//意外消费
	CmdID_PAY_ACCIDENT_CONSUME  CmdID = 2150
	CmdID_CONFIRM_MARKET_CHANGE CmdID = 2151
	// 生小孩发红包
	// 这个地方原来有生小孩这个业务场景，后来去掉了，这两个指令也不需要了
	CmdID_PAY_CHILD_BORN_REDPACKET CmdID = 2160 // Deprecated: Do not use.
	CmdID_IGNORE_CHILD_BORN        CmdID = 2161 // Deprecated: Do not use.
	//升值加薪
	CmdID_WAGE_HIKE_ROLL CmdID = 2170
	// 失业
	CmdID_UNEMPLOYMENT_ACK CmdID = 2180
	// 结束当前市场信息，已废弃，请使用 PASS
	CmdID_COMPLETE_MARKET CmdID = 2190 // Deprecated: Do not use.
	// 获取当前游戏中所有 scenario 的 img_file 列表
	CmdID_GET_UNIQUE_SCENARIO_IMG_NAME CmdID = 2191
	// 获取所有玩家数据，未使用（见 GET_STATEMENT）
	CmdID_GET_FINANCIAL_REPORTS CmdID = 3000 // Deprecated: Do not use.
	// 获取一个玩家资产，未使用
	CmdID_GET_PLAYER_ASSET CmdID = 3001 // Deprecated: Do not use.
	// 获取贷款资产
	CmdID_GET_PLAYER_LOAN_ASSET CmdID = 3002
	// 获取财务报表
	CmdID_GET_STATEMENT CmdID = 3003
	// 卖出资产, 所有可售出的资产都能通过该命令卖出
	CmdID_SELL_ASSETS CmdID = 3004
	// 玩家累计 N 次不投骰子后惩罚, 后面会将玩家轮空, 后续扩展的惩罚都可以用该 CMD
	CmdID_DISHONORABLE_PUNISH CmdID = 3005
)

var CmdID_name = map[int32]string{
	0:    "DEFAULT",
	1:    "LOGIN",
	3:    "PUSH",
	6:    "HEARBEAT",
	10:   "CHECK_PLAYING",
	20:   "SIGNALLING",
	21:   "AFK",
	22:   "RE_CONNECT",
	1000: "LOBBY_ACTION",
	1005: "MATCHING",
	1006: "EXIT_MATCH",
	1015: "PREPARE",
	1016: "ANYONE_TIMEOUT",
	1020: "ALL_READY",
	1021: "START_MATCHING",
	1022: "EXIT_ROOM",
	1023: "ROOM_INFO",
	1024: "CREATE_ROOM",
	1025: "GET_AVAILABLE_ROOM_SIZE",
	1026: "INVITE",
	1027: "ENTER_ROOM",
	1029: "GET_PLAYER_STATE",
	1030: "REMOVE_PLAYER_FROM_ROOM",
	1031: "UPDATE_ROOM_OPTION",
	1032: "GET_AVAILABLE_MAPS",
	2000: "GAME_ACTION",
	2001: "SYNC_STATE",
	2002: "GET_ROLES",
	2003: "SELECT_ROLE",
	2004: "PLAYER_OUT",
	2005: "GAME_OVER",
	2006: "QUIT",
	2007: "TEST_PUSH",
	2008: "PLAYER_BEGIN",
	2009: "PASS",
	2010: "NEXT_ROLL",
	2011: "ROLL",
	2012: "PLAYERS_ALL_SELECTED_ROLE",
	2111: "CHOOSE_CHANCE",
	2112: "BUY",
	2113: "GIVEUP_CHANCE",
	2114: "SELL_STOCK",
	2115: "START_AUCTION",
	2116: "GIVEUP_AUCTION",
	2118: "OFFER_AUCTION_BID",
	2119: "AUCTION_TRY_RAISE",
	2120: "AUCTION_RESULT",
	2121: "TRY_PAY",
	2130: "BORROW_MONEY_QUOTAS",
	2132: "BORROW_MONEY_CONFIRM",
	2133: "GET_CAN_SELL_PLAYER_ASSET",
	2134: "SELL",
	2135: "LOAN",
	2136: "REPAY_LOAN",
	2137: "LOAN_QUALIFICATION",
	2138: "REPAY_LIABILITIES",
	2140: "COMPLETE_SALARY",
	2141: "CONFIRM_BANKRUPT",
	2150: "PAY_ACCIDENT_CONSUME",
	2151: "CONFIRM_MARKET_CHANGE",
	2160: "PAY_CHILD_BORN_REDPACKET",
	2161: "IGNORE_CHILD_BORN",
	2170: "WAGE_HIKE_ROLL",
	2180: "UNEMPLOYMENT_ACK",
	2190: "COMPLETE_MARKET",
	2191: "GET_UNIQUE_SCENARIO_IMG_NAME",
	3000: "GET_FINANCIAL_REPORTS",
	3001: "GET_PLAYER_ASSET",
	3002: "GET_PLAYER_LOAN_ASSET",
	3003: "GET_STATEMENT",
	3004: "SELL_ASSETS",
	3005: "DISHONORABLE_PUNISH",
}

var CmdID_value = map[string]int32{
	"DEFAULT":                      0,
	"LOGIN":                        1,
	"PUSH":                         3,
	"HEARBEAT":                     6,
	"CHECK_PLAYING":                10,
	"SIGNALLING":                   20,
	"AFK":                          21,
	"RE_CONNECT":                   22,
	"LOBBY_ACTION":                 1000,
	"MATCHING":                     1005,
	"EXIT_MATCH":                   1006,
	"PREPARE":                      1015,
	"ANYONE_TIMEOUT":               1016,
	"ALL_READY":                    1020,
	"START_MATCHING":               1021,
	"EXIT_ROOM":                    1022,
	"ROOM_INFO":                    1023,
	"CREATE_ROOM":                  1024,
	"GET_AVAILABLE_ROOM_SIZE":      1025,
	"INVITE":                       1026,
	"ENTER_ROOM":                   1027,
	"GET_PLAYER_STATE":             1029,
	"REMOVE_PLAYER_FROM_ROOM":      1030,
	"UPDATE_ROOM_OPTION":           1031,
	"GET_AVAILABLE_MAPS":           1032,
	"GAME_ACTION":                  2000,
	"SYNC_STATE":                   2001,
	"GET_ROLES":                    2002,
	"SELECT_ROLE":                  2003,
	"PLAYER_OUT":                   2004,
	"GAME_OVER":                    2005,
	"QUIT":                         2006,
	"TEST_PUSH":                    2007,
	"PLAYER_BEGIN":                 2008,
	"PASS":                         2009,
	"NEXT_ROLL":                    2010,
	"ROLL":                         2011,
	"PLAYERS_ALL_SELECTED_ROLE":    2012,
	"CHOOSE_CHANCE":                2111,
	"BUY":                          2112,
	"GIVEUP_CHANCE":                2113,
	"SELL_STOCK":                   2114,
	"START_AUCTION":                2115,
	"GIVEUP_AUCTION":               2116,
	"OFFER_AUCTION_BID":            2118,
	"AUCTION_TRY_RAISE":            2119,
	"AUCTION_RESULT":               2120,
	"TRY_PAY":                      2121,
	"BORROW_MONEY_QUOTAS":          2130,
	"BORROW_MONEY_CONFIRM":         2132,
	"GET_CAN_SELL_PLAYER_ASSET":    2133,
	"SELL":                         2134,
	"LOAN":                         2135,
	"REPAY_LOAN":                   2136,
	"LOAN_QUALIFICATION":           2137,
	"REPAY_LIABILITIES":            2138,
	"COMPLETE_SALARY":              2140,
	"CONFIRM_BANKRUPT":             2141,
	"PAY_ACCIDENT_CONSUME":         2150,
	"CONFIRM_MARKET_CHANGE":        2151,
	"PAY_CHILD_BORN_REDPACKET":     2160,
	"IGNORE_CHILD_BORN":            2161,
	"WAGE_HIKE_ROLL":               2170,
	"UNEMPLOYMENT_ACK":             2180,
	"COMPLETE_MARKET":              2190,
	"GET_UNIQUE_SCENARIO_IMG_NAME": 2191,
	"GET_FINANCIAL_REPORTS":        3000,
	"GET_PLAYER_ASSET":             3001,
	"GET_PLAYER_LOAN_ASSET":        3002,
	"GET_STATEMENT":                3003,
	"SELL_ASSETS":                  3004,
	"DISHONORABLE_PUNISH":          3005,
}

func (x CmdID) String() string {
	return proto.EnumName(CmdID_name, int32(x))
}

func (CmdID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1cc521817fb42b95, []int{0}
}

func init() {
	proto.RegisterEnum("pb.common.CmdID", CmdID_name, CmdID_value)
}

func init() { proto.RegisterFile("common/cmd.proto", fileDescriptor_1cc521817fb42b95) }

var fileDescriptor_1cc521817fb42b95 = []byte{
	// 992 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x55, 0xcb, 0x6f, 0x5b, 0xc5,
	0x17, 0xfe, 0xf5, 0xd7, 0xb4, 0xb6, 0x27, 0x71, 0x7c, 0x3c, 0x89, 0xeb, 0x24, 0x0a, 0x91, 0xba,
	0x41, 0x08, 0x89, 0x66, 0xc1, 0x5f, 0x70, 0xee, 0xf8, 0xd8, 0x1e, 0xf9, 0xde, 0x99, 0x9b, 0x99,
	0xb9, 0x69, 0x6f, 0x37, 0xa3, 0x26, 0xad, 0x2a, 0x24, 0x82, 0xa3, 0x36, 0xb0, 0xe6, 0x0d, 0x2b,
	0xf8, 0x77, 0x78, 0x8a, 0xa7, 0x78, 0xec, 0x4a, 0xe9, 0x9b, 0xb2, 0x05, 0x36, 0x20, 0x58, 0x81,
	0x10, 0x2f, 0xcd, 0x8c, 0x8d, 0xc8, 0xee, 0xfa, 0x3b, 0xe7, 0xfb, 0xe6, 0x3b, 0x8f, 0x19, 0x33,
	0xd8, 0x9f, 0x1e, 0x1c, 0x4c, 0x9f, 0xd9, 0xde, 0x3f, 0xb8, 0x7c, 0xee, 0xf0, 0xda, 0xf4, 0x68,
	0xca, 0x5b, 0x87, 0x7b, 0xe7, 0x12, 0xf8, 0xf8, 0x8d, 0x45, 0x76, 0x4a, 0x1c, 0x5c, 0x96, 0x03,
	0xbe, 0xc8, 0x1a, 0x03, 0x1a, 0x62, 0x95, 0x3b, 0xf8, 0x1f, 0x6f, 0xb1, 0x53, 0xb9, 0x1e, 0x49,
	0x05, 0x27, 0x78, 0x93, 0x2d, 0x94, 0x95, 0x1d, 0xc3, 0x49, 0xbe, 0xc4, 0x9a, 0x63, 0x42, 0x93,
	0x11, 0x3a, 0x38, 0xcd, 0xbb, 0xac, 0x2d, 0xc6, 0x24, 0x26, 0xbe, 0xcc, 0xb1, 0x96, 0x6a, 0x04,
	0x8c, 0x2f, 0x33, 0x66, 0xe5, 0x48, 0x61, 0x9e, 0x87, 0xdf, 0xab, 0xbc, 0xc1, 0x4e, 0xe2, 0x70,
	0x02, 0xbd, 0x10, 0x30, 0xe4, 0x85, 0x56, 0x8a, 0x84, 0x83, 0x33, 0xbc, 0xcb, 0x96, 0x72, 0x9d,
	0x65, 0xb5, 0x47, 0xe1, 0xa4, 0x56, 0xf0, 0x43, 0x83, 0xb7, 0x59, 0xb3, 0x40, 0x27, 0xc6, 0x81,
	0xf9, 0x63, 0x83, 0x77, 0x18, 0xa3, 0x0b, 0xd2, 0xf9, 0x88, 0xc1, 0x4f, 0x0d, 0xbe, 0xc4, 0x1a,
	0xa5, 0xa1, 0x12, 0x0d, 0xc1, 0xaf, 0x0d, 0xbe, 0xc2, 0x96, 0x51, 0xd5, 0x5a, 0x91, 0x77, 0xb2,
	0x20, 0x5d, 0x39, 0xf8, 0xad, 0xc1, 0x97, 0x59, 0x0b, 0xf3, 0xdc, 0x1b, 0xc2, 0x41, 0x0d, 0x7f,
	0xc4, 0x24, 0xeb, 0xd0, 0xcc, 0x44, 0x82, 0xf0, 0x9f, 0x31, 0x29, 0x0a, 0x1b, 0xad, 0x0b, 0xf8,
	0x2b, 0xfe, 0x0e, 0x9f, 0x5e, 0xaa, 0xa1, 0x86, 0xbf, 0x1b, 0x1c, 0xd8, 0xa2, 0x30, 0x84, 0x8e,
	0x52, 0xc6, 0xf3, 0x4d, 0xbe, 0xc9, 0xfa, 0x23, 0x72, 0x1e, 0x77, 0x51, 0xe6, 0x98, 0xe5, 0x29,
	0xe0, 0xad, 0xbc, 0x48, 0xf0, 0x42, 0x93, 0x2f, 0xb2, 0xd3, 0x52, 0xed, 0x4a, 0x47, 0xf0, 0x62,
	0x33, 0xba, 0x56, 0x8e, 0x4c, 0xe2, 0xbe, 0xd4, 0xe4, 0x3d, 0x06, 0x81, 0x1b, 0x5a, 0x44, 0xc6,
	0x5b, 0x87, 0x8e, 0xe0, 0x95, 0x28, 0x69, 0xa8, 0xd0, 0xbb, 0x34, 0x8f, 0x0c, 0x8d, 0x2e, 0x12,
	0xe9, 0xd5, 0x26, 0xef, 0x33, 0x5e, 0x95, 0x83, 0xb9, 0x05, 0xaf, 0xcb, 0xd8, 0xa3, 0xd7, 0x62,
	0xe0, 0xb8, 0x93, 0x02, 0x4b, 0x0b, 0xaf, 0x37, 0x83, 0xe9, 0x11, 0x16, 0x34, 0x6f, 0xe7, 0x8d,
	0x4e, 0x70, 0x62, 0x6b, 0x25, 0x66, 0x47, 0x7e, 0xd5, 0x09, 0x75, 0x06, 0xae, 0xd1, 0x39, 0x59,
	0xb8, 0xd9, 0x09, 0x14, 0x4b, 0x39, 0x89, 0x04, 0xc1, 0xd7, 0x91, 0x32, 0x73, 0x13, 0xfa, 0x79,
	0x2b, 0x51, 0x82, 0xaa, 0xde, 0x25, 0x03, 0xb7, 0x3b, 0xbc, 0xc5, 0x16, 0x76, 0x2a, 0xe9, 0xe0,
	0x4e, 0x87, 0x73, 0xd6, 0x72, 0x64, 0x9d, 0x8f, 0x9b, 0x71, 0xb7, 0xb3, 0xf1, 0xff, 0xe6, 0x09,
	0xde, 0x63, 0x4b, 0x33, 0x7e, 0x46, 0x61, 0x75, 0xee, 0x25, 0xb8, 0xc5, 0x16, 0x4a, 0xb4, 0x16,
	0xee, 0x47, 0x41, 0x45, 0x17, 0xe2, 0x89, 0x39, 0x3c, 0x88, 0x82, 0xf1, 0xf3, 0x9b, 0x0e, 0xdf,
	0x62, 0xeb, 0x89, 0x6c, 0x7d, 0x98, 0x61, 0xb2, 0x46, 0x83, 0x64, 0xee, 0x61, 0x38, 0xb0, 0x2d,
	0xc6, 0x5a, 0x5b, 0xf2, 0x62, 0x8c, 0x4a, 0x10, 0x7c, 0x00, 0xbc, 0xc9, 0x4e, 0x66, 0x55, 0x0d,
	0x1f, 0x02, 0x3f, 0xc3, 0xda, 0x23, 0xb9, 0x4b, 0x55, 0x39, 0x8f, 0x7e, 0x04, 0xf1, 0xec, 0x15,
	0xc6, 0x2c, 0x05, 0x39, 0xa7, 0xc5, 0x04, 0x3e, 0x4e, 0x20, 0x67, 0xed, 0xb4, 0x16, 0x58, 0xa5,
	0x76, 0x7d, 0x02, 0x61, 0x55, 0x66, 0x02, 0x73, 0xf0, 0xd3, 0xa0, 0xda, 0xd5, 0xc3, 0x21, 0x99,
	0x39, 0xe6, 0x33, 0x39, 0x80, 0xcf, 0x22, 0x3e, 0x47, 0x9c, 0xa9, 0xbd, 0x41, 0x69, 0x09, 0x3e,
	0x8f, 0x22, 0x73, 0xdc, 0x90, 0x0d, 0x17, 0xe9, 0x0b, 0x08, 0x7b, 0x1b, 0x92, 0x4a, 0xac, 0xe1,
	0x4b, 0xe0, 0x9b, 0x6c, 0x25, 0xd3, 0xc6, 0xe8, 0xf3, 0xbe, 0xd0, 0x8a, 0x6a, 0xbf, 0x53, 0x69,
	0x87, 0x16, 0x6e, 0x26, 0x67, 0x8f, 0xb0, 0xd5, 0x63, 0x51, 0xa1, 0xd5, 0x50, 0x9a, 0x02, 0x6e,
	0xa5, 0xf0, 0x16, 0x5b, 0x0f, 0x23, 0x14, 0xa8, 0x7c, 0xac, 0x6a, 0xd6, 0x6d, 0xb4, 0x96, 0x1c,
	0xdc, 0x06, 0xde, 0x66, 0x0b, 0x01, 0x87, 0x3b, 0x30, 0x6f, 0x7c, 0xae, 0x51, 0xc1, 0x5d, 0x08,
	0xa3, 0x0d, 0x77, 0xa7, 0xf6, 0x11, 0xb8, 0x07, 0x61, 0x93, 0xc2, 0xa7, 0xdf, 0xa9, 0x30, 0x97,
	0x43, 0x29, 0x30, 0xd6, 0x7c, 0x1f, 0xf8, 0x06, 0xeb, 0xce, 0x32, 0x25, 0x66, 0x32, 0x97, 0x4e,
	0x92, 0x85, 0x07, 0x49, 0x70, 0x8d, 0x75, 0x84, 0x2e, 0xca, 0x9c, 0x1c, 0x79, 0x8b, 0x39, 0x9a,
	0x1a, 0x1e, 0xc2, 0x6c, 0xf4, 0x30, 0xf3, 0xea, 0x33, 0x54, 0x13, 0x53, 0x95, 0x0e, 0xbe, 0x05,
	0xbe, 0xce, 0x56, 0x83, 0x14, 0x0a, 0x21, 0x07, 0xa4, 0x5c, 0xa8, 0xc7, 0x56, 0x05, 0xc1, 0x77,
	0xe1, 0x9c, 0xde, 0x9c, 0x51, 0xa0, 0x99, 0x84, 0xb2, 0xc6, 0xa8, 0x46, 0x04, 0xdf, 0x03, 0x3f,
	0xcb, 0xd6, 0x02, 0x4d, 0x8c, 0x65, 0x3e, 0xf0, 0x99, 0x36, 0xa1, 0x9d, 0x83, 0x12, 0xc5, 0x84,
	0x1c, 0xfc, 0x9c, 0x0e, 0xdc, 0x60, 0x5d, 0x39, 0x52, 0x3a, 0x3c, 0x2a, 0xff, 0x66, 0xc1, 0x2f,
	0xf3, 0xa1, 0x2f, 0x9f, 0xc7, 0x11, 0xf9, 0xb1, 0x9c, 0x50, 0x5a, 0xb5, 0xdf, 0x21, 0x38, 0xac,
	0x14, 0x15, 0x65, 0xae, 0xeb, 0x22, 0x58, 0x41, 0x31, 0x81, 0x97, 0xbb, 0xc7, 0x4a, 0x4a, 0x3e,
	0xe0, 0x8d, 0x6e, 0x54, 0x39, 0xcb, 0x36, 0x43, 0xb3, 0x2b, 0x25, 0x77, 0x2a, 0xf2, 0x56, 0x90,
	0x42, 0x23, 0xb5, 0x97, 0xc5, 0xc8, 0x2b, 0x2c, 0x08, 0xde, 0xec, 0xf2, 0x2d, 0xd6, 0x0b, 0x29,
	0x43, 0xa9, 0x50, 0x09, 0x89, 0xe1, 0xe5, 0x29, 0xb5, 0x71, 0x16, 0xde, 0xea, 0x47, 0x89, 0xf5,
	0x63, 0x97, 0x3f, 0x8d, 0xe9, 0xed, 0xfe, 0xcc, 0x7f, 0xef, 0x3f, 0xa1, 0x38, 0x8a, 0x14, 0x7f,
	0xa7, 0x1f, 0xf6, 0x33, 0xc4, 0xe2, 0xcd, 0x0d, 0x5e, 0xe1, 0xdd, 0xfe, 0xec, 0xb6, 0xe6, 0x29,
	0xc9, 0xc2, 0x7b, 0x7d, 0xbe, 0xc6, 0x56, 0x06, 0xd2, 0x8e, 0xb5, 0xd2, 0x26, 0x3e, 0x05, 0x65,
	0xa5, 0xa4, 0x1d, 0xc3, 0xfb, 0xfd, 0xec, 0xb1, 0x8b, 0x8f, 0x5e, 0x7d, 0xea, 0xe8, 0xe9, 0x4b,
	0xf1, 0x8d, 0xdf, 0x7e, 0xee, 0xca, 0xfe, 0xd1, 0xf4, 0xda, 0xb3, 0x87, 0xdb, 0x97, 0xae, 0x5f,
	0xbf, 0x72, 0xf4, 0xc4, 0xe1, 0xde, 0xf6, 0xd5, 0xe9, 0x76, 0x7a, 0xfc, 0xf7, 0x4e, 0xc7, 0xbf,
	0x83, 0x27, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x32, 0xd8, 0x05, 0x22, 0x06, 0x00, 0x00,
}
