import * as $protobuf from "protobufjs";
/** Namespace pb. */
export namespace pb {

    /** Namespace strange. */
    namespace strange {

        /** Properties of a HireStrangeReq. */
        interface IHireStrangeReq {

            /** HireStrangeReq size */
            size?: (Long|null);

            /** HireStrangeReq per */
            per?: (Long|null);

            /** HireStrangeReq room */
            room?: (Long|null);
        }

        /** Represents a HireStrangeReq. */
        class HireStrangeReq implements IHireStrangeReq {

            /**
             * Constructs a new HireStrangeReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.strange.IHireStrangeReq);

            /** HireStrangeReq size. */
            public size: Long;

            /** HireStrangeReq per. */
            public per: Long;

            /** HireStrangeReq room. */
            public room: Long;

            /**
             * Creates a new HireStrangeReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HireStrangeReq instance
             */
            public static create(properties?: pb.strange.IHireStrangeReq): pb.strange.HireStrangeReq;

            /**
             * Encodes the specified HireStrangeReq message. Does not implicitly {@link pb.strange.HireStrangeReq.verify|verify} messages.
             * @param message HireStrangeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.strange.IHireStrangeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HireStrangeReq message, length delimited. Does not implicitly {@link pb.strange.HireStrangeReq.verify|verify} messages.
             * @param message HireStrangeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.strange.IHireStrangeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HireStrangeReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HireStrangeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.strange.HireStrangeReq;

            /**
             * Decodes a HireStrangeReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HireStrangeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.strange.HireStrangeReq;

            /**
             * Verifies a HireStrangeReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HireStrangeReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HireStrangeReq
             */
            public static fromObject(object: { [k: string]: any }): pb.strange.HireStrangeReq;

            /**
             * Creates a plain object from a HireStrangeReq message. Also converts values to other types if specified.
             * @param message HireStrangeReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.strange.HireStrangeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HireStrangeReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HireStrageResp. */
        interface IHireStrageResp {

            /** HireStrageResp users */
            users?: (Long[]|null);
        }

        /** Represents a HireStrageResp. */
        class HireStrageResp implements IHireStrageResp {

            /**
             * Constructs a new HireStrageResp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.strange.IHireStrageResp);

            /** HireStrageResp users. */
            public users: Long[];

            /**
             * Creates a new HireStrageResp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HireStrageResp instance
             */
            public static create(properties?: pb.strange.IHireStrageResp): pb.strange.HireStrageResp;

            /**
             * Encodes the specified HireStrageResp message. Does not implicitly {@link pb.strange.HireStrageResp.verify|verify} messages.
             * @param message HireStrageResp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.strange.IHireStrageResp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HireStrageResp message, length delimited. Does not implicitly {@link pb.strange.HireStrageResp.verify|verify} messages.
             * @param message HireStrageResp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.strange.IHireStrageResp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HireStrageResp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HireStrageResp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.strange.HireStrageResp;

            /**
             * Decodes a HireStrageResp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HireStrageResp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.strange.HireStrageResp;

            /**
             * Verifies a HireStrageResp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HireStrageResp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HireStrageResp
             */
            public static fromObject(object: { [k: string]: any }): pb.strange.HireStrageResp;

            /**
             * Creates a plain object from a HireStrageResp message. Also converts values to other types if specified.
             * @param message HireStrageResp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.strange.HireStrageResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HireStrageResp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MatchCompletedNotify. */
        interface IMatchCompletedNotify {

            /** MatchCompletedNotify rooms */
            rooms?: ({ [k: string]: pb.strange.MatchCompletedNotify.Ivalue }|null);
        }

        /** Represents a MatchCompletedNotify. */
        class MatchCompletedNotify implements IMatchCompletedNotify {

            /**
             * Constructs a new MatchCompletedNotify.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.strange.IMatchCompletedNotify);

            /** MatchCompletedNotify rooms. */
            public rooms: { [k: string]: pb.strange.MatchCompletedNotify.Ivalue };

            /**
             * Creates a new MatchCompletedNotify instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MatchCompletedNotify instance
             */
            public static create(properties?: pb.strange.IMatchCompletedNotify): pb.strange.MatchCompletedNotify;

            /**
             * Encodes the specified MatchCompletedNotify message. Does not implicitly {@link pb.strange.MatchCompletedNotify.verify|verify} messages.
             * @param message MatchCompletedNotify message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.strange.IMatchCompletedNotify, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MatchCompletedNotify message, length delimited. Does not implicitly {@link pb.strange.MatchCompletedNotify.verify|verify} messages.
             * @param message MatchCompletedNotify message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.strange.IMatchCompletedNotify, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MatchCompletedNotify message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MatchCompletedNotify
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.strange.MatchCompletedNotify;

            /**
             * Decodes a MatchCompletedNotify message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MatchCompletedNotify
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.strange.MatchCompletedNotify;

            /**
             * Verifies a MatchCompletedNotify message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MatchCompletedNotify message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MatchCompletedNotify
             */
            public static fromObject(object: { [k: string]: any }): pb.strange.MatchCompletedNotify;

            /**
             * Creates a plain object from a MatchCompletedNotify message. Also converts values to other types if specified.
             * @param message MatchCompletedNotify
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.strange.MatchCompletedNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MatchCompletedNotify to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MatchCompletedNotify {

            /** Properties of a value. */
            interface Ivalue {

                /** value users */
                users?: (Long[]|null);
            }

            /** Represents a value. */
            class value implements Ivalue {

                /**
                 * Constructs a new value.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.strange.MatchCompletedNotify.Ivalue);

                /** value users. */
                public users: Long[];

                /**
                 * Creates a new value instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns value instance
                 */
                public static create(properties?: pb.strange.MatchCompletedNotify.Ivalue): pb.strange.MatchCompletedNotify.value;

                /**
                 * Encodes the specified value message. Does not implicitly {@link pb.strange.MatchCompletedNotify.value.verify|verify} messages.
                 * @param message value message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.strange.MatchCompletedNotify.Ivalue, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified value message, length delimited. Does not implicitly {@link pb.strange.MatchCompletedNotify.value.verify|verify} messages.
                 * @param message value message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.strange.MatchCompletedNotify.Ivalue, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a value message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.strange.MatchCompletedNotify.value;

                /**
                 * Decodes a value message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.strange.MatchCompletedNotify.value;

                /**
                 * Verifies a value message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a value message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns value
                 */
                public static fromObject(object: { [k: string]: any }): pb.strange.MatchCompletedNotify.value;

                /**
                 * Creates a plain object from a value message. Also converts values to other types if specified.
                 * @param message value
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.strange.MatchCompletedNotify.value, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this value to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Represents a StrangeService */
        class StrangeService extends $protobuf.rpc.Service {

            /**
             * Constructs a new StrangeService service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Creates new StrangeService service using the specified rpc implementation.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             * @returns RPC service. Useful where requests and/or responses are streamed.
             */
            public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): StrangeService;

            /**
             * Calls HireStrangers.
             * @param request HireStrangeReq message or plain object
             * @param callback Node-style callback called with the error, if any, and HireStrageResp
             */
            public hireStrangers(request: pb.strange.IHireStrangeReq, callback: pb.strange.StrangeService.HireStrangersCallback): void;

            /**
             * Calls HireStrangers.
             * @param request HireStrangeReq message or plain object
             * @returns Promise
             */
            public hireStrangers(request: pb.strange.IHireStrangeReq): Promise<pb.strange.HireStrageResp>;

            /**
             * Calls MatchCompleted.
             * @param request MatchCompletedNotify message or plain object
             * @param callback Node-style callback called with the error, if any, and Empty
             */
            public matchCompleted(request: pb.strange.IMatchCompletedNotify, callback: pb.strange.StrangeService.MatchCompletedCallback): void;

            /**
             * Calls MatchCompleted.
             * @param request MatchCompletedNotify message or plain object
             * @returns Promise
             */
            public matchCompleted(request: pb.strange.IMatchCompletedNotify): Promise<google.protobuf.Empty>;
        }

        namespace StrangeService {

            /**
             * Callback as used by {@link pb.strange.StrangeService#hireStrangers}.
             * @param error Error, if any
             * @param [response] HireStrageResp
             */
            type HireStrangersCallback = (error: (Error|null), response?: pb.strange.HireStrageResp) => void;

            /**
             * Callback as used by {@link pb.strange.StrangeService#matchCompleted}.
             * @param error Error, if any
             * @param [response] Empty
             */
            type MatchCompletedCallback = (error: (Error|null), response?: google.protobuf.Empty) => void;
        }
    }

    /** Namespace cenarius. */
    namespace cenarius {

        /** Properties of a GetPlayerInfoReq. */
        interface IGetPlayerInfoReq {

            /** GetPlayerInfoReq userIds */
            userIds?: (Long[]|null);
        }

        /** Represents a GetPlayerInfoReq. */
        class GetPlayerInfoReq implements IGetPlayerInfoReq {

            /**
             * Constructs a new GetPlayerInfoReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IGetPlayerInfoReq);

            /** GetPlayerInfoReq userIds. */
            public userIds: Long[];

            /**
             * Creates a new GetPlayerInfoReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerInfoReq instance
             */
            public static create(properties?: pb.cenarius.IGetPlayerInfoReq): pb.cenarius.GetPlayerInfoReq;

            /**
             * Encodes the specified GetPlayerInfoReq message. Does not implicitly {@link pb.cenarius.GetPlayerInfoReq.verify|verify} messages.
             * @param message GetPlayerInfoReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IGetPlayerInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerInfoReq message, length delimited. Does not implicitly {@link pb.cenarius.GetPlayerInfoReq.verify|verify} messages.
             * @param message GetPlayerInfoReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IGetPlayerInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerInfoReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerInfoReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.GetPlayerInfoReq;

            /**
             * Decodes a GetPlayerInfoReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerInfoReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.GetPlayerInfoReq;

            /**
             * Verifies a GetPlayerInfoReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerInfoReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerInfoReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.GetPlayerInfoReq;

            /**
             * Creates a plain object from a GetPlayerInfoReq message. Also converts values to other types if specified.
             * @param message GetPlayerInfoReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.GetPlayerInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerInfoReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetPlayerInfoRsp. */
        interface IGetPlayerInfoRsp {

            /** GetPlayerInfoRsp players */
            players?: (pb.common.IPlayerInfo[]|null);
        }

        /** Represents a GetPlayerInfoRsp. */
        class GetPlayerInfoRsp implements IGetPlayerInfoRsp {

            /**
             * Constructs a new GetPlayerInfoRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IGetPlayerInfoRsp);

            /** GetPlayerInfoRsp players. */
            public players: pb.common.IPlayerInfo[];

            /**
             * Creates a new GetPlayerInfoRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerInfoRsp instance
             */
            public static create(properties?: pb.cenarius.IGetPlayerInfoRsp): pb.cenarius.GetPlayerInfoRsp;

            /**
             * Encodes the specified GetPlayerInfoRsp message. Does not implicitly {@link pb.cenarius.GetPlayerInfoRsp.verify|verify} messages.
             * @param message GetPlayerInfoRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IGetPlayerInfoRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerInfoRsp message, length delimited. Does not implicitly {@link pb.cenarius.GetPlayerInfoRsp.verify|verify} messages.
             * @param message GetPlayerInfoRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IGetPlayerInfoRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerInfoRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerInfoRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.GetPlayerInfoRsp;

            /**
             * Decodes a GetPlayerInfoRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerInfoRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.GetPlayerInfoRsp;

            /**
             * Verifies a GetPlayerInfoRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerInfoRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerInfoRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.GetPlayerInfoRsp;

            /**
             * Creates a plain object from a GetPlayerInfoRsp message. Also converts values to other types if specified.
             * @param message GetPlayerInfoRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.GetPlayerInfoRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerInfoRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpdateUserCoinReq. */
        interface IUpdateUserCoinReq {

            /** UpdateUserCoinReq UserID */
            UserID?: (Long|null);

            /** UpdateUserCoinReq Coin */
            Coin?: (Long|null);

            /** UpdateUserCoinReq Comment */
            Comment?: (string|null);
        }

        /** Represents an UpdateUserCoinReq. */
        class UpdateUserCoinReq implements IUpdateUserCoinReq {

            /**
             * Constructs a new UpdateUserCoinReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IUpdateUserCoinReq);

            /** UpdateUserCoinReq UserID. */
            public UserID: Long;

            /** UpdateUserCoinReq Coin. */
            public Coin: Long;

            /** UpdateUserCoinReq Comment. */
            public Comment: string;

            /**
             * Creates a new UpdateUserCoinReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UpdateUserCoinReq instance
             */
            public static create(properties?: pb.cenarius.IUpdateUserCoinReq): pb.cenarius.UpdateUserCoinReq;

            /**
             * Encodes the specified UpdateUserCoinReq message. Does not implicitly {@link pb.cenarius.UpdateUserCoinReq.verify|verify} messages.
             * @param message UpdateUserCoinReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IUpdateUserCoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpdateUserCoinReq message, length delimited. Does not implicitly {@link pb.cenarius.UpdateUserCoinReq.verify|verify} messages.
             * @param message UpdateUserCoinReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IUpdateUserCoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpdateUserCoinReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpdateUserCoinReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.UpdateUserCoinReq;

            /**
             * Decodes an UpdateUserCoinReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpdateUserCoinReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.UpdateUserCoinReq;

            /**
             * Verifies an UpdateUserCoinReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpdateUserCoinReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpdateUserCoinReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.UpdateUserCoinReq;

            /**
             * Creates a plain object from an UpdateUserCoinReq message. Also converts values to other types if specified.
             * @param message UpdateUserCoinReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.UpdateUserCoinReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpdateUserCoinReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpdateUserCoinResp. */
        interface IUpdateUserCoinResp {

            /** UpdateUserCoinResp UserID */
            UserID?: (Long|null);

            /** UpdateUserCoinResp Coin */
            Coin?: (Long|null);
        }

        /** Represents an UpdateUserCoinResp. */
        class UpdateUserCoinResp implements IUpdateUserCoinResp {

            /**
             * Constructs a new UpdateUserCoinResp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IUpdateUserCoinResp);

            /** UpdateUserCoinResp UserID. */
            public UserID: Long;

            /** UpdateUserCoinResp Coin. */
            public Coin: Long;

            /**
             * Creates a new UpdateUserCoinResp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UpdateUserCoinResp instance
             */
            public static create(properties?: pb.cenarius.IUpdateUserCoinResp): pb.cenarius.UpdateUserCoinResp;

            /**
             * Encodes the specified UpdateUserCoinResp message. Does not implicitly {@link pb.cenarius.UpdateUserCoinResp.verify|verify} messages.
             * @param message UpdateUserCoinResp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IUpdateUserCoinResp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpdateUserCoinResp message, length delimited. Does not implicitly {@link pb.cenarius.UpdateUserCoinResp.verify|verify} messages.
             * @param message UpdateUserCoinResp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IUpdateUserCoinResp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpdateUserCoinResp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpdateUserCoinResp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.UpdateUserCoinResp;

            /**
             * Decodes an UpdateUserCoinResp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpdateUserCoinResp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.UpdateUserCoinResp;

            /**
             * Verifies an UpdateUserCoinResp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpdateUserCoinResp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpdateUserCoinResp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.UpdateUserCoinResp;

            /**
             * Creates a plain object from an UpdateUserCoinResp message. Also converts values to other types if specified.
             * @param message UpdateUserCoinResp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.UpdateUserCoinResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpdateUserCoinResp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BatchUpdateCoinReq. */
        interface IBatchUpdateCoinReq {

            /** BatchUpdateCoinReq Rows */
            Rows?: (pb.cenarius.IUpdateUserCoinReq[]|null);
        }

        /** Represents a BatchUpdateCoinReq. */
        class BatchUpdateCoinReq implements IBatchUpdateCoinReq {

            /**
             * Constructs a new BatchUpdateCoinReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IBatchUpdateCoinReq);

            /** BatchUpdateCoinReq Rows. */
            public Rows: pb.cenarius.IUpdateUserCoinReq[];

            /**
             * Creates a new BatchUpdateCoinReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BatchUpdateCoinReq instance
             */
            public static create(properties?: pb.cenarius.IBatchUpdateCoinReq): pb.cenarius.BatchUpdateCoinReq;

            /**
             * Encodes the specified BatchUpdateCoinReq message. Does not implicitly {@link pb.cenarius.BatchUpdateCoinReq.verify|verify} messages.
             * @param message BatchUpdateCoinReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IBatchUpdateCoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BatchUpdateCoinReq message, length delimited. Does not implicitly {@link pb.cenarius.BatchUpdateCoinReq.verify|verify} messages.
             * @param message BatchUpdateCoinReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IBatchUpdateCoinReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BatchUpdateCoinReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BatchUpdateCoinReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.BatchUpdateCoinReq;

            /**
             * Decodes a BatchUpdateCoinReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BatchUpdateCoinReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.BatchUpdateCoinReq;

            /**
             * Verifies a BatchUpdateCoinReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BatchUpdateCoinReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BatchUpdateCoinReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.BatchUpdateCoinReq;

            /**
             * Creates a plain object from a BatchUpdateCoinReq message. Also converts values to other types if specified.
             * @param message BatchUpdateCoinReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.BatchUpdateCoinReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BatchUpdateCoinReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BatchUpdateCoinResp. */
        interface IBatchUpdateCoinResp {

            /** BatchUpdateCoinResp SuccessUsers */
            SuccessUsers?: (Long[]|null);

            /** BatchUpdateCoinResp FaliedUsers */
            FaliedUsers?: (Long[]|null);

            /** BatchUpdateCoinResp results */
            results?: ({ [k: string]: pb.cenarius.IUpdateUserCoinResp }|null);
        }

        /** Represents a BatchUpdateCoinResp. */
        class BatchUpdateCoinResp implements IBatchUpdateCoinResp {

            /**
             * Constructs a new BatchUpdateCoinResp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IBatchUpdateCoinResp);

            /** BatchUpdateCoinResp SuccessUsers. */
            public SuccessUsers: Long[];

            /** BatchUpdateCoinResp FaliedUsers. */
            public FaliedUsers: Long[];

            /** BatchUpdateCoinResp results. */
            public results: { [k: string]: pb.cenarius.IUpdateUserCoinResp };

            /**
             * Creates a new BatchUpdateCoinResp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BatchUpdateCoinResp instance
             */
            public static create(properties?: pb.cenarius.IBatchUpdateCoinResp): pb.cenarius.BatchUpdateCoinResp;

            /**
             * Encodes the specified BatchUpdateCoinResp message. Does not implicitly {@link pb.cenarius.BatchUpdateCoinResp.verify|verify} messages.
             * @param message BatchUpdateCoinResp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IBatchUpdateCoinResp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BatchUpdateCoinResp message, length delimited. Does not implicitly {@link pb.cenarius.BatchUpdateCoinResp.verify|verify} messages.
             * @param message BatchUpdateCoinResp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IBatchUpdateCoinResp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BatchUpdateCoinResp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BatchUpdateCoinResp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.BatchUpdateCoinResp;

            /**
             * Decodes a BatchUpdateCoinResp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BatchUpdateCoinResp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.BatchUpdateCoinResp;

            /**
             * Verifies a BatchUpdateCoinResp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BatchUpdateCoinResp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BatchUpdateCoinResp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.BatchUpdateCoinResp;

            /**
             * Creates a plain object from a BatchUpdateCoinResp message. Also converts values to other types if specified.
             * @param message BatchUpdateCoinResp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.BatchUpdateCoinResp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BatchUpdateCoinResp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AuthenticationReq. */
        interface IAuthenticationReq {

            /** AuthenticationReq token */
            token?: (string|null);
        }

        /** Represents an AuthenticationReq. */
        class AuthenticationReq implements IAuthenticationReq {

            /**
             * Constructs a new AuthenticationReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IAuthenticationReq);

            /** AuthenticationReq token. */
            public token: string;

            /**
             * Creates a new AuthenticationReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AuthenticationReq instance
             */
            public static create(properties?: pb.cenarius.IAuthenticationReq): pb.cenarius.AuthenticationReq;

            /**
             * Encodes the specified AuthenticationReq message. Does not implicitly {@link pb.cenarius.AuthenticationReq.verify|verify} messages.
             * @param message AuthenticationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IAuthenticationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AuthenticationReq message, length delimited. Does not implicitly {@link pb.cenarius.AuthenticationReq.verify|verify} messages.
             * @param message AuthenticationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IAuthenticationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AuthenticationReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AuthenticationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.AuthenticationReq;

            /**
             * Decodes an AuthenticationReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AuthenticationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.AuthenticationReq;

            /**
             * Verifies an AuthenticationReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AuthenticationReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AuthenticationReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.AuthenticationReq;

            /**
             * Creates a plain object from an AuthenticationReq message. Also converts values to other types if specified.
             * @param message AuthenticationReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.AuthenticationReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AuthenticationReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ListBotsReq. */
        interface IListBotsReq {

            /** ListBotsReq pagination */
            pagination?: (pb.common.IPaginationReq|null);
        }

        /** Represents a ListBotsReq. */
        class ListBotsReq implements IListBotsReq {

            /**
             * Constructs a new ListBotsReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IListBotsReq);

            /** ListBotsReq pagination. */
            public pagination?: (pb.common.IPaginationReq|null);

            /**
             * Creates a new ListBotsReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ListBotsReq instance
             */
            public static create(properties?: pb.cenarius.IListBotsReq): pb.cenarius.ListBotsReq;

            /**
             * Encodes the specified ListBotsReq message. Does not implicitly {@link pb.cenarius.ListBotsReq.verify|verify} messages.
             * @param message ListBotsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IListBotsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ListBotsReq message, length delimited. Does not implicitly {@link pb.cenarius.ListBotsReq.verify|verify} messages.
             * @param message ListBotsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IListBotsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ListBotsReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ListBotsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.ListBotsReq;

            /**
             * Decodes a ListBotsReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ListBotsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.ListBotsReq;

            /**
             * Verifies a ListBotsReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ListBotsReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ListBotsReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.ListBotsReq;

            /**
             * Creates a plain object from a ListBotsReq message. Also converts values to other types if specified.
             * @param message ListBotsReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.ListBotsReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ListBotsReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BotInfo. */
        interface IBotInfo {

            /** BotInfo token */
            token?: (string|null);

            /** BotInfo hideId */
            hideId?: (Long|null);
        }

        /** Represents a BotInfo. */
        class BotInfo implements IBotInfo {

            /**
             * Constructs a new BotInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IBotInfo);

            /** BotInfo token. */
            public token: string;

            /** BotInfo hideId. */
            public hideId: Long;

            /**
             * Creates a new BotInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BotInfo instance
             */
            public static create(properties?: pb.cenarius.IBotInfo): pb.cenarius.BotInfo;

            /**
             * Encodes the specified BotInfo message. Does not implicitly {@link pb.cenarius.BotInfo.verify|verify} messages.
             * @param message BotInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IBotInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BotInfo message, length delimited. Does not implicitly {@link pb.cenarius.BotInfo.verify|verify} messages.
             * @param message BotInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IBotInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BotInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BotInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.BotInfo;

            /**
             * Decodes a BotInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BotInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.BotInfo;

            /**
             * Verifies a BotInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BotInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BotInfo
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.BotInfo;

            /**
             * Creates a plain object from a BotInfo message. Also converts values to other types if specified.
             * @param message BotInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.BotInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BotInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ListBotsRsp. */
        interface IListBotsRsp {

            /** ListBotsRsp bots */
            bots?: (pb.cenarius.IBotInfo[]|null);

            /** ListBotsRsp pagination */
            pagination?: (pb.common.IPaginationRsp|null);
        }

        /** Represents a ListBotsRsp. */
        class ListBotsRsp implements IListBotsRsp {

            /**
             * Constructs a new ListBotsRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IListBotsRsp);

            /** ListBotsRsp bots. */
            public bots: pb.cenarius.IBotInfo[];

            /** ListBotsRsp pagination. */
            public pagination?: (pb.common.IPaginationRsp|null);

            /**
             * Creates a new ListBotsRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ListBotsRsp instance
             */
            public static create(properties?: pb.cenarius.IListBotsRsp): pb.cenarius.ListBotsRsp;

            /**
             * Encodes the specified ListBotsRsp message. Does not implicitly {@link pb.cenarius.ListBotsRsp.verify|verify} messages.
             * @param message ListBotsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IListBotsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ListBotsRsp message, length delimited. Does not implicitly {@link pb.cenarius.ListBotsRsp.verify|verify} messages.
             * @param message ListBotsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IListBotsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ListBotsRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ListBotsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.ListBotsRsp;

            /**
             * Decodes a ListBotsRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ListBotsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.ListBotsRsp;

            /**
             * Verifies a ListBotsRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ListBotsRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ListBotsRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.ListBotsRsp;

            /**
             * Creates a plain object from a ListBotsRsp message. Also converts values to other types if specified.
             * @param message ListBotsRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.ListBotsRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ListBotsRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Role. */
        interface IRole {

            /** Role ID */
            ID?: (Long|null);

            /** Role name */
            name?: (string|null);

            /** Role industry */
            industry?: (string|null);

            /** Role salary */
            salary?: (Long|null);

            /** Role expense */
            expense?: (Long|null);

            /** Role houseLoan */
            houseLoan?: (Long|null);

            /** Role carLoan */
            carLoan?: (Long|null);

            /** Role creditCard */
            creditCard?: (Long|null);

            /** Role borrowMoney */
            borrowMoney?: (Long|null);

            /** Role bankLoan */
            bankLoan?: (Long|null);

            /** Role taxTatePCT */
            taxTatePCT?: (number|null);

            /** Role houseRatePCT */
            houseRatePCT?: (number|null);

            /** Role carRatePCT */
            carRatePCT?: (number|null);

            /** Role creditCardRatePCT */
            creditCardRatePCT?: (number|null);

            /** Role borrowMoneyRatePCT */
            borrowMoneyRatePCT?: (number|null);

            /** Role bankLoanRatePCT */
            bankLoanRatePCT?: (number|null);

            /** Role taxAndSpendPCT */
            taxAndSpendPCT?: (number|null);

            /** Role babySpendPCT */
            babySpendPCT?: (number|null);

            /** Role wageHikePCT */
            wageHikePCT?: (number|null);

            /** Role flag */
            flag?: (string|null);

            /** Role available */
            available?: (boolean|null);

            /** Role free */
            free?: (boolean|null);

            /** Role avatar */
            avatar?: (string|null);

            /** Role promotions */
            promotions?: (string[]|null);

            /** Role _insuranceAndHousingFund */
            _insuranceAndHousingFund?: (Long|null);

            /** Role _houseExpense */
            _houseExpense?: (Long|null);

            /** Role _carExpense */
            _carExpense?: (Long|null);

            /** Role _creditCardExpense */
            _creditCardExpense?: (Long|null);

            /** Role _borrowMoneyExpense */
            _borrowMoneyExpense?: (Long|null);

            /** Role _babyExpense */
            _babyExpense?: (Long|null);

            /** Role _bankLoanExpense */
            _bankLoanExpense?: (Long|null);

            /** Role assets */
            assets?: (pb.cenarius.IRoleAsset[]|null);
        }

        /** Represents a Role. */
        class Role implements IRole {

            /**
             * Constructs a new Role.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IRole);

            /** Role ID. */
            public ID: Long;

            /** Role name. */
            public name: string;

            /** Role industry. */
            public industry: string;

            /** Role salary. */
            public salary: Long;

            /** Role expense. */
            public expense: Long;

            /** Role houseLoan. */
            public houseLoan: Long;

            /** Role carLoan. */
            public carLoan: Long;

            /** Role creditCard. */
            public creditCard: Long;

            /** Role borrowMoney. */
            public borrowMoney: Long;

            /** Role bankLoan. */
            public bankLoan: Long;

            /** Role taxTatePCT. */
            public taxTatePCT: number;

            /** Role houseRatePCT. */
            public houseRatePCT: number;

            /** Role carRatePCT. */
            public carRatePCT: number;

            /** Role creditCardRatePCT. */
            public creditCardRatePCT: number;

            /** Role borrowMoneyRatePCT. */
            public borrowMoneyRatePCT: number;

            /** Role bankLoanRatePCT. */
            public bankLoanRatePCT: number;

            /** Role taxAndSpendPCT. */
            public taxAndSpendPCT: number;

            /** Role babySpendPCT. */
            public babySpendPCT: number;

            /** Role wageHikePCT. */
            public wageHikePCT: number;

            /** Role flag. */
            public flag: string;

            /** Role available. */
            public available: boolean;

            /** Role free. */
            public free: boolean;

            /** Role avatar. */
            public avatar: string;

            /** Role promotions. */
            public promotions: string[];

            /** Role _insuranceAndHousingFund. */
            public _insuranceAndHousingFund: Long;

            /** Role _houseExpense. */
            public _houseExpense: Long;

            /** Role _carExpense. */
            public _carExpense: Long;

            /** Role _creditCardExpense. */
            public _creditCardExpense: Long;

            /** Role _borrowMoneyExpense. */
            public _borrowMoneyExpense: Long;

            /** Role _babyExpense. */
            public _babyExpense: Long;

            /** Role _bankLoanExpense. */
            public _bankLoanExpense: Long;

            /** Role assets. */
            public assets: pb.cenarius.IRoleAsset[];

            /**
             * Creates a new Role instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Role instance
             */
            public static create(properties?: pb.cenarius.IRole): pb.cenarius.Role;

            /**
             * Encodes the specified Role message. Does not implicitly {@link pb.cenarius.Role.verify|verify} messages.
             * @param message Role message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Role message, length delimited. Does not implicitly {@link pb.cenarius.Role.verify|verify} messages.
             * @param message Role message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Role message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Role
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.Role;

            /**
             * Decodes a Role message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Role
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.Role;

            /**
             * Verifies a Role message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Role message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Role
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.Role;

            /**
             * Creates a plain object from a Role message. Also converts values to other types if specified.
             * @param message Role
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.Role, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Role to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PullRolesRsp. */
        interface IPullRolesRsp {

            /** PullRolesRsp roles */
            roles?: (pb.cenarius.IRole[]|null);
        }

        /** Represents a PullRolesRsp. */
        class PullRolesRsp implements IPullRolesRsp {

            /**
             * Constructs a new PullRolesRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IPullRolesRsp);

            /** PullRolesRsp roles. */
            public roles: pb.cenarius.IRole[];

            /**
             * Creates a new PullRolesRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PullRolesRsp instance
             */
            public static create(properties?: pb.cenarius.IPullRolesRsp): pb.cenarius.PullRolesRsp;

            /**
             * Encodes the specified PullRolesRsp message. Does not implicitly {@link pb.cenarius.PullRolesRsp.verify|verify} messages.
             * @param message PullRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IPullRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PullRolesRsp message, length delimited. Does not implicitly {@link pb.cenarius.PullRolesRsp.verify|verify} messages.
             * @param message PullRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IPullRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PullRolesRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PullRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.PullRolesRsp;

            /**
             * Decodes a PullRolesRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PullRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.PullRolesRsp;

            /**
             * Verifies a PullRolesRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PullRolesRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PullRolesRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.PullRolesRsp;

            /**
             * Creates a plain object from a PullRolesRsp message. Also converts values to other types if specified.
             * @param message PullRolesRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.PullRolesRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PullRolesRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a UserAvailableRole. */
        interface IUserAvailableRole {

            /** UserAvailableRole role */
            role?: (pb.cenarius.IRole|null);

            /** UserAvailableRole purchased */
            purchased?: (boolean|null);

            /** UserAvailableRole free */
            free?: (boolean|null);
        }

        /** Represents a UserAvailableRole. */
        class UserAvailableRole implements IUserAvailableRole {

            /**
             * Constructs a new UserAvailableRole.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IUserAvailableRole);

            /** UserAvailableRole role. */
            public role?: (pb.cenarius.IRole|null);

            /** UserAvailableRole purchased. */
            public purchased: boolean;

            /** UserAvailableRole free. */
            public free: boolean;

            /**
             * Creates a new UserAvailableRole instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserAvailableRole instance
             */
            public static create(properties?: pb.cenarius.IUserAvailableRole): pb.cenarius.UserAvailableRole;

            /**
             * Encodes the specified UserAvailableRole message. Does not implicitly {@link pb.cenarius.UserAvailableRole.verify|verify} messages.
             * @param message UserAvailableRole message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IUserAvailableRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UserAvailableRole message, length delimited. Does not implicitly {@link pb.cenarius.UserAvailableRole.verify|verify} messages.
             * @param message UserAvailableRole message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IUserAvailableRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a UserAvailableRole message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserAvailableRole
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.UserAvailableRole;

            /**
             * Decodes a UserAvailableRole message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserAvailableRole
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.UserAvailableRole;

            /**
             * Verifies a UserAvailableRole message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserAvailableRole message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserAvailableRole
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.UserAvailableRole;

            /**
             * Creates a plain object from a UserAvailableRole message. Also converts values to other types if specified.
             * @param message UserAvailableRole
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.UserAvailableRole, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserAvailableRole to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FetchUserRolesReq. */
        interface IFetchUserRolesReq {

            /** FetchUserRolesReq userID */
            userID?: (Long|null);
        }

        /** Represents a FetchUserRolesReq. */
        class FetchUserRolesReq implements IFetchUserRolesReq {

            /**
             * Constructs a new FetchUserRolesReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IFetchUserRolesReq);

            /** FetchUserRolesReq userID. */
            public userID: Long;

            /**
             * Creates a new FetchUserRolesReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FetchUserRolesReq instance
             */
            public static create(properties?: pb.cenarius.IFetchUserRolesReq): pb.cenarius.FetchUserRolesReq;

            /**
             * Encodes the specified FetchUserRolesReq message. Does not implicitly {@link pb.cenarius.FetchUserRolesReq.verify|verify} messages.
             * @param message FetchUserRolesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IFetchUserRolesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FetchUserRolesReq message, length delimited. Does not implicitly {@link pb.cenarius.FetchUserRolesReq.verify|verify} messages.
             * @param message FetchUserRolesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IFetchUserRolesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FetchUserRolesReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FetchUserRolesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.FetchUserRolesReq;

            /**
             * Decodes a FetchUserRolesReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FetchUserRolesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.FetchUserRolesReq;

            /**
             * Verifies a FetchUserRolesReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FetchUserRolesReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FetchUserRolesReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.FetchUserRolesReq;

            /**
             * Creates a plain object from a FetchUserRolesReq message. Also converts values to other types if specified.
             * @param message FetchUserRolesReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.FetchUserRolesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FetchUserRolesReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FetchUserRolesRsp. */
        interface IFetchUserRolesRsp {

            /** FetchUserRolesRsp roles */
            roles?: (pb.cenarius.IUserAvailableRole[]|null);
        }

        /** Represents a FetchUserRolesRsp. */
        class FetchUserRolesRsp implements IFetchUserRolesRsp {

            /**
             * Constructs a new FetchUserRolesRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IFetchUserRolesRsp);

            /** FetchUserRolesRsp roles. */
            public roles: pb.cenarius.IUserAvailableRole[];

            /**
             * Creates a new FetchUserRolesRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FetchUserRolesRsp instance
             */
            public static create(properties?: pb.cenarius.IFetchUserRolesRsp): pb.cenarius.FetchUserRolesRsp;

            /**
             * Encodes the specified FetchUserRolesRsp message. Does not implicitly {@link pb.cenarius.FetchUserRolesRsp.verify|verify} messages.
             * @param message FetchUserRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IFetchUserRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FetchUserRolesRsp message, length delimited. Does not implicitly {@link pb.cenarius.FetchUserRolesRsp.verify|verify} messages.
             * @param message FetchUserRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IFetchUserRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FetchUserRolesRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FetchUserRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.FetchUserRolesRsp;

            /**
             * Decodes a FetchUserRolesRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FetchUserRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.FetchUserRolesRsp;

            /**
             * Verifies a FetchUserRolesRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FetchUserRolesRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FetchUserRolesRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.FetchUserRolesRsp;

            /**
             * Creates a plain object from a FetchUserRolesRsp message. Also converts values to other types if specified.
             * @param message FetchUserRolesRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.FetchUserRolesRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FetchUserRolesRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BatchFetchUserRolesReq. */
        interface IBatchFetchUserRolesReq {

            /** BatchFetchUserRolesReq users */
            users?: (Long[]|null);
        }

        /** Represents a BatchFetchUserRolesReq. */
        class BatchFetchUserRolesReq implements IBatchFetchUserRolesReq {

            /**
             * Constructs a new BatchFetchUserRolesReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IBatchFetchUserRolesReq);

            /** BatchFetchUserRolesReq users. */
            public users: Long[];

            /**
             * Creates a new BatchFetchUserRolesReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BatchFetchUserRolesReq instance
             */
            public static create(properties?: pb.cenarius.IBatchFetchUserRolesReq): pb.cenarius.BatchFetchUserRolesReq;

            /**
             * Encodes the specified BatchFetchUserRolesReq message. Does not implicitly {@link pb.cenarius.BatchFetchUserRolesReq.verify|verify} messages.
             * @param message BatchFetchUserRolesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IBatchFetchUserRolesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BatchFetchUserRolesReq message, length delimited. Does not implicitly {@link pb.cenarius.BatchFetchUserRolesReq.verify|verify} messages.
             * @param message BatchFetchUserRolesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IBatchFetchUserRolesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BatchFetchUserRolesReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BatchFetchUserRolesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.BatchFetchUserRolesReq;

            /**
             * Decodes a BatchFetchUserRolesReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BatchFetchUserRolesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.BatchFetchUserRolesReq;

            /**
             * Verifies a BatchFetchUserRolesReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BatchFetchUserRolesReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BatchFetchUserRolesReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.BatchFetchUserRolesReq;

            /**
             * Creates a plain object from a BatchFetchUserRolesReq message. Also converts values to other types if specified.
             * @param message BatchFetchUserRolesReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.BatchFetchUserRolesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BatchFetchUserRolesReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BatchFetchUserRolesRsp. */
        interface IBatchFetchUserRolesRsp {

            /** BatchFetchUserRolesRsp records */
            records?: ({ [k: string]: pb.cenarius.IFetchUserRolesRsp }|null);
        }

        /** Represents a BatchFetchUserRolesRsp. */
        class BatchFetchUserRolesRsp implements IBatchFetchUserRolesRsp {

            /**
             * Constructs a new BatchFetchUserRolesRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IBatchFetchUserRolesRsp);

            /** BatchFetchUserRolesRsp records. */
            public records: { [k: string]: pb.cenarius.IFetchUserRolesRsp };

            /**
             * Creates a new BatchFetchUserRolesRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BatchFetchUserRolesRsp instance
             */
            public static create(properties?: pb.cenarius.IBatchFetchUserRolesRsp): pb.cenarius.BatchFetchUserRolesRsp;

            /**
             * Encodes the specified BatchFetchUserRolesRsp message. Does not implicitly {@link pb.cenarius.BatchFetchUserRolesRsp.verify|verify} messages.
             * @param message BatchFetchUserRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IBatchFetchUserRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BatchFetchUserRolesRsp message, length delimited. Does not implicitly {@link pb.cenarius.BatchFetchUserRolesRsp.verify|verify} messages.
             * @param message BatchFetchUserRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IBatchFetchUserRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BatchFetchUserRolesRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BatchFetchUserRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.BatchFetchUserRolesRsp;

            /**
             * Decodes a BatchFetchUserRolesRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BatchFetchUserRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.BatchFetchUserRolesRsp;

            /**
             * Verifies a BatchFetchUserRolesRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BatchFetchUserRolesRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BatchFetchUserRolesRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.BatchFetchUserRolesRsp;

            /**
             * Creates a plain object from a BatchFetchUserRolesRsp message. Also converts values to other types if specified.
             * @param message BatchFetchUserRolesRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.BatchFetchUserRolesRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BatchFetchUserRolesRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerStatus. */
        interface IPlayerStatus {

            /** PlayerStatus userId */
            userId?: (Long|null);

            /** PlayerStatus playerId */
            playerId?: (Long|null);

            /** PlayerStatus isWinner */
            isWinner?: (boolean|null);

            /** PlayerStatus freedomDegree */
            freedomDegree?: (number|null);

            /** PlayerStatus role */
            role?: (pb.cenarius.PlayerStatus.IRole|null);

            /** PlayerStatus monthlyInvestmentIncome */
            monthlyInvestmentIncome?: (Long|null);

            /** PlayerStatus monthlyExpense */
            monthlyExpense?: (Long|null);

            /** PlayerStatus monthlyCashflow */
            monthlyCashflow?: (Long|null);

            /** PlayerStatus financialReport */
            financialReport?: (Uint8Array|null);

            /** PlayerStatus assetStatment */
            assetStatment?: (pb.common.IAssetStatement|null);

            /** PlayerStatus isOut */
            isOut?: (boolean|null);
        }

        /** Represents a PlayerStatus. */
        class PlayerStatus implements IPlayerStatus {

            /**
             * Constructs a new PlayerStatus.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IPlayerStatus);

            /** PlayerStatus userId. */
            public userId: Long;

            /** PlayerStatus playerId. */
            public playerId: Long;

            /** PlayerStatus isWinner. */
            public isWinner: boolean;

            /** PlayerStatus freedomDegree. */
            public freedomDegree: number;

            /** PlayerStatus role. */
            public role?: (pb.cenarius.PlayerStatus.IRole|null);

            /** PlayerStatus monthlyInvestmentIncome. */
            public monthlyInvestmentIncome: Long;

            /** PlayerStatus monthlyExpense. */
            public monthlyExpense: Long;

            /** PlayerStatus monthlyCashflow. */
            public monthlyCashflow: Long;

            /** PlayerStatus financialReport. */
            public financialReport: Uint8Array;

            /** PlayerStatus assetStatment. */
            public assetStatment?: (pb.common.IAssetStatement|null);

            /** PlayerStatus isOut. */
            public isOut: boolean;

            /**
             * Creates a new PlayerStatus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerStatus instance
             */
            public static create(properties?: pb.cenarius.IPlayerStatus): pb.cenarius.PlayerStatus;

            /**
             * Encodes the specified PlayerStatus message. Does not implicitly {@link pb.cenarius.PlayerStatus.verify|verify} messages.
             * @param message PlayerStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IPlayerStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerStatus message, length delimited. Does not implicitly {@link pb.cenarius.PlayerStatus.verify|verify} messages.
             * @param message PlayerStatus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IPlayerStatus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerStatus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.PlayerStatus;

            /**
             * Decodes a PlayerStatus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerStatus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.PlayerStatus;

            /**
             * Verifies a PlayerStatus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerStatus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerStatus
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.PlayerStatus;

            /**
             * Creates a plain object from a PlayerStatus message. Also converts values to other types if specified.
             * @param message PlayerStatus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.PlayerStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerStatus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace PlayerStatus {

            /** Properties of a Role. */
            interface IRole {

                /** Role id */
                id?: (Long|null);

                /** Role name */
                name?: (string|null);

                /** Role flag */
                flag?: (string|null);
            }

            /** Represents a Role. */
            class Role implements IRole {

                /**
                 * Constructs a new Role.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.cenarius.PlayerStatus.IRole);

                /** Role id. */
                public id: Long;

                /** Role name. */
                public name: string;

                /** Role flag. */
                public flag: string;

                /**
                 * Creates a new Role instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Role instance
                 */
                public static create(properties?: pb.cenarius.PlayerStatus.IRole): pb.cenarius.PlayerStatus.Role;

                /**
                 * Encodes the specified Role message. Does not implicitly {@link pb.cenarius.PlayerStatus.Role.verify|verify} messages.
                 * @param message Role message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.cenarius.PlayerStatus.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Role message, length delimited. Does not implicitly {@link pb.cenarius.PlayerStatus.Role.verify|verify} messages.
                 * @param message Role message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.cenarius.PlayerStatus.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Role message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Role
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.PlayerStatus.Role;

                /**
                 * Decodes a Role message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Role
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.PlayerStatus.Role;

                /**
                 * Verifies a Role message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Role message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Role
                 */
                public static fromObject(object: { [k: string]: any }): pb.cenarius.PlayerStatus.Role;

                /**
                 * Creates a plain object from a Role message. Also converts values to other types if specified.
                 * @param message Role
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.cenarius.PlayerStatus.Role, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Role to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an EndGameRequest. */
        interface IEndGameRequest {

            /** EndGameRequest gameId */
            gameId?: (Long|null);

            /** EndGameRequest status */
            status?: (pb.cenarius.IPlayerStatus[]|null);

            /** EndGameRequest startedAt */
            startedAt?: (google.protobuf.ITimestamp|null);

            /** EndGameRequest endedAt */
            endedAt?: (google.protobuf.ITimestamp|null);

            /** EndGameRequest matchType */
            matchType?: (pb.common.MatchType|null);

            /** EndGameRequest endType */
            endType?: (pb.common.GameOverMsg.endType|null);
        }

        /** Represents an EndGameRequest. */
        class EndGameRequest implements IEndGameRequest {

            /**
             * Constructs a new EndGameRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IEndGameRequest);

            /** EndGameRequest gameId. */
            public gameId: Long;

            /** EndGameRequest status. */
            public status: pb.cenarius.IPlayerStatus[];

            /** EndGameRequest startedAt. */
            public startedAt?: (google.protobuf.ITimestamp|null);

            /** EndGameRequest endedAt. */
            public endedAt?: (google.protobuf.ITimestamp|null);

            /** EndGameRequest matchType. */
            public matchType: pb.common.MatchType;

            /** EndGameRequest endType. */
            public endType: pb.common.GameOverMsg.endType;

            /**
             * Creates a new EndGameRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EndGameRequest instance
             */
            public static create(properties?: pb.cenarius.IEndGameRequest): pb.cenarius.EndGameRequest;

            /**
             * Encodes the specified EndGameRequest message. Does not implicitly {@link pb.cenarius.EndGameRequest.verify|verify} messages.
             * @param message EndGameRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IEndGameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EndGameRequest message, length delimited. Does not implicitly {@link pb.cenarius.EndGameRequest.verify|verify} messages.
             * @param message EndGameRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IEndGameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EndGameRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EndGameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.EndGameRequest;

            /**
             * Decodes an EndGameRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EndGameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.EndGameRequest;

            /**
             * Verifies an EndGameRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EndGameRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EndGameRequest
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.EndGameRequest;

            /**
             * Creates a plain object from an EndGameRequest message. Also converts values to other types if specified.
             * @param message EndGameRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.EndGameRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EndGameRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EndGameResponse. */
        interface IEndGameResponse {

            /** EndGameResponse gameID */
            gameID?: (Long|null);

            /** EndGameResponse bonus */
            bonus?: ({ [k: string]: pb.common.IGameBonus }|null);
        }

        /** Represents an EndGameResponse. */
        class EndGameResponse implements IEndGameResponse {

            /**
             * Constructs a new EndGameResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IEndGameResponse);

            /** EndGameResponse gameID. */
            public gameID: Long;

            /** EndGameResponse bonus. */
            public bonus: { [k: string]: pb.common.IGameBonus };

            /**
             * Creates a new EndGameResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EndGameResponse instance
             */
            public static create(properties?: pb.cenarius.IEndGameResponse): pb.cenarius.EndGameResponse;

            /**
             * Encodes the specified EndGameResponse message. Does not implicitly {@link pb.cenarius.EndGameResponse.verify|verify} messages.
             * @param message EndGameResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IEndGameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EndGameResponse message, length delimited. Does not implicitly {@link pb.cenarius.EndGameResponse.verify|verify} messages.
             * @param message EndGameResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IEndGameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EndGameResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EndGameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.EndGameResponse;

            /**
             * Decodes an EndGameResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EndGameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.EndGameResponse;

            /**
             * Verifies an EndGameResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EndGameResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EndGameResponse
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.EndGameResponse;

            /**
             * Creates a plain object from an EndGameResponse message. Also converts values to other types if specified.
             * @param message EndGameResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.EndGameResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EndGameResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SendTextMessageReq. */
        interface ISendTextMessageReq {

            /** SendTextMessageReq receiver */
            receiver?: (string[]|null);

            /** SendTextMessageReq text */
            text?: (string|null);
        }

        /** Represents a SendTextMessageReq. */
        class SendTextMessageReq implements ISendTextMessageReq {

            /**
             * Constructs a new SendTextMessageReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.ISendTextMessageReq);

            /** SendTextMessageReq receiver. */
            public receiver: string[];

            /** SendTextMessageReq text. */
            public text: string;

            /**
             * Creates a new SendTextMessageReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SendTextMessageReq instance
             */
            public static create(properties?: pb.cenarius.ISendTextMessageReq): pb.cenarius.SendTextMessageReq;

            /**
             * Encodes the specified SendTextMessageReq message. Does not implicitly {@link pb.cenarius.SendTextMessageReq.verify|verify} messages.
             * @param message SendTextMessageReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.ISendTextMessageReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SendTextMessageReq message, length delimited. Does not implicitly {@link pb.cenarius.SendTextMessageReq.verify|verify} messages.
             * @param message SendTextMessageReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.ISendTextMessageReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SendTextMessageReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SendTextMessageReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.SendTextMessageReq;

            /**
             * Decodes a SendTextMessageReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SendTextMessageReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.SendTextMessageReq;

            /**
             * Verifies a SendTextMessageReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SendTextMessageReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SendTextMessageReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.SendTextMessageReq;

            /**
             * Creates a plain object from a SendTextMessageReq message. Also converts values to other types if specified.
             * @param message SendTextMessageReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.SendTextMessageReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SendTextMessageReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a CenariusService */
        class CenariusService extends $protobuf.rpc.Service {

            /**
             * Constructs a new CenariusService service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Creates new CenariusService service using the specified rpc implementation.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             * @returns RPC service. Useful where requests and/or responses are streamed.
             */
            public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): CenariusService;

            /**
             * Calls Authenticate.
             * @param request AuthenticationReq message or plain object
             * @param callback Node-style callback called with the error, if any, and PlayerInfo
             */
            public authenticate(request: pb.cenarius.IAuthenticationReq, callback: pb.cenarius.CenariusService.AuthenticateCallback): void;

            /**
             * Calls Authenticate.
             * @param request AuthenticationReq message or plain object
             * @returns Promise
             */
            public authenticate(request: pb.cenarius.IAuthenticationReq): Promise<pb.common.PlayerInfo>;

            /**
             * Calls GetPlayerInfo.
             * @param request GetPlayerInfoReq message or plain object
             * @param callback Node-style callback called with the error, if any, and GetPlayerInfoRsp
             */
            public getPlayerInfo(request: pb.cenarius.IGetPlayerInfoReq, callback: pb.cenarius.CenariusService.GetPlayerInfoCallback): void;

            /**
             * Calls GetPlayerInfo.
             * @param request GetPlayerInfoReq message or plain object
             * @returns Promise
             */
            public getPlayerInfo(request: pb.cenarius.IGetPlayerInfoReq): Promise<pb.cenarius.GetPlayerInfoRsp>;

            /**
             * Calls PullRoles.
             * @param request Empty message or plain object
             * @param callback Node-style callback called with the error, if any, and PullRolesRsp
             */
            public pullRoles(request: google.protobuf.IEmpty, callback: pb.cenarius.CenariusService.PullRolesCallback): void;

            /**
             * Calls PullRoles.
             * @param request Empty message or plain object
             * @returns Promise
             */
            public pullRoles(request: google.protobuf.IEmpty): Promise<pb.cenarius.PullRolesRsp>;

            /**
             * Calls FetchUserRoles.
             * @param request FetchUserRolesReq message or plain object
             * @param callback Node-style callback called with the error, if any, and FetchUserRolesRsp
             */
            public fetchUserRoles(request: pb.cenarius.IFetchUserRolesReq, callback: pb.cenarius.CenariusService.FetchUserRolesCallback): void;

            /**
             * Calls FetchUserRoles.
             * @param request FetchUserRolesReq message or plain object
             * @returns Promise
             */
            public fetchUserRoles(request: pb.cenarius.IFetchUserRolesReq): Promise<pb.cenarius.FetchUserRolesRsp>;

            /**
             * Calls BatchFetchUserRoles.
             * @param request BatchFetchUserRolesReq message or plain object
             * @param callback Node-style callback called with the error, if any, and BatchFetchUserRolesRsp
             */
            public batchFetchUserRoles(request: pb.cenarius.IBatchFetchUserRolesReq, callback: pb.cenarius.CenariusService.BatchFetchUserRolesCallback): void;

            /**
             * Calls BatchFetchUserRoles.
             * @param request BatchFetchUserRolesReq message or plain object
             * @returns Promise
             */
            public batchFetchUserRoles(request: pb.cenarius.IBatchFetchUserRolesReq): Promise<pb.cenarius.BatchFetchUserRolesRsp>;

            /**
             * Calls ListBots.
             * @param request ListBotsReq message or plain object
             * @param callback Node-style callback called with the error, if any, and ListBotsRsp
             */
            public listBots(request: pb.cenarius.IListBotsReq, callback: pb.cenarius.CenariusService.ListBotsCallback): void;

            /**
             * Calls ListBots.
             * @param request ListBotsReq message or plain object
             * @returns Promise
             */
            public listBots(request: pb.cenarius.IListBotsReq): Promise<pb.cenarius.ListBotsRsp>;

            /**
             * Calls EndGame.
             * @param request EndGameRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and EndGameResponse
             */
            public endGame(request: pb.cenarius.IEndGameRequest, callback: pb.cenarius.CenariusService.EndGameCallback): void;

            /**
             * Calls EndGame.
             * @param request EndGameRequest message or plain object
             * @returns Promise
             */
            public endGame(request: pb.cenarius.IEndGameRequest): Promise<pb.cenarius.EndGameResponse>;

            /**
             * Calls SendTextMessage.
             * @param request SendTextMessageReq message or plain object
             * @param callback Node-style callback called with the error, if any, and Empty
             */
            public sendTextMessage(request: pb.cenarius.ISendTextMessageReq, callback: pb.cenarius.CenariusService.SendTextMessageCallback): void;

            /**
             * Calls SendTextMessage.
             * @param request SendTextMessageReq message or plain object
             * @returns Promise
             */
            public sendTextMessage(request: pb.cenarius.ISendTextMessageReq): Promise<google.protobuf.Empty>;

            /**
             * Calls GetUserDefinedRole.
             * @param request GetUserDefinedRoleReq message or plain object
             * @param callback Node-style callback called with the error, if any, and Role
             */
            public getUserDefinedRole(request: pb.cenarius.IGetUserDefinedRoleReq, callback: pb.cenarius.CenariusService.GetUserDefinedRoleCallback): void;

            /**
             * Calls GetUserDefinedRole.
             * @param request GetUserDefinedRoleReq message or plain object
             * @returns Promise
             */
            public getUserDefinedRole(request: pb.cenarius.IGetUserDefinedRoleReq): Promise<pb.cenarius.Role>;

            /**
             * Calls SendGameInvitation.
             * @param request SendGameInvitationReq message or plain object
             * @param callback Node-style callback called with the error, if any, and Empty
             */
            public sendGameInvitation(request: pb.cenarius.ISendGameInvitationReq, callback: pb.cenarius.CenariusService.SendGameInvitationCallback): void;

            /**
             * Calls SendGameInvitation.
             * @param request SendGameInvitationReq message or plain object
             * @returns Promise
             */
            public sendGameInvitation(request: pb.cenarius.ISendGameInvitationReq): Promise<google.protobuf.Empty>;

            /**
             * Calls ConsumeTrainingGame.
             * @param request ConsumeTrainingReq message or plain object
             * @param callback Node-style callback called with the error, if any, and Empty
             */
            public consumeTrainingGame(request: pb.cenarius.IConsumeTrainingReq, callback: pb.cenarius.CenariusService.ConsumeTrainingGameCallback): void;

            /**
             * Calls ConsumeTrainingGame.
             * @param request ConsumeTrainingReq message or plain object
             * @returns Promise
             */
            public consumeTrainingGame(request: pb.cenarius.IConsumeTrainingReq): Promise<google.protobuf.Empty>;

            /**
             * Calls CheckTrainingGameBalance.
             * @param request TrainingGameBalanceReq message or plain object
             * @param callback Node-style callback called with the error, if any, and TrainingGameBalanceRsp
             */
            public checkTrainingGameBalance(request: pb.cenarius.ITrainingGameBalanceReq, callback: pb.cenarius.CenariusService.CheckTrainingGameBalanceCallback): void;

            /**
             * Calls CheckTrainingGameBalance.
             * @param request TrainingGameBalanceReq message or plain object
             * @returns Promise
             */
            public checkTrainingGameBalance(request: pb.cenarius.ITrainingGameBalanceReq): Promise<pb.cenarius.TrainingGameBalanceRsp>;
        }

        namespace CenariusService {

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#authenticate}.
             * @param error Error, if any
             * @param [response] PlayerInfo
             */
            type AuthenticateCallback = (error: (Error|null), response?: pb.common.PlayerInfo) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#getPlayerInfo}.
             * @param error Error, if any
             * @param [response] GetPlayerInfoRsp
             */
            type GetPlayerInfoCallback = (error: (Error|null), response?: pb.cenarius.GetPlayerInfoRsp) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#pullRoles}.
             * @param error Error, if any
             * @param [response] PullRolesRsp
             */
            type PullRolesCallback = (error: (Error|null), response?: pb.cenarius.PullRolesRsp) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#fetchUserRoles}.
             * @param error Error, if any
             * @param [response] FetchUserRolesRsp
             */
            type FetchUserRolesCallback = (error: (Error|null), response?: pb.cenarius.FetchUserRolesRsp) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#batchFetchUserRoles}.
             * @param error Error, if any
             * @param [response] BatchFetchUserRolesRsp
             */
            type BatchFetchUserRolesCallback = (error: (Error|null), response?: pb.cenarius.BatchFetchUserRolesRsp) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#listBots}.
             * @param error Error, if any
             * @param [response] ListBotsRsp
             */
            type ListBotsCallback = (error: (Error|null), response?: pb.cenarius.ListBotsRsp) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#endGame}.
             * @param error Error, if any
             * @param [response] EndGameResponse
             */
            type EndGameCallback = (error: (Error|null), response?: pb.cenarius.EndGameResponse) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#sendTextMessage}.
             * @param error Error, if any
             * @param [response] Empty
             */
            type SendTextMessageCallback = (error: (Error|null), response?: google.protobuf.Empty) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#getUserDefinedRole}.
             * @param error Error, if any
             * @param [response] Role
             */
            type GetUserDefinedRoleCallback = (error: (Error|null), response?: pb.cenarius.Role) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#sendGameInvitation}.
             * @param error Error, if any
             * @param [response] Empty
             */
            type SendGameInvitationCallback = (error: (Error|null), response?: google.protobuf.Empty) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#consumeTrainingGame}.
             * @param error Error, if any
             * @param [response] Empty
             */
            type ConsumeTrainingGameCallback = (error: (Error|null), response?: google.protobuf.Empty) => void;

            /**
             * Callback as used by {@link pb.cenarius.CenariusService#checkTrainingGameBalance}.
             * @param error Error, if any
             * @param [response] TrainingGameBalanceRsp
             */
            type CheckTrainingGameBalanceCallback = (error: (Error|null), response?: pb.cenarius.TrainingGameBalanceRsp) => void;
        }

        /** Properties of a SendGameInvitationReq. */
        interface ISendGameInvitationReq {

            /** SendGameInvitationReq invitorId */
            invitorId?: (Long|null);

            /** SendGameInvitationReq inviteeId */
            inviteeId?: (Long|null);

            /** SendGameInvitationReq roomId */
            roomId?: (string|null);

            /** SendGameInvitationReq groupId */
            groupId?: (string|null);
        }

        /** Represents a SendGameInvitationReq. */
        class SendGameInvitationReq implements ISendGameInvitationReq {

            /**
             * Constructs a new SendGameInvitationReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.ISendGameInvitationReq);

            /** SendGameInvitationReq invitorId. */
            public invitorId: Long;

            /** SendGameInvitationReq inviteeId. */
            public inviteeId: Long;

            /** SendGameInvitationReq roomId. */
            public roomId: string;

            /** SendGameInvitationReq groupId. */
            public groupId: string;

            /**
             * Creates a new SendGameInvitationReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SendGameInvitationReq instance
             */
            public static create(properties?: pb.cenarius.ISendGameInvitationReq): pb.cenarius.SendGameInvitationReq;

            /**
             * Encodes the specified SendGameInvitationReq message. Does not implicitly {@link pb.cenarius.SendGameInvitationReq.verify|verify} messages.
             * @param message SendGameInvitationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.ISendGameInvitationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SendGameInvitationReq message, length delimited. Does not implicitly {@link pb.cenarius.SendGameInvitationReq.verify|verify} messages.
             * @param message SendGameInvitationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.ISendGameInvitationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SendGameInvitationReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SendGameInvitationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.SendGameInvitationReq;

            /**
             * Decodes a SendGameInvitationReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SendGameInvitationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.SendGameInvitationReq;

            /**
             * Verifies a SendGameInvitationReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SendGameInvitationReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SendGameInvitationReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.SendGameInvitationReq;

            /**
             * Creates a plain object from a SendGameInvitationReq message. Also converts values to other types if specified.
             * @param message SendGameInvitationReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.SendGameInvitationReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SendGameInvitationReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RoleAssetType. */
        interface IRoleAssetType {
        }

        /** Represents a RoleAssetType. */
        class RoleAssetType implements IRoleAssetType {

            /**
             * Constructs a new RoleAssetType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IRoleAssetType);

            /**
             * Creates a new RoleAssetType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoleAssetType instance
             */
            public static create(properties?: pb.cenarius.IRoleAssetType): pb.cenarius.RoleAssetType;

            /**
             * Encodes the specified RoleAssetType message. Does not implicitly {@link pb.cenarius.RoleAssetType.verify|verify} messages.
             * @param message RoleAssetType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IRoleAssetType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoleAssetType message, length delimited. Does not implicitly {@link pb.cenarius.RoleAssetType.verify|verify} messages.
             * @param message RoleAssetType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IRoleAssetType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoleAssetType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoleAssetType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.RoleAssetType;

            /**
             * Decodes a RoleAssetType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoleAssetType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.RoleAssetType;

            /**
             * Verifies a RoleAssetType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoleAssetType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoleAssetType
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.RoleAssetType;

            /**
             * Creates a plain object from a RoleAssetType message. Also converts values to other types if specified.
             * @param message RoleAssetType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.RoleAssetType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoleAssetType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace RoleAssetType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                SALARY = 1,
                CASH = 2
            }
        }

        /** Properties of a RoleAsset. */
        interface IRoleAsset {

            /** RoleAsset id */
            id?: (string|null);

            /** RoleAsset userId */
            userId?: (Long|null);

            /** RoleAsset code */
            code?: (pb.cenarius.RoleAssetType.Enum|null);

            /** RoleAsset typeName */
            typeName?: (string|null);

            /** RoleAsset name */
            name?: (string|null);

            /** RoleAsset totalAmount */
            totalAmount?: (Long|null);

            /** RoleAsset liabilityAmount */
            liabilityAmount?: (Long|null);

            /** RoleAsset monthIncome */
            monthIncome?: (Long|null);

            /** RoleAsset monthPayment */
            monthPayment?: (Long|null);
        }

        /** Represents a RoleAsset. */
        class RoleAsset implements IRoleAsset {

            /**
             * Constructs a new RoleAsset.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IRoleAsset);

            /** RoleAsset id. */
            public id: string;

            /** RoleAsset userId. */
            public userId: Long;

            /** RoleAsset code. */
            public code: pb.cenarius.RoleAssetType.Enum;

            /** RoleAsset typeName. */
            public typeName: string;

            /** RoleAsset name. */
            public name: string;

            /** RoleAsset totalAmount. */
            public totalAmount: Long;

            /** RoleAsset liabilityAmount. */
            public liabilityAmount: Long;

            /** RoleAsset monthIncome. */
            public monthIncome: Long;

            /** RoleAsset monthPayment. */
            public monthPayment: Long;

            /**
             * Creates a new RoleAsset instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoleAsset instance
             */
            public static create(properties?: pb.cenarius.IRoleAsset): pb.cenarius.RoleAsset;

            /**
             * Encodes the specified RoleAsset message. Does not implicitly {@link pb.cenarius.RoleAsset.verify|verify} messages.
             * @param message RoleAsset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IRoleAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoleAsset message, length delimited. Does not implicitly {@link pb.cenarius.RoleAsset.verify|verify} messages.
             * @param message RoleAsset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IRoleAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoleAsset message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoleAsset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.RoleAsset;

            /**
             * Decodes a RoleAsset message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoleAsset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.RoleAsset;

            /**
             * Verifies a RoleAsset message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoleAsset message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoleAsset
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.RoleAsset;

            /**
             * Creates a plain object from a RoleAsset message. Also converts values to other types if specified.
             * @param message RoleAsset
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.RoleAsset, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoleAsset to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetUserDefinedRoleReq. */
        interface IGetUserDefinedRoleReq {

            /** GetUserDefinedRoleReq userId */
            userId?: (Long|null);
        }

        /** Represents a GetUserDefinedRoleReq. */
        class GetUserDefinedRoleReq implements IGetUserDefinedRoleReq {

            /**
             * Constructs a new GetUserDefinedRoleReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IGetUserDefinedRoleReq);

            /** GetUserDefinedRoleReq userId. */
            public userId: Long;

            /**
             * Creates a new GetUserDefinedRoleReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetUserDefinedRoleReq instance
             */
            public static create(properties?: pb.cenarius.IGetUserDefinedRoleReq): pb.cenarius.GetUserDefinedRoleReq;

            /**
             * Encodes the specified GetUserDefinedRoleReq message. Does not implicitly {@link pb.cenarius.GetUserDefinedRoleReq.verify|verify} messages.
             * @param message GetUserDefinedRoleReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IGetUserDefinedRoleReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetUserDefinedRoleReq message, length delimited. Does not implicitly {@link pb.cenarius.GetUserDefinedRoleReq.verify|verify} messages.
             * @param message GetUserDefinedRoleReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IGetUserDefinedRoleReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetUserDefinedRoleReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetUserDefinedRoleReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.GetUserDefinedRoleReq;

            /**
             * Decodes a GetUserDefinedRoleReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetUserDefinedRoleReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.GetUserDefinedRoleReq;

            /**
             * Verifies a GetUserDefinedRoleReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetUserDefinedRoleReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetUserDefinedRoleReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.GetUserDefinedRoleReq;

            /**
             * Creates a plain object from a GetUserDefinedRoleReq message. Also converts values to other types if specified.
             * @param message GetUserDefinedRoleReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.GetUserDefinedRoleReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetUserDefinedRoleReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TrainingGameBalanceReq. */
        interface ITrainingGameBalanceReq {

            /** TrainingGameBalanceReq userID */
            userID?: (Long|null);
        }

        /** Represents a TrainingGameBalanceReq. */
        class TrainingGameBalanceReq implements ITrainingGameBalanceReq {

            /**
             * Constructs a new TrainingGameBalanceReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.ITrainingGameBalanceReq);

            /** TrainingGameBalanceReq userID. */
            public userID: Long;

            /**
             * Creates a new TrainingGameBalanceReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TrainingGameBalanceReq instance
             */
            public static create(properties?: pb.cenarius.ITrainingGameBalanceReq): pb.cenarius.TrainingGameBalanceReq;

            /**
             * Encodes the specified TrainingGameBalanceReq message. Does not implicitly {@link pb.cenarius.TrainingGameBalanceReq.verify|verify} messages.
             * @param message TrainingGameBalanceReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.ITrainingGameBalanceReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TrainingGameBalanceReq message, length delimited. Does not implicitly {@link pb.cenarius.TrainingGameBalanceReq.verify|verify} messages.
             * @param message TrainingGameBalanceReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.ITrainingGameBalanceReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TrainingGameBalanceReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TrainingGameBalanceReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.TrainingGameBalanceReq;

            /**
             * Decodes a TrainingGameBalanceReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TrainingGameBalanceReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.TrainingGameBalanceReq;

            /**
             * Verifies a TrainingGameBalanceReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TrainingGameBalanceReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TrainingGameBalanceReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.TrainingGameBalanceReq;

            /**
             * Creates a plain object from a TrainingGameBalanceReq message. Also converts values to other types if specified.
             * @param message TrainingGameBalanceReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.TrainingGameBalanceReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TrainingGameBalanceReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TrainingGameBalanceRsp. */
        interface ITrainingGameBalanceRsp {

            /** TrainingGameBalanceRsp total */
            total?: (number|null);

            /** TrainingGameBalanceRsp consumed */
            consumed?: (number|null);

            /** TrainingGameBalanceRsp free */
            free?: (number|null);
        }

        /** Represents a TrainingGameBalanceRsp. */
        class TrainingGameBalanceRsp implements ITrainingGameBalanceRsp {

            /**
             * Constructs a new TrainingGameBalanceRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.ITrainingGameBalanceRsp);

            /** TrainingGameBalanceRsp total. */
            public total: number;

            /** TrainingGameBalanceRsp consumed. */
            public consumed: number;

            /** TrainingGameBalanceRsp free. */
            public free: number;

            /**
             * Creates a new TrainingGameBalanceRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TrainingGameBalanceRsp instance
             */
            public static create(properties?: pb.cenarius.ITrainingGameBalanceRsp): pb.cenarius.TrainingGameBalanceRsp;

            /**
             * Encodes the specified TrainingGameBalanceRsp message. Does not implicitly {@link pb.cenarius.TrainingGameBalanceRsp.verify|verify} messages.
             * @param message TrainingGameBalanceRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.ITrainingGameBalanceRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TrainingGameBalanceRsp message, length delimited. Does not implicitly {@link pb.cenarius.TrainingGameBalanceRsp.verify|verify} messages.
             * @param message TrainingGameBalanceRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.ITrainingGameBalanceRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TrainingGameBalanceRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TrainingGameBalanceRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.TrainingGameBalanceRsp;

            /**
             * Decodes a TrainingGameBalanceRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TrainingGameBalanceRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.TrainingGameBalanceRsp;

            /**
             * Verifies a TrainingGameBalanceRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TrainingGameBalanceRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TrainingGameBalanceRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.TrainingGameBalanceRsp;

            /**
             * Creates a plain object from a TrainingGameBalanceRsp message. Also converts values to other types if specified.
             * @param message TrainingGameBalanceRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.TrainingGameBalanceRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TrainingGameBalanceRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConsumeTrainingReq. */
        interface IConsumeTrainingReq {

            /** ConsumeTrainingReq userID */
            userID?: (Long|null);

            /** ConsumeTrainingReq gameID */
            gameID?: (Long|null);
        }

        /** Represents a ConsumeTrainingReq. */
        class ConsumeTrainingReq implements IConsumeTrainingReq {

            /**
             * Constructs a new ConsumeTrainingReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IConsumeTrainingReq);

            /** ConsumeTrainingReq userID. */
            public userID: Long;

            /** ConsumeTrainingReq gameID. */
            public gameID: Long;

            /**
             * Creates a new ConsumeTrainingReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ConsumeTrainingReq instance
             */
            public static create(properties?: pb.cenarius.IConsumeTrainingReq): pb.cenarius.ConsumeTrainingReq;

            /**
             * Encodes the specified ConsumeTrainingReq message. Does not implicitly {@link pb.cenarius.ConsumeTrainingReq.verify|verify} messages.
             * @param message ConsumeTrainingReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IConsumeTrainingReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConsumeTrainingReq message, length delimited. Does not implicitly {@link pb.cenarius.ConsumeTrainingReq.verify|verify} messages.
             * @param message ConsumeTrainingReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IConsumeTrainingReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConsumeTrainingReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConsumeTrainingReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.ConsumeTrainingReq;

            /**
             * Decodes a ConsumeTrainingReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConsumeTrainingReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.ConsumeTrainingReq;

            /**
             * Verifies a ConsumeTrainingReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConsumeTrainingReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConsumeTrainingReq
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.ConsumeTrainingReq;

            /**
             * Creates a plain object from a ConsumeTrainingReq message. Also converts values to other types if specified.
             * @param message ConsumeTrainingReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.ConsumeTrainingReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConsumeTrainingReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConsumeTrainingRsp. */
        interface IConsumeTrainingRsp {

            /** ConsumeTrainingRsp userID */
            userID?: (Long|null);
        }

        /** Represents a ConsumeTrainingRsp. */
        class ConsumeTrainingRsp implements IConsumeTrainingRsp {

            /**
             * Constructs a new ConsumeTrainingRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.cenarius.IConsumeTrainingRsp);

            /** ConsumeTrainingRsp userID. */
            public userID: Long;

            /**
             * Creates a new ConsumeTrainingRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ConsumeTrainingRsp instance
             */
            public static create(properties?: pb.cenarius.IConsumeTrainingRsp): pb.cenarius.ConsumeTrainingRsp;

            /**
             * Encodes the specified ConsumeTrainingRsp message. Does not implicitly {@link pb.cenarius.ConsumeTrainingRsp.verify|verify} messages.
             * @param message ConsumeTrainingRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.cenarius.IConsumeTrainingRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConsumeTrainingRsp message, length delimited. Does not implicitly {@link pb.cenarius.ConsumeTrainingRsp.verify|verify} messages.
             * @param message ConsumeTrainingRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.cenarius.IConsumeTrainingRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConsumeTrainingRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConsumeTrainingRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.cenarius.ConsumeTrainingRsp;

            /**
             * Decodes a ConsumeTrainingRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConsumeTrainingRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.cenarius.ConsumeTrainingRsp;

            /**
             * Verifies a ConsumeTrainingRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConsumeTrainingRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConsumeTrainingRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.cenarius.ConsumeTrainingRsp;

            /**
             * Creates a plain object from a ConsumeTrainingRsp message. Also converts values to other types if specified.
             * @param message ConsumeTrainingRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.cenarius.ConsumeTrainingRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConsumeTrainingRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace common. */
    namespace common {

        /** SCENARIO_TYPE enum. */
        enum SCENARIO_TYPE {
            S_PB_FIRST_MUST_ZORE = 0,
            S_INIT = 1,
            S_CHANCE = 2,
            S_BIG_BUSINESS = 3,
            S_SMALL_BUSINESS = 4,
            S_MARKET_INFO = 5,
            S_ACCIDENT = 6,
            S_CHARITY = 7,
            S_UNEMPLOYMENT = 8,
            S_PAYDAY = 9,
            S_BABY = 10,
            S_WAGE_HIKE = 11,
            S_MARKET_CHANGE = 12
        }

        /** PayDayType enum. */
        enum PayDayType {
            PAYDAY_PLACEHOLDER = 0,
            NOT_PAY_DAY = 1,
            PAY_DAY = 2,
            PASS_BY_PAY_DAY = 3
        }

        /** PaymentType enum. */
        enum PaymentType {
            PAYMENT_TYPE_PLACEHOLDER = 0,
            PAYMENT_TYPE_CASH = 1,
            PAYMENT_TYPE_LOAN = 2,
            PAYMENT_TYPE_CANNOT_PAY = 3
        }

        /** OnlineState enum. */
        enum OnlineState {
            OnlineState_unkown = 0,
            online = 1,
            afk = 2,
            brb = 3,
            quit = 4
        }

        /** MatchType enum. */
        enum MatchType {
            UNKNOWN = 0,
            STANDARD = 1,
            RANK = 2,
            TRAINING = 3
        }

        /** Properties of an AssetBaseReq. */
        interface IAssetBaseReq {

            /** AssetBaseReq userId */
            userId?: (Long|null);
        }

        /** Represents an AssetBaseReq. */
        class AssetBaseReq implements IAssetBaseReq {

            /**
             * Constructs a new AssetBaseReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAssetBaseReq);

            /** AssetBaseReq userId. */
            public userId: Long;

            /**
             * Creates a new AssetBaseReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AssetBaseReq instance
             */
            public static create(properties?: pb.common.IAssetBaseReq): pb.common.AssetBaseReq;

            /**
             * Encodes the specified AssetBaseReq message. Does not implicitly {@link pb.common.AssetBaseReq.verify|verify} messages.
             * @param message AssetBaseReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAssetBaseReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetBaseReq message, length delimited. Does not implicitly {@link pb.common.AssetBaseReq.verify|verify} messages.
             * @param message AssetBaseReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAssetBaseReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetBaseReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetBaseReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AssetBaseReq;

            /**
             * Decodes an AssetBaseReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetBaseReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AssetBaseReq;

            /**
             * Verifies an AssetBaseReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetBaseReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetBaseReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AssetBaseReq;

            /**
             * Creates a plain object from an AssetBaseReq message. Also converts values to other types if specified.
             * @param message AssetBaseReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AssetBaseReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetBaseReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BaseRsp. */
        interface IBaseRsp {

            /** BaseRsp code */
            code?: (number|null);

            /** BaseRsp msg */
            msg?: (string|null);
        }

        /** Represents a BaseRsp. */
        class BaseRsp implements IBaseRsp {

            /**
             * Constructs a new BaseRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IBaseRsp);

            /** BaseRsp code. */
            public code: number;

            /** BaseRsp msg. */
            public msg: string;

            /**
             * Creates a new BaseRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BaseRsp instance
             */
            public static create(properties?: pb.common.IBaseRsp): pb.common.BaseRsp;

            /**
             * Encodes the specified BaseRsp message. Does not implicitly {@link pb.common.BaseRsp.verify|verify} messages.
             * @param message BaseRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IBaseRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BaseRsp message, length delimited. Does not implicitly {@link pb.common.BaseRsp.verify|verify} messages.
             * @param message BaseRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IBaseRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BaseRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BaseRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.BaseRsp;

            /**
             * Decodes a BaseRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BaseRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.BaseRsp;

            /**
             * Verifies a BaseRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BaseRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BaseRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.BaseRsp;

            /**
             * Creates a plain object from a BaseRsp message. Also converts values to other types if specified.
             * @param message BaseRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.BaseRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BaseRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CommonRsp. */
        interface ICommonRsp {

            /** CommonRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a CommonRsp. */
        class CommonRsp implements ICommonRsp {

            /**
             * Constructs a new CommonRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICommonRsp);

            /** CommonRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new CommonRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CommonRsp instance
             */
            public static create(properties?: pb.common.ICommonRsp): pb.common.CommonRsp;

            /**
             * Encodes the specified CommonRsp message. Does not implicitly {@link pb.common.CommonRsp.verify|verify} messages.
             * @param message CommonRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICommonRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CommonRsp message, length delimited. Does not implicitly {@link pb.common.CommonRsp.verify|verify} messages.
             * @param message CommonRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICommonRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommonRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommonRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CommonRsp;

            /**
             * Decodes a CommonRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommonRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CommonRsp;

            /**
             * Verifies a CommonRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommonRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommonRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CommonRsp;

            /**
             * Creates a plain object from a CommonRsp message. Also converts values to other types if specified.
             * @param message CommonRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CommonRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommonRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameBaseMsg. */
        interface IGameBaseMsg {

            /** GameBaseMsg userId */
            userId?: (Long|null);
        }

        /** Represents a GameBaseMsg. */
        class GameBaseMsg implements IGameBaseMsg {

            /**
             * Constructs a new GameBaseMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameBaseMsg);

            /** GameBaseMsg userId. */
            public userId: Long;

            /**
             * Creates a new GameBaseMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameBaseMsg instance
             */
            public static create(properties?: pb.common.IGameBaseMsg): pb.common.GameBaseMsg;

            /**
             * Encodes the specified GameBaseMsg message. Does not implicitly {@link pb.common.GameBaseMsg.verify|verify} messages.
             * @param message GameBaseMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameBaseMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameBaseMsg message, length delimited. Does not implicitly {@link pb.common.GameBaseMsg.verify|verify} messages.
             * @param message GameBaseMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameBaseMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameBaseMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameBaseMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameBaseMsg;

            /**
             * Decodes a GameBaseMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameBaseMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameBaseMsg;

            /**
             * Verifies a GameBaseMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameBaseMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameBaseMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameBaseMsg;

            /**
             * Creates a plain object from a GameBaseMsg message. Also converts values to other types if specified.
             * @param message GameBaseMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameBaseMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameBaseMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerInfo. */
        interface IPlayerInfo {

            /** PlayerInfo userId */
            userId?: (Long|null);

            /** PlayerInfo avatar */
            avatar?: (string|null);

            /** PlayerInfo nickname */
            nickname?: (string|null);

            /** PlayerInfo isBot */
            isBot?: (boolean|null);

            /** PlayerInfo birthday */
            birthday?: (string|null);

            /** PlayerInfo assetScore */
            assetScore?: (Long|null);

            /** PlayerInfo assetLevel */
            assetLevel?: (string|null);
        }

        /** Represents a PlayerInfo. */
        class PlayerInfo implements IPlayerInfo {

            /**
             * Constructs a new PlayerInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerInfo);

            /** PlayerInfo userId. */
            public userId: Long;

            /** PlayerInfo avatar. */
            public avatar: string;

            /** PlayerInfo nickname. */
            public nickname: string;

            /** PlayerInfo isBot. */
            public isBot: boolean;

            /** PlayerInfo birthday. */
            public birthday: string;

            /** PlayerInfo assetScore. */
            public assetScore: Long;

            /** PlayerInfo assetLevel. */
            public assetLevel: string;

            /**
             * Creates a new PlayerInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerInfo instance
             */
            public static create(properties?: pb.common.IPlayerInfo): pb.common.PlayerInfo;

            /**
             * Encodes the specified PlayerInfo message. Does not implicitly {@link pb.common.PlayerInfo.verify|verify} messages.
             * @param message PlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerInfo message, length delimited. Does not implicitly {@link pb.common.PlayerInfo.verify|verify} messages.
             * @param message PlayerInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerInfo;

            /**
             * Decodes a PlayerInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerInfo;

            /**
             * Verifies a PlayerInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerInfo
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerInfo;

            /**
             * Creates a plain object from a PlayerInfo message. Also converts values to other types if specified.
             * @param message PlayerInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RoomInfo. */
        interface IRoomInfo {

            /** RoomInfo roomId */
            roomId?: (string|null);

            /** RoomInfo ownerId */
            ownerId?: (Long|null);

            /** RoomInfo members */
            members?: (pb.common.IPlayerInfo[]|null);

            /** RoomInfo size */
            size?: (number|null);

            /** RoomInfo matchType */
            matchType?: (pb.common.MatchType|null);

            /** RoomInfo roomNum */
            roomNum?: (number|null);

            /** RoomInfo opt */
            opt?: (pb.common.IRoomOption|null);

            /** RoomInfo OptChanged */
            OptChanged?: (boolean|null);
        }

        /** Represents a RoomInfo. */
        class RoomInfo implements IRoomInfo {

            /**
             * Constructs a new RoomInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRoomInfo);

            /** RoomInfo roomId. */
            public roomId: string;

            /** RoomInfo ownerId. */
            public ownerId: Long;

            /** RoomInfo members. */
            public members: pb.common.IPlayerInfo[];

            /** RoomInfo size. */
            public size: number;

            /** RoomInfo matchType. */
            public matchType: pb.common.MatchType;

            /** RoomInfo roomNum. */
            public roomNum: number;

            /** RoomInfo opt. */
            public opt?: (pb.common.IRoomOption|null);

            /** RoomInfo OptChanged. */
            public OptChanged: boolean;

            /**
             * Creates a new RoomInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoomInfo instance
             */
            public static create(properties?: pb.common.IRoomInfo): pb.common.RoomInfo;

            /**
             * Encodes the specified RoomInfo message. Does not implicitly {@link pb.common.RoomInfo.verify|verify} messages.
             * @param message RoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoomInfo message, length delimited. Does not implicitly {@link pb.common.RoomInfo.verify|verify} messages.
             * @param message RoomInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoomInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RoomInfo;

            /**
             * Decodes a RoomInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoomInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RoomInfo;

            /**
             * Verifies a RoomInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoomInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoomInfo
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RoomInfo;

            /**
             * Creates a plain object from a RoomInfo message. Also converts values to other types if specified.
             * @param message RoomInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RoomInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoomInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RoomOption. */
        interface IRoomOption {

            /** RoomOption roomSize */
            roomSize?: (number|null);

            /** RoomOption playDuration */
            playDuration?: (number|null);

            /** RoomOption mapId */
            mapId?: (Long|null);
        }

        /** Represents a RoomOption. */
        class RoomOption implements IRoomOption {

            /**
             * Constructs a new RoomOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRoomOption);

            /** RoomOption roomSize. */
            public roomSize: number;

            /** RoomOption playDuration. */
            public playDuration: number;

            /** RoomOption mapId. */
            public mapId: Long;

            /**
             * Creates a new RoomOption instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoomOption instance
             */
            public static create(properties?: pb.common.IRoomOption): pb.common.RoomOption;

            /**
             * Encodes the specified RoomOption message. Does not implicitly {@link pb.common.RoomOption.verify|verify} messages.
             * @param message RoomOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRoomOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoomOption message, length delimited. Does not implicitly {@link pb.common.RoomOption.verify|verify} messages.
             * @param message RoomOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRoomOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoomOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoomOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RoomOption;

            /**
             * Decodes a RoomOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoomOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RoomOption;

            /**
             * Verifies a RoomOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoomOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoomOption
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RoomOption;

            /**
             * Creates a plain object from a RoomOption message. Also converts values to other types if specified.
             * @param message RoomOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RoomOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoomOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** PlayerState enum. */
        enum PlayerState {
            PLAYER_STATE_BEGIN = 0,
            PLAYER_STATE_IN_ROOM = 1,
            PLAYER_STATE_MATCHING = 2,
            PLAYER_STATE_MATCHED = 3,
            PLAYER_STATE_READY = 4,
            PLAYER_STATE_PLAYING = 5
        }

        /** Properties of a Level. */
        interface ILevel {

            /** Level value */
            value?: (Long|null);

            /** Level lowExp */
            lowExp?: (Long|null);

            /** Level highExp */
            highExp?: (Long|null);
        }

        /** Represents a Level. */
        class Level implements ILevel {

            /**
             * Constructs a new Level.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ILevel);

            /** Level value. */
            public value: Long;

            /** Level lowExp. */
            public lowExp: Long;

            /** Level highExp. */
            public highExp: Long;

            /**
             * Creates a new Level instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Level instance
             */
            public static create(properties?: pb.common.ILevel): pb.common.Level;

            /**
             * Encodes the specified Level message. Does not implicitly {@link pb.common.Level.verify|verify} messages.
             * @param message Level message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ILevel, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Level message, length delimited. Does not implicitly {@link pb.common.Level.verify|verify} messages.
             * @param message Level message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ILevel, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Level message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Level
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.Level;

            /**
             * Decodes a Level message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Level
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.Level;

            /**
             * Verifies a Level message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Level message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Level
             */
            public static fromObject(object: { [k: string]: any }): pb.common.Level;

            /**
             * Creates a plain object from a Level message. Also converts values to other types if specified.
             * @param message Level
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.Level, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Level to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AssetScoreField. */
        interface IAssetScoreField {

            /** AssetScoreField title */
            title?: (string|null);

            /** AssetScoreField value */
            value?: (Long|null);
        }

        /** Represents an AssetScoreField. */
        class AssetScoreField implements IAssetScoreField {

            /**
             * Constructs a new AssetScoreField.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAssetScoreField);

            /** AssetScoreField title. */
            public title: string;

            /** AssetScoreField value. */
            public value: Long;

            /**
             * Creates a new AssetScoreField instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AssetScoreField instance
             */
            public static create(properties?: pb.common.IAssetScoreField): pb.common.AssetScoreField;

            /**
             * Encodes the specified AssetScoreField message. Does not implicitly {@link pb.common.AssetScoreField.verify|verify} messages.
             * @param message AssetScoreField message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAssetScoreField, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetScoreField message, length delimited. Does not implicitly {@link pb.common.AssetScoreField.verify|verify} messages.
             * @param message AssetScoreField message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAssetScoreField, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetScoreField message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetScoreField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AssetScoreField;

            /**
             * Decodes an AssetScoreField message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetScoreField
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AssetScoreField;

            /**
             * Verifies an AssetScoreField message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetScoreField message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetScoreField
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AssetScoreField;

            /**
             * Creates a plain object from an AssetScoreField message. Also converts values to other types if specified.
             * @param message AssetScoreField
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AssetScoreField, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetScoreField to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameBonus. */
        interface IGameBonus {

            /** GameBonus userID */
            userID?: (Long|null);

            /** GameBonus bonusGold */
            bonusGold?: (number|null);

            /** GameBonus extraGold */
            extraGold?: (number|null);

            /** GameBonus gold */
            gold?: (number|null);

            /** GameBonus bonusExp */
            bonusExp?: (number|null);

            /** GameBonus extraExp */
            extraExp?: (number|null);

            /** GameBonus exp */
            exp?: (number|null);

            /** GameBonus levels */
            levels?: (pb.common.ILevel[]|null);

            /** GameBonus rankBonus */
            rankBonus?: (pb.common.GameBonus.IforRank|null);
        }

        /** Represents a GameBonus. */
        class GameBonus implements IGameBonus {

            /**
             * Constructs a new GameBonus.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameBonus);

            /** GameBonus userID. */
            public userID: Long;

            /** GameBonus bonusGold. */
            public bonusGold: number;

            /** GameBonus extraGold. */
            public extraGold: number;

            /** GameBonus gold. */
            public gold: number;

            /** GameBonus bonusExp. */
            public bonusExp: number;

            /** GameBonus extraExp. */
            public extraExp: number;

            /** GameBonus exp. */
            public exp: number;

            /** GameBonus levels. */
            public levels: pb.common.ILevel[];

            /** GameBonus rankBonus. */
            public rankBonus?: (pb.common.GameBonus.IforRank|null);

            /**
             * Creates a new GameBonus instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameBonus instance
             */
            public static create(properties?: pb.common.IGameBonus): pb.common.GameBonus;

            /**
             * Encodes the specified GameBonus message. Does not implicitly {@link pb.common.GameBonus.verify|verify} messages.
             * @param message GameBonus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameBonus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameBonus message, length delimited. Does not implicitly {@link pb.common.GameBonus.verify|verify} messages.
             * @param message GameBonus message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameBonus, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameBonus message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameBonus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameBonus;

            /**
             * Decodes a GameBonus message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameBonus
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameBonus;

            /**
             * Verifies a GameBonus message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameBonus message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameBonus
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameBonus;

            /**
             * Creates a plain object from a GameBonus message. Also converts values to other types if specified.
             * @param message GameBonus
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameBonus, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameBonus to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GameBonus {

            /** Properties of a forRank. */
            interface IforRank {

                /** forRank assetScore */
                assetScore?: (Long|null);

                /** forRank assetScoreItems */
                assetScoreItems?: (pb.common.IAssetScoreField[]|null);

                /** forRank assetLevel */
                assetLevel?: (string|null);

                /** forRank accBonus */
                accBonus?: (string|null);

                /** forRank accTotal */
                accTotal?: (string|null);
            }

            /** Represents a forRank. */
            class forRank implements IforRank {

                /**
                 * Constructs a new forRank.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.GameBonus.IforRank);

                /** forRank assetScore. */
                public assetScore: Long;

                /** forRank assetScoreItems. */
                public assetScoreItems: pb.common.IAssetScoreField[];

                /** forRank assetLevel. */
                public assetLevel: string;

                /** forRank accBonus. */
                public accBonus: string;

                /** forRank accTotal. */
                public accTotal: string;

                /**
                 * Creates a new forRank instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns forRank instance
                 */
                public static create(properties?: pb.common.GameBonus.IforRank): pb.common.GameBonus.forRank;

                /**
                 * Encodes the specified forRank message. Does not implicitly {@link pb.common.GameBonus.forRank.verify|verify} messages.
                 * @param message forRank message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.GameBonus.IforRank, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified forRank message, length delimited. Does not implicitly {@link pb.common.GameBonus.forRank.verify|verify} messages.
                 * @param message forRank message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.GameBonus.IforRank, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a forRank message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns forRank
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameBonus.forRank;

                /**
                 * Decodes a forRank message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns forRank
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameBonus.forRank;

                /**
                 * Verifies a forRank message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a forRank message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns forRank
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.GameBonus.forRank;

                /**
                 * Creates a plain object from a forRank message. Also converts values to other types if specified.
                 * @param message forRank
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.GameBonus.forRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this forRank to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a PaginationReq. */
        interface IPaginationReq {

            /** PaginationReq page */
            page?: (number|null);

            /** PaginationReq perPage */
            perPage?: (number|null);
        }

        /** Represents a PaginationReq. */
        class PaginationReq implements IPaginationReq {

            /**
             * Constructs a new PaginationReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPaginationReq);

            /** PaginationReq page. */
            public page: number;

            /** PaginationReq perPage. */
            public perPage: number;

            /**
             * Creates a new PaginationReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PaginationReq instance
             */
            public static create(properties?: pb.common.IPaginationReq): pb.common.PaginationReq;

            /**
             * Encodes the specified PaginationReq message. Does not implicitly {@link pb.common.PaginationReq.verify|verify} messages.
             * @param message PaginationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPaginationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PaginationReq message, length delimited. Does not implicitly {@link pb.common.PaginationReq.verify|verify} messages.
             * @param message PaginationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPaginationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PaginationReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PaginationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PaginationReq;

            /**
             * Decodes a PaginationReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PaginationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PaginationReq;

            /**
             * Verifies a PaginationReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PaginationReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PaginationReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PaginationReq;

            /**
             * Creates a plain object from a PaginationReq message. Also converts values to other types if specified.
             * @param message PaginationReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PaginationReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PaginationReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PaginationRsp. */
        interface IPaginationRsp {

            /** PaginationRsp page */
            page?: (number|null);

            /** PaginationRsp perPage */
            perPage?: (number|null);

            /** PaginationRsp totalCount */
            totalCount?: (number|null);

            /** PaginationRsp totalPages */
            totalPages?: (number|null);
        }

        /** Represents a PaginationRsp. */
        class PaginationRsp implements IPaginationRsp {

            /**
             * Constructs a new PaginationRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPaginationRsp);

            /** PaginationRsp page. */
            public page: number;

            /** PaginationRsp perPage. */
            public perPage: number;

            /** PaginationRsp totalCount. */
            public totalCount: number;

            /** PaginationRsp totalPages. */
            public totalPages: number;

            /**
             * Creates a new PaginationRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PaginationRsp instance
             */
            public static create(properties?: pb.common.IPaginationRsp): pb.common.PaginationRsp;

            /**
             * Encodes the specified PaginationRsp message. Does not implicitly {@link pb.common.PaginationRsp.verify|verify} messages.
             * @param message PaginationRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPaginationRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PaginationRsp message, length delimited. Does not implicitly {@link pb.common.PaginationRsp.verify|verify} messages.
             * @param message PaginationRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPaginationRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PaginationRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PaginationRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PaginationRsp;

            /**
             * Decodes a PaginationRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PaginationRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PaginationRsp;

            /**
             * Verifies a PaginationRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PaginationRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PaginationRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PaginationRsp;

            /**
             * Creates a plain object from a PaginationRsp message. Also converts values to other types if specified.
             * @param message PaginationRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PaginationRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PaginationRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DetailValue. */
        interface IDetailValue {

            /** DetailValue name */
            name?: (string|null);

            /** DetailValue code */
            code?: (string|null);

            /** DetailValue value */
            value?: (Long|null);

            /** DetailValue category */
            category?: (string|null);

            /** DetailValue unitPrice */
            unitPrice?: (Long|null);

            /** DetailValue liabilities */
            liabilities?: (Long|null);

            /** DetailValue income */
            income?: (Long|null);

            /** DetailValue expense */
            expense?: (Long|null);

            /** DetailValue shard */
            shard?: (Long|null);

            /** DetailValue mark */
            mark?: (Long|null);

            /** DetailValue imgFile */
            imgFile?: (string|null);

            /** DetailValue desc */
            desc?: (string|null);

            /** DetailValue downPayment */
            downPayment?: (Long|null);

            /** DetailValue downPaymentPCT */
            downPaymentPCT?: (number|null);

            /** DetailValue interestRatePCT */
            interestRatePCT?: (number|null);

            /** DetailValue yieldRatePCT */
            yieldRatePCT?: (number|null);

            /** DetailValue highPrice */
            highPrice?: (Long|null);

            /** DetailValue lowPrice */
            lowPrice?: (Long|null);
        }

        /** Represents a DetailValue. */
        class DetailValue implements IDetailValue {

            /**
             * Constructs a new DetailValue.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IDetailValue);

            /** DetailValue name. */
            public name: string;

            /** DetailValue code. */
            public code: string;

            /** DetailValue value. */
            public value: Long;

            /** DetailValue category. */
            public category: string;

            /** DetailValue unitPrice. */
            public unitPrice: Long;

            /** DetailValue liabilities. */
            public liabilities: Long;

            /** DetailValue income. */
            public income: Long;

            /** DetailValue expense. */
            public expense: Long;

            /** DetailValue shard. */
            public shard: Long;

            /** DetailValue mark. */
            public mark: Long;

            /** DetailValue imgFile. */
            public imgFile: string;

            /** DetailValue desc. */
            public desc: string;

            /** DetailValue downPayment. */
            public downPayment: Long;

            /** DetailValue downPaymentPCT. */
            public downPaymentPCT: number;

            /** DetailValue interestRatePCT. */
            public interestRatePCT: number;

            /** DetailValue yieldRatePCT. */
            public yieldRatePCT: number;

            /** DetailValue highPrice. */
            public highPrice: Long;

            /** DetailValue lowPrice. */
            public lowPrice: Long;

            /**
             * Creates a new DetailValue instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DetailValue instance
             */
            public static create(properties?: pb.common.IDetailValue): pb.common.DetailValue;

            /**
             * Encodes the specified DetailValue message. Does not implicitly {@link pb.common.DetailValue.verify|verify} messages.
             * @param message DetailValue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IDetailValue, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DetailValue message, length delimited. Does not implicitly {@link pb.common.DetailValue.verify|verify} messages.
             * @param message DetailValue message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IDetailValue, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DetailValue message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DetailValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.DetailValue;

            /**
             * Decodes a DetailValue message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DetailValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.DetailValue;

            /**
             * Verifies a DetailValue message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DetailValue message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DetailValue
             */
            public static fromObject(object: { [k: string]: any }): pb.common.DetailValue;

            /**
             * Creates a plain object from a DetailValue message. Also converts values to other types if specified.
             * @param message DetailValue
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.DetailValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DetailValue to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TopCategory. */
        interface ITopCategory {

            /** TopCategory category */
            category?: (string|null);

            /** TopCategory code */
            code?: (string|null);

            /** TopCategory details */
            details?: (pb.common.IDetailValue[]|null);
        }

        /** Represents a TopCategory. */
        class TopCategory implements ITopCategory {

            /**
             * Constructs a new TopCategory.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ITopCategory);

            /** TopCategory category. */
            public category: string;

            /** TopCategory code. */
            public code: string;

            /** TopCategory details. */
            public details: pb.common.IDetailValue[];

            /**
             * Creates a new TopCategory instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TopCategory instance
             */
            public static create(properties?: pb.common.ITopCategory): pb.common.TopCategory;

            /**
             * Encodes the specified TopCategory message. Does not implicitly {@link pb.common.TopCategory.verify|verify} messages.
             * @param message TopCategory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ITopCategory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TopCategory message, length delimited. Does not implicitly {@link pb.common.TopCategory.verify|verify} messages.
             * @param message TopCategory message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ITopCategory, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TopCategory message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TopCategory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.TopCategory;

            /**
             * Decodes a TopCategory message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TopCategory
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.TopCategory;

            /**
             * Verifies a TopCategory message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TopCategory message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TopCategory
             */
            public static fromObject(object: { [k: string]: any }): pb.common.TopCategory;

            /**
             * Creates a plain object from a TopCategory message. Also converts values to other types if specified.
             * @param message TopCategory
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.TopCategory, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TopCategory to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CashFlowStatement. */
        interface ICashFlowStatement {

            /** CashFlowStatement total */
            total?: (Long|null);

            /** CashFlowStatement details */
            details?: (pb.common.IDetailValue[]|null);
        }

        /** Represents a CashFlowStatement. */
        class CashFlowStatement implements ICashFlowStatement {

            /**
             * Constructs a new CashFlowStatement.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICashFlowStatement);

            /** CashFlowStatement total. */
            public total: Long;

            /** CashFlowStatement details. */
            public details: pb.common.IDetailValue[];

            /**
             * Creates a new CashFlowStatement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CashFlowStatement instance
             */
            public static create(properties?: pb.common.ICashFlowStatement): pb.common.CashFlowStatement;

            /**
             * Encodes the specified CashFlowStatement message. Does not implicitly {@link pb.common.CashFlowStatement.verify|verify} messages.
             * @param message CashFlowStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICashFlowStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CashFlowStatement message, length delimited. Does not implicitly {@link pb.common.CashFlowStatement.verify|verify} messages.
             * @param message CashFlowStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICashFlowStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CashFlowStatement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CashFlowStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CashFlowStatement;

            /**
             * Decodes a CashFlowStatement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CashFlowStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CashFlowStatement;

            /**
             * Verifies a CashFlowStatement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CashFlowStatement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CashFlowStatement
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CashFlowStatement;

            /**
             * Creates a plain object from a CashFlowStatement message. Also converts values to other types if specified.
             * @param message CashFlowStatement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CashFlowStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CashFlowStatement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AssetLiabilityStatement. */
        interface IAssetLiabilityStatement {

            /** AssetLiabilityStatement assetTotal */
            assetTotal?: (Long|null);

            /** AssetLiabilityStatement debtsTotal */
            debtsTotal?: (Long|null);

            /** AssetLiabilityStatement assets */
            assets?: (pb.common.ITopCategory[]|null);

            /** AssetLiabilityStatement debts */
            debts?: (pb.common.ITopCategory[]|null);
        }

        /** Represents an AssetLiabilityStatement. */
        class AssetLiabilityStatement implements IAssetLiabilityStatement {

            /**
             * Constructs a new AssetLiabilityStatement.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAssetLiabilityStatement);

            /** AssetLiabilityStatement assetTotal. */
            public assetTotal: Long;

            /** AssetLiabilityStatement debtsTotal. */
            public debtsTotal: Long;

            /** AssetLiabilityStatement assets. */
            public assets: pb.common.ITopCategory[];

            /** AssetLiabilityStatement debts. */
            public debts: pb.common.ITopCategory[];

            /**
             * Creates a new AssetLiabilityStatement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AssetLiabilityStatement instance
             */
            public static create(properties?: pb.common.IAssetLiabilityStatement): pb.common.AssetLiabilityStatement;

            /**
             * Encodes the specified AssetLiabilityStatement message. Does not implicitly {@link pb.common.AssetLiabilityStatement.verify|verify} messages.
             * @param message AssetLiabilityStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAssetLiabilityStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetLiabilityStatement message, length delimited. Does not implicitly {@link pb.common.AssetLiabilityStatement.verify|verify} messages.
             * @param message AssetLiabilityStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAssetLiabilityStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetLiabilityStatement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetLiabilityStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AssetLiabilityStatement;

            /**
             * Decodes an AssetLiabilityStatement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetLiabilityStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AssetLiabilityStatement;

            /**
             * Verifies an AssetLiabilityStatement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetLiabilityStatement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetLiabilityStatement
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AssetLiabilityStatement;

            /**
             * Creates a plain object from an AssetLiabilityStatement message. Also converts values to other types if specified.
             * @param message AssetLiabilityStatement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AssetLiabilityStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetLiabilityStatement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MonthProfitLossStatement. */
        interface IMonthProfitLossStatement {

            /** MonthProfitLossStatement income */
            income?: (Long|null);

            /** MonthProfitLossStatement expense */
            expense?: (Long|null);

            /** MonthProfitLossStatement cashflow */
            cashflow?: (Long|null);

            /** MonthProfitLossStatement incomeTops */
            incomeTops?: (pb.common.ITopCategory[]|null);

            /** MonthProfitLossStatement expenseTops */
            expenseTops?: (pb.common.ITopCategory[]|null);

            /** MonthProfitLossStatement cashflowTops */
            cashflowTops?: (pb.common.ITopCategory[]|null);
        }

        /** Represents a MonthProfitLossStatement. */
        class MonthProfitLossStatement implements IMonthProfitLossStatement {

            /**
             * Constructs a new MonthProfitLossStatement.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IMonthProfitLossStatement);

            /** MonthProfitLossStatement income. */
            public income: Long;

            /** MonthProfitLossStatement expense. */
            public expense: Long;

            /** MonthProfitLossStatement cashflow. */
            public cashflow: Long;

            /** MonthProfitLossStatement incomeTops. */
            public incomeTops: pb.common.ITopCategory[];

            /** MonthProfitLossStatement expenseTops. */
            public expenseTops: pb.common.ITopCategory[];

            /** MonthProfitLossStatement cashflowTops. */
            public cashflowTops: pb.common.ITopCategory[];

            /**
             * Creates a new MonthProfitLossStatement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MonthProfitLossStatement instance
             */
            public static create(properties?: pb.common.IMonthProfitLossStatement): pb.common.MonthProfitLossStatement;

            /**
             * Encodes the specified MonthProfitLossStatement message. Does not implicitly {@link pb.common.MonthProfitLossStatement.verify|verify} messages.
             * @param message MonthProfitLossStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IMonthProfitLossStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MonthProfitLossStatement message, length delimited. Does not implicitly {@link pb.common.MonthProfitLossStatement.verify|verify} messages.
             * @param message MonthProfitLossStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IMonthProfitLossStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MonthProfitLossStatement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MonthProfitLossStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.MonthProfitLossStatement;

            /**
             * Decodes a MonthProfitLossStatement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MonthProfitLossStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.MonthProfitLossStatement;

            /**
             * Verifies a MonthProfitLossStatement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MonthProfitLossStatement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MonthProfitLossStatement
             */
            public static fromObject(object: { [k: string]: any }): pb.common.MonthProfitLossStatement;

            /**
             * Creates a plain object from a MonthProfitLossStatement message. Also converts values to other types if specified.
             * @param message MonthProfitLossStatement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.MonthProfitLossStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MonthProfitLossStatement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AssetStatement. */
        interface IAssetStatement {

            /** AssetStatement degree */
            degree?: (number|null);

            /** AssetStatement cashFlow */
            cashFlow?: (pb.common.ICashFlowStatement|null);

            /** AssetStatement assetLiability */
            assetLiability?: (pb.common.IAssetLiabilityStatement|null);

            /** AssetStatement monthProfitLoss */
            monthProfitLoss?: (pb.common.IMonthProfitLossStatement|null);
        }

        /** Represents an AssetStatement. */
        class AssetStatement implements IAssetStatement {

            /**
             * Constructs a new AssetStatement.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAssetStatement);

            /** AssetStatement degree. */
            public degree: number;

            /** AssetStatement cashFlow. */
            public cashFlow?: (pb.common.ICashFlowStatement|null);

            /** AssetStatement assetLiability. */
            public assetLiability?: (pb.common.IAssetLiabilityStatement|null);

            /** AssetStatement monthProfitLoss. */
            public monthProfitLoss?: (pb.common.IMonthProfitLossStatement|null);

            /**
             * Creates a new AssetStatement instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AssetStatement instance
             */
            public static create(properties?: pb.common.IAssetStatement): pb.common.AssetStatement;

            /**
             * Encodes the specified AssetStatement message. Does not implicitly {@link pb.common.AssetStatement.verify|verify} messages.
             * @param message AssetStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAssetStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AssetStatement message, length delimited. Does not implicitly {@link pb.common.AssetStatement.verify|verify} messages.
             * @param message AssetStatement message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAssetStatement, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AssetStatement message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AssetStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AssetStatement;

            /**
             * Decodes an AssetStatement message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AssetStatement
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AssetStatement;

            /**
             * Verifies an AssetStatement message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AssetStatement message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AssetStatement
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AssetStatement;

            /**
             * Creates a plain object from an AssetStatement message. Also converts values to other types if specified.
             * @param message AssetStatement
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AssetStatement, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AssetStatement to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** SceneType enum. */
        enum SceneType {
            ST_PB_PLACEHOLDER = 0,
            CHOOSE_ROLE = 999,
            ROLLING = 1000,
            CHANCE = 1001,
            CHANCE_CHOOSED = 1002,
            ASSET_BOUGHT = 1003,
            AUCTION_STARTED = 1004,
            AUCTION_IGNORED = 1005,
            AUCTION_JOINED = 1006,
            AUCTION_COMPLETED = 1007,
            ACCIDENT_CONSUME = 1011,
            MARKET_TREND = 1021,
            CHILD_BORN = 1031,
            CHILD_BORN_REDPACKET_RECEIVED = 1032,
            CHILD_BORN_IGNORED = 1033,
            CHARITY = 1040,
            UNEMPLOYMENT = 1050,
            WAGE_HIKE = 1060,
            PAYDAY = 1070
        }

        /** ErrorCode enum. */
        enum ErrorCode {
            SUCC = 0,
            NOT_AUTH = 1,
            FAILED = 3,
            NO_GAME = 4,
            INTERNAL_EXCEPTION = 10,
            CONN_REFUSED = 11,
            UNDER_MAINTENANCE = 12,
            INVALID_ARGUMENT = 13,
            NOT_FOUND = 14,
            INSUFFICIENT_TRAINING_GAME = 101,
            ROOM_FULL = 1000
        }

        /** Properties of a GameLoginReq. */
        interface IGameLoginReq {

            /** GameLoginReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** GameLoginReq token */
            token?: (string|null);
        }

        /** Represents a GameLoginReq. */
        class GameLoginReq implements IGameLoginReq {

            /**
             * Constructs a new GameLoginReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameLoginReq);

            /** GameLoginReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** GameLoginReq token. */
            public token: string;

            /**
             * Creates a new GameLoginReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameLoginReq instance
             */
            public static create(properties?: pb.common.IGameLoginReq): pb.common.GameLoginReq;

            /**
             * Encodes the specified GameLoginReq message. Does not implicitly {@link pb.common.GameLoginReq.verify|verify} messages.
             * @param message GameLoginReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameLoginReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameLoginReq message, length delimited. Does not implicitly {@link pb.common.GameLoginReq.verify|verify} messages.
             * @param message GameLoginReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameLoginReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameLoginReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameLoginReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameLoginReq;

            /**
             * Decodes a GameLoginReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameLoginReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameLoginReq;

            /**
             * Verifies a GameLoginReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameLoginReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameLoginReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameLoginReq;

            /**
             * Creates a plain object from a GameLoginReq message. Also converts values to other types if specified.
             * @param message GameLoginReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameLoginReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameLoginReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameLoginRsp. */
        interface IGameLoginRsp {

            /** GameLoginRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a GameLoginRsp. */
        class GameLoginRsp implements IGameLoginRsp {

            /**
             * Constructs a new GameLoginRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameLoginRsp);

            /** GameLoginRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new GameLoginRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameLoginRsp instance
             */
            public static create(properties?: pb.common.IGameLoginRsp): pb.common.GameLoginRsp;

            /**
             * Encodes the specified GameLoginRsp message. Does not implicitly {@link pb.common.GameLoginRsp.verify|verify} messages.
             * @param message GameLoginRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameLoginRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameLoginRsp message, length delimited. Does not implicitly {@link pb.common.GameLoginRsp.verify|verify} messages.
             * @param message GameLoginRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameLoginRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameLoginRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameLoginRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameLoginRsp;

            /**
             * Decodes a GameLoginRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameLoginRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameLoginRsp;

            /**
             * Verifies a GameLoginRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameLoginRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameLoginRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameLoginRsp;

            /**
             * Creates a plain object from a GameLoginRsp message. Also converts values to other types if specified.
             * @param message GameLoginRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameLoginRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameLoginRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameQuitReq. */
        interface IGameQuitReq {

            /** GameQuitReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GameQuitReq. */
        class GameQuitReq implements IGameQuitReq {

            /**
             * Constructs a new GameQuitReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameQuitReq);

            /** GameQuitReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GameQuitReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameQuitReq instance
             */
            public static create(properties?: pb.common.IGameQuitReq): pb.common.GameQuitReq;

            /**
             * Encodes the specified GameQuitReq message. Does not implicitly {@link pb.common.GameQuitReq.verify|verify} messages.
             * @param message GameQuitReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameQuitReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameQuitReq message, length delimited. Does not implicitly {@link pb.common.GameQuitReq.verify|verify} messages.
             * @param message GameQuitReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameQuitReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameQuitReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameQuitReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameQuitReq;

            /**
             * Decodes a GameQuitReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameQuitReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameQuitReq;

            /**
             * Verifies a GameQuitReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameQuitReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameQuitReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameQuitReq;

            /**
             * Creates a plain object from a GameQuitReq message. Also converts values to other types if specified.
             * @param message GameQuitReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameQuitReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameQuitReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameQuitRsp. */
        interface IGameQuitRsp {

            /** GameQuitRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a GameQuitRsp. */
        class GameQuitRsp implements IGameQuitRsp {

            /**
             * Constructs a new GameQuitRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameQuitRsp);

            /** GameQuitRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new GameQuitRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameQuitRsp instance
             */
            public static create(properties?: pb.common.IGameQuitRsp): pb.common.GameQuitRsp;

            /**
             * Encodes the specified GameQuitRsp message. Does not implicitly {@link pb.common.GameQuitRsp.verify|verify} messages.
             * @param message GameQuitRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameQuitRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameQuitRsp message, length delimited. Does not implicitly {@link pb.common.GameQuitRsp.verify|verify} messages.
             * @param message GameQuitRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameQuitRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameQuitRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameQuitRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameQuitRsp;

            /**
             * Decodes a GameQuitRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameQuitRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameQuitRsp;

            /**
             * Verifies a GameQuitRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameQuitRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameQuitRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameQuitRsp;

            /**
             * Creates a plain object from a GameQuitRsp message. Also converts values to other types if specified.
             * @param message GameQuitRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameQuitRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameQuitRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerQuitGameMsg. */
        interface IPlayerQuitGameMsg {

            /** PlayerQuitGameMsg userID */
            userID?: (Long|null);

            /** PlayerQuitGameMsg gameID */
            gameID?: (Long|null);
        }

        /** Represents a PlayerQuitGameMsg. */
        class PlayerQuitGameMsg implements IPlayerQuitGameMsg {

            /**
             * Constructs a new PlayerQuitGameMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerQuitGameMsg);

            /** PlayerQuitGameMsg userID. */
            public userID: Long;

            /** PlayerQuitGameMsg gameID. */
            public gameID: Long;

            /**
             * Creates a new PlayerQuitGameMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerQuitGameMsg instance
             */
            public static create(properties?: pb.common.IPlayerQuitGameMsg): pb.common.PlayerQuitGameMsg;

            /**
             * Encodes the specified PlayerQuitGameMsg message. Does not implicitly {@link pb.common.PlayerQuitGameMsg.verify|verify} messages.
             * @param message PlayerQuitGameMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerQuitGameMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerQuitGameMsg message, length delimited. Does not implicitly {@link pb.common.PlayerQuitGameMsg.verify|verify} messages.
             * @param message PlayerQuitGameMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerQuitGameMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerQuitGameMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerQuitGameMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerQuitGameMsg;

            /**
             * Decodes a PlayerQuitGameMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerQuitGameMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerQuitGameMsg;

            /**
             * Verifies a PlayerQuitGameMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerQuitGameMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerQuitGameMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerQuitGameMsg;

            /**
             * Creates a plain object from a PlayerQuitGameMsg message. Also converts values to other types if specified.
             * @param message PlayerQuitGameMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerQuitGameMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerQuitGameMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MatchReq. */
        interface IMatchReq {

            /** MatchReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a MatchReq. */
        class MatchReq implements IMatchReq {

            /**
             * Constructs a new MatchReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IMatchReq);

            /** MatchReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new MatchReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MatchReq instance
             */
            public static create(properties?: pb.common.IMatchReq): pb.common.MatchReq;

            /**
             * Encodes the specified MatchReq message. Does not implicitly {@link pb.common.MatchReq.verify|verify} messages.
             * @param message MatchReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IMatchReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MatchReq message, length delimited. Does not implicitly {@link pb.common.MatchReq.verify|verify} messages.
             * @param message MatchReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IMatchReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MatchReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MatchReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.MatchReq;

            /**
             * Decodes a MatchReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MatchReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.MatchReq;

            /**
             * Verifies a MatchReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MatchReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MatchReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.MatchReq;

            /**
             * Creates a plain object from a MatchReq message. Also converts values to other types if specified.
             * @param message MatchReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.MatchReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MatchReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MatchRsp. */
        interface IMatchRsp {

            /** MatchRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** MatchRsp status */
            status?: (number|null);
        }

        /** Represents a MatchRsp. */
        class MatchRsp implements IMatchRsp {

            /**
             * Constructs a new MatchRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IMatchRsp);

            /** MatchRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** MatchRsp status. */
            public status: number;

            /**
             * Creates a new MatchRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MatchRsp instance
             */
            public static create(properties?: pb.common.IMatchRsp): pb.common.MatchRsp;

            /**
             * Encodes the specified MatchRsp message. Does not implicitly {@link pb.common.MatchRsp.verify|verify} messages.
             * @param message MatchRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IMatchRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MatchRsp message, length delimited. Does not implicitly {@link pb.common.MatchRsp.verify|verify} messages.
             * @param message MatchRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IMatchRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MatchRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MatchRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.MatchRsp;

            /**
             * Decodes a MatchRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MatchRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.MatchRsp;

            /**
             * Verifies a MatchRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MatchRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MatchRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.MatchRsp;

            /**
             * Creates a plain object from a MatchRsp message. Also converts values to other types if specified.
             * @param message MatchRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.MatchRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MatchRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MatchMsg. */
        interface IMatchMsg {

            /** MatchMsg status */
            status?: (number|null);

            /** MatchMsg roomId */
            roomId?: (string|null);

            /** MatchMsg members */
            members?: (pb.common.IPlayerInfo[]|null);
        }

        /** Represents a MatchMsg. */
        class MatchMsg implements IMatchMsg {

            /**
             * Constructs a new MatchMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IMatchMsg);

            /** MatchMsg status. */
            public status: number;

            /** MatchMsg roomId. */
            public roomId: string;

            /** MatchMsg members. */
            public members: pb.common.IPlayerInfo[];

            /**
             * Creates a new MatchMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MatchMsg instance
             */
            public static create(properties?: pb.common.IMatchMsg): pb.common.MatchMsg;

            /**
             * Encodes the specified MatchMsg message. Does not implicitly {@link pb.common.MatchMsg.verify|verify} messages.
             * @param message MatchMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IMatchMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MatchMsg message, length delimited. Does not implicitly {@link pb.common.MatchMsg.verify|verify} messages.
             * @param message MatchMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IMatchMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MatchMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MatchMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.MatchMsg;

            /**
             * Decodes a MatchMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MatchMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.MatchMsg;

            /**
             * Verifies a MatchMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MatchMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MatchMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.MatchMsg;

            /**
             * Creates a plain object from a MatchMsg message. Also converts values to other types if specified.
             * @param message MatchMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.MatchMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MatchMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ExitMatchReq. */
        interface IExitMatchReq {

            /** ExitMatchReq roomId */
            roomId?: (string|null);
        }

        /** Represents an ExitMatchReq. */
        class ExitMatchReq implements IExitMatchReq {

            /**
             * Constructs a new ExitMatchReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IExitMatchReq);

            /** ExitMatchReq roomId. */
            public roomId: string;

            /**
             * Creates a new ExitMatchReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExitMatchReq instance
             */
            public static create(properties?: pb.common.IExitMatchReq): pb.common.ExitMatchReq;

            /**
             * Encodes the specified ExitMatchReq message. Does not implicitly {@link pb.common.ExitMatchReq.verify|verify} messages.
             * @param message ExitMatchReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IExitMatchReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExitMatchReq message, length delimited. Does not implicitly {@link pb.common.ExitMatchReq.verify|verify} messages.
             * @param message ExitMatchReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IExitMatchReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExitMatchReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExitMatchReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ExitMatchReq;

            /**
             * Decodes an ExitMatchReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExitMatchReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ExitMatchReq;

            /**
             * Verifies an ExitMatchReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExitMatchReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExitMatchReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ExitMatchReq;

            /**
             * Creates a plain object from an ExitMatchReq message. Also converts values to other types if specified.
             * @param message ExitMatchReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ExitMatchReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExitMatchReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ExitMatchRsp. */
        interface IExitMatchRsp {

            /** ExitMatchRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents an ExitMatchRsp. */
        class ExitMatchRsp implements IExitMatchRsp {

            /**
             * Constructs a new ExitMatchRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IExitMatchRsp);

            /** ExitMatchRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new ExitMatchRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExitMatchRsp instance
             */
            public static create(properties?: pb.common.IExitMatchRsp): pb.common.ExitMatchRsp;

            /**
             * Encodes the specified ExitMatchRsp message. Does not implicitly {@link pb.common.ExitMatchRsp.verify|verify} messages.
             * @param message ExitMatchRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IExitMatchRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExitMatchRsp message, length delimited. Does not implicitly {@link pb.common.ExitMatchRsp.verify|verify} messages.
             * @param message ExitMatchRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IExitMatchRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExitMatchRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExitMatchRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ExitMatchRsp;

            /**
             * Decodes an ExitMatchRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExitMatchRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ExitMatchRsp;

            /**
             * Verifies an ExitMatchRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExitMatchRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExitMatchRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ExitMatchRsp;

            /**
             * Creates a plain object from an ExitMatchRsp message. Also converts values to other types if specified.
             * @param message ExitMatchRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ExitMatchRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExitMatchRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ExitMatchMsg. */
        interface IExitMatchMsg {

            /** ExitMatchMsg roomId */
            roomId?: (string|null);
        }

        /** Represents an ExitMatchMsg. */
        class ExitMatchMsg implements IExitMatchMsg {

            /**
             * Constructs a new ExitMatchMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IExitMatchMsg);

            /** ExitMatchMsg roomId. */
            public roomId: string;

            /**
             * Creates a new ExitMatchMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExitMatchMsg instance
             */
            public static create(properties?: pb.common.IExitMatchMsg): pb.common.ExitMatchMsg;

            /**
             * Encodes the specified ExitMatchMsg message. Does not implicitly {@link pb.common.ExitMatchMsg.verify|verify} messages.
             * @param message ExitMatchMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IExitMatchMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExitMatchMsg message, length delimited. Does not implicitly {@link pb.common.ExitMatchMsg.verify|verify} messages.
             * @param message ExitMatchMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IExitMatchMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExitMatchMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExitMatchMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ExitMatchMsg;

            /**
             * Decodes an ExitMatchMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExitMatchMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ExitMatchMsg;

            /**
             * Verifies an ExitMatchMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExitMatchMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExitMatchMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ExitMatchMsg;

            /**
             * Creates a plain object from an ExitMatchMsg message. Also converts values to other types if specified.
             * @param message ExitMatchMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ExitMatchMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExitMatchMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PrepareReq. */
        interface IPrepareReq {
        }

        /** Represents a PrepareReq. */
        class PrepareReq implements IPrepareReq {

            /**
             * Constructs a new PrepareReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPrepareReq);

            /**
             * Creates a new PrepareReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PrepareReq instance
             */
            public static create(properties?: pb.common.IPrepareReq): pb.common.PrepareReq;

            /**
             * Encodes the specified PrepareReq message. Does not implicitly {@link pb.common.PrepareReq.verify|verify} messages.
             * @param message PrepareReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPrepareReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PrepareReq message, length delimited. Does not implicitly {@link pb.common.PrepareReq.verify|verify} messages.
             * @param message PrepareReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPrepareReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PrepareReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PrepareReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PrepareReq;

            /**
             * Decodes a PrepareReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PrepareReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PrepareReq;

            /**
             * Verifies a PrepareReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PrepareReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PrepareReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PrepareReq;

            /**
             * Creates a plain object from a PrepareReq message. Also converts values to other types if specified.
             * @param message PrepareReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PrepareReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PrepareReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PrepareRsp. */
        interface IPrepareRsp {

            /** PrepareRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a PrepareRsp. */
        class PrepareRsp implements IPrepareRsp {

            /**
             * Constructs a new PrepareRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPrepareRsp);

            /** PrepareRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new PrepareRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PrepareRsp instance
             */
            public static create(properties?: pb.common.IPrepareRsp): pb.common.PrepareRsp;

            /**
             * Encodes the specified PrepareRsp message. Does not implicitly {@link pb.common.PrepareRsp.verify|verify} messages.
             * @param message PrepareRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPrepareRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PrepareRsp message, length delimited. Does not implicitly {@link pb.common.PrepareRsp.verify|verify} messages.
             * @param message PrepareRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPrepareRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PrepareRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PrepareRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PrepareRsp;

            /**
             * Decodes a PrepareRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PrepareRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PrepareRsp;

            /**
             * Verifies a PrepareRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PrepareRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PrepareRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PrepareRsp;

            /**
             * Creates a plain object from a PrepareRsp message. Also converts values to other types if specified.
             * @param message PrepareRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PrepareRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PrepareRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PrepareMsg. */
        interface IPrepareMsg {
        }

        /** Represents a PrepareMsg. */
        class PrepareMsg implements IPrepareMsg {

            /**
             * Constructs a new PrepareMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPrepareMsg);

            /**
             * Creates a new PrepareMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PrepareMsg instance
             */
            public static create(properties?: pb.common.IPrepareMsg): pb.common.PrepareMsg;

            /**
             * Encodes the specified PrepareMsg message. Does not implicitly {@link pb.common.PrepareMsg.verify|verify} messages.
             * @param message PrepareMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPrepareMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PrepareMsg message, length delimited. Does not implicitly {@link pb.common.PrepareMsg.verify|verify} messages.
             * @param message PrepareMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPrepareMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PrepareMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PrepareMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PrepareMsg;

            /**
             * Decodes a PrepareMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PrepareMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PrepareMsg;

            /**
             * Verifies a PrepareMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PrepareMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PrepareMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PrepareMsg;

            /**
             * Creates a plain object from a PrepareMsg message. Also converts values to other types if specified.
             * @param message PrepareMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PrepareMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PrepareMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AnyoneTimeoutMsg. */
        interface IAnyoneTimeoutMsg {
        }

        /** Represents an AnyoneTimeoutMsg. */
        class AnyoneTimeoutMsg implements IAnyoneTimeoutMsg {

            /**
             * Constructs a new AnyoneTimeoutMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAnyoneTimeoutMsg);

            /**
             * Creates a new AnyoneTimeoutMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AnyoneTimeoutMsg instance
             */
            public static create(properties?: pb.common.IAnyoneTimeoutMsg): pb.common.AnyoneTimeoutMsg;

            /**
             * Encodes the specified AnyoneTimeoutMsg message. Does not implicitly {@link pb.common.AnyoneTimeoutMsg.verify|verify} messages.
             * @param message AnyoneTimeoutMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAnyoneTimeoutMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AnyoneTimeoutMsg message, length delimited. Does not implicitly {@link pb.common.AnyoneTimeoutMsg.verify|verify} messages.
             * @param message AnyoneTimeoutMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAnyoneTimeoutMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AnyoneTimeoutMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AnyoneTimeoutMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AnyoneTimeoutMsg;

            /**
             * Decodes an AnyoneTimeoutMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AnyoneTimeoutMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AnyoneTimeoutMsg;

            /**
             * Verifies an AnyoneTimeoutMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AnyoneTimeoutMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AnyoneTimeoutMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AnyoneTimeoutMsg;

            /**
             * Creates a plain object from an AnyoneTimeoutMsg message. Also converts values to other types if specified.
             * @param message AnyoneTimeoutMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AnyoneTimeoutMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AnyoneTimeoutMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AllReadyMsg. */
        interface IAllReadyMsg {

            /** AllReadyMsg userIds */
            userIds?: (Long[]|null);
        }

        /** Represents an AllReadyMsg. */
        class AllReadyMsg implements IAllReadyMsg {

            /**
             * Constructs a new AllReadyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAllReadyMsg);

            /** AllReadyMsg userIds. */
            public userIds: Long[];

            /**
             * Creates a new AllReadyMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AllReadyMsg instance
             */
            public static create(properties?: pb.common.IAllReadyMsg): pb.common.AllReadyMsg;

            /**
             * Encodes the specified AllReadyMsg message. Does not implicitly {@link pb.common.AllReadyMsg.verify|verify} messages.
             * @param message AllReadyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAllReadyMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AllReadyMsg message, length delimited. Does not implicitly {@link pb.common.AllReadyMsg.verify|verify} messages.
             * @param message AllReadyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAllReadyMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AllReadyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AllReadyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AllReadyMsg;

            /**
             * Decodes an AllReadyMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AllReadyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AllReadyMsg;

            /**
             * Verifies an AllReadyMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AllReadyMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AllReadyMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AllReadyMsg;

            /**
             * Creates a plain object from an AllReadyMsg message. Also converts values to other types if specified.
             * @param message AllReadyMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AllReadyMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AllReadyMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CheckPlayingReq. */
        interface ICheckPlayingReq {

            /** CheckPlayingReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a CheckPlayingReq. */
        class CheckPlayingReq implements ICheckPlayingReq {

            /**
             * Constructs a new CheckPlayingReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICheckPlayingReq);

            /** CheckPlayingReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new CheckPlayingReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckPlayingReq instance
             */
            public static create(properties?: pb.common.ICheckPlayingReq): pb.common.CheckPlayingReq;

            /**
             * Encodes the specified CheckPlayingReq message. Does not implicitly {@link pb.common.CheckPlayingReq.verify|verify} messages.
             * @param message CheckPlayingReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICheckPlayingReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckPlayingReq message, length delimited. Does not implicitly {@link pb.common.CheckPlayingReq.verify|verify} messages.
             * @param message CheckPlayingReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICheckPlayingReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckPlayingReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckPlayingReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CheckPlayingReq;

            /**
             * Decodes a CheckPlayingReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckPlayingReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CheckPlayingReq;

            /**
             * Verifies a CheckPlayingReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckPlayingReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckPlayingReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CheckPlayingReq;

            /**
             * Creates a plain object from a CheckPlayingReq message. Also converts values to other types if specified.
             * @param message CheckPlayingReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CheckPlayingReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckPlayingReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CheckPlayingRsp. */
        interface ICheckPlayingRsp {

            /** CheckPlayingRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** CheckPlayingRsp state */
            state?: (pb.common.PlayerState|null);

            /** CheckPlayingRsp room */
            room?: (pb.common.IRoomInfo|null);

            /** CheckPlayingRsp players */
            players?: (pb.common.IPlayerInfo[]|null);
        }

        /** Represents a CheckPlayingRsp. */
        class CheckPlayingRsp implements ICheckPlayingRsp {

            /**
             * Constructs a new CheckPlayingRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICheckPlayingRsp);

            /** CheckPlayingRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** CheckPlayingRsp state. */
            public state: pb.common.PlayerState;

            /** CheckPlayingRsp room. */
            public room?: (pb.common.IRoomInfo|null);

            /** CheckPlayingRsp players. */
            public players: pb.common.IPlayerInfo[];

            /**
             * Creates a new CheckPlayingRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckPlayingRsp instance
             */
            public static create(properties?: pb.common.ICheckPlayingRsp): pb.common.CheckPlayingRsp;

            /**
             * Encodes the specified CheckPlayingRsp message. Does not implicitly {@link pb.common.CheckPlayingRsp.verify|verify} messages.
             * @param message CheckPlayingRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICheckPlayingRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckPlayingRsp message, length delimited. Does not implicitly {@link pb.common.CheckPlayingRsp.verify|verify} messages.
             * @param message CheckPlayingRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICheckPlayingRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckPlayingRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckPlayingRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CheckPlayingRsp;

            /**
             * Decodes a CheckPlayingRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckPlayingRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CheckPlayingRsp;

            /**
             * Verifies a CheckPlayingRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckPlayingRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckPlayingRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CheckPlayingRsp;

            /**
             * Creates a plain object from a CheckPlayingRsp message. Also converts values to other types if specified.
             * @param message CheckPlayingRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CheckPlayingRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckPlayingRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SyncStateReq. */
        interface ISyncStateReq {

            /** SyncStateReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a SyncStateReq. */
        class SyncStateReq implements ISyncStateReq {

            /**
             * Constructs a new SyncStateReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISyncStateReq);

            /** SyncStateReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new SyncStateReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SyncStateReq instance
             */
            public static create(properties?: pb.common.ISyncStateReq): pb.common.SyncStateReq;

            /**
             * Encodes the specified SyncStateReq message. Does not implicitly {@link pb.common.SyncStateReq.verify|verify} messages.
             * @param message SyncStateReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISyncStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SyncStateReq message, length delimited. Does not implicitly {@link pb.common.SyncStateReq.verify|verify} messages.
             * @param message SyncStateReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISyncStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SyncStateReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SyncStateReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SyncStateReq;

            /**
             * Decodes a SyncStateReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SyncStateReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SyncStateReq;

            /**
             * Verifies a SyncStateReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SyncStateReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SyncStateReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SyncStateReq;

            /**
             * Creates a plain object from a SyncStateReq message. Also converts values to other types if specified.
             * @param message SyncStateReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SyncStateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SyncStateReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SyncStateRsp. */
        interface ISyncStateRsp {

            /** SyncStateRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** SyncStateRsp state */
            state?: (pb.common.IGameState|null);

            /** SyncStateRsp playerRoles */
            playerRoles?: (pb.common.IPlayerRole[]|null);

            /** SyncStateRsp stage */
            stage?: (string|null);

            /** SyncStateRsp channelID */
            channelID?: (string|null);

            /** SyncStateRsp players */
            players?: (pb.common.IGamePlayer[]|null);

            /** SyncStateRsp map */
            map?: (pb.common.IGameMap|null);

            /** SyncStateRsp matchType */
            matchType?: (pb.common.MatchType|null);
        }

        /** Represents a SyncStateRsp. */
        class SyncStateRsp implements ISyncStateRsp {

            /**
             * Constructs a new SyncStateRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISyncStateRsp);

            /** SyncStateRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** SyncStateRsp state. */
            public state?: (pb.common.IGameState|null);

            /** SyncStateRsp playerRoles. */
            public playerRoles: pb.common.IPlayerRole[];

            /** SyncStateRsp stage. */
            public stage: string;

            /** SyncStateRsp channelID. */
            public channelID: string;

            /** SyncStateRsp players. */
            public players: pb.common.IGamePlayer[];

            /** SyncStateRsp map. */
            public map?: (pb.common.IGameMap|null);

            /** SyncStateRsp matchType. */
            public matchType: pb.common.MatchType;

            /**
             * Creates a new SyncStateRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SyncStateRsp instance
             */
            public static create(properties?: pb.common.ISyncStateRsp): pb.common.SyncStateRsp;

            /**
             * Encodes the specified SyncStateRsp message. Does not implicitly {@link pb.common.SyncStateRsp.verify|verify} messages.
             * @param message SyncStateRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISyncStateRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SyncStateRsp message, length delimited. Does not implicitly {@link pb.common.SyncStateRsp.verify|verify} messages.
             * @param message SyncStateRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISyncStateRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SyncStateRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SyncStateRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SyncStateRsp;

            /**
             * Decodes a SyncStateRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SyncStateRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SyncStateRsp;

            /**
             * Verifies a SyncStateRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SyncStateRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SyncStateRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SyncStateRsp;

            /**
             * Creates a plain object from a SyncStateRsp message. Also converts values to other types if specified.
             * @param message SyncStateRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SyncStateRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SyncStateRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GamePlayer. */
        interface IGamePlayer {

            /** GamePlayer userID */
            userID?: (Long|null);

            /** GamePlayer onlineState */
            onlineState?: (pb.common.OnlineState|null);

            /** GamePlayer role */
            role?: (pb.common.IPlayerRole|null);

            /** GamePlayer playerGameData */
            playerGameData?: (pb.common.IPlayerRecord|null);

            /** GamePlayer dishonorable */
            dishonorable?: (pb.common.GamePlayer.IDishonorable|null);
        }

        /** Represents a GamePlayer. */
        class GamePlayer implements IGamePlayer {

            /**
             * Constructs a new GamePlayer.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGamePlayer);

            /** GamePlayer userID. */
            public userID: Long;

            /** GamePlayer onlineState. */
            public onlineState: pb.common.OnlineState;

            /** GamePlayer role. */
            public role?: (pb.common.IPlayerRole|null);

            /** GamePlayer playerGameData. */
            public playerGameData?: (pb.common.IPlayerRecord|null);

            /** GamePlayer dishonorable. */
            public dishonorable?: (pb.common.GamePlayer.IDishonorable|null);

            /**
             * Creates a new GamePlayer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GamePlayer instance
             */
            public static create(properties?: pb.common.IGamePlayer): pb.common.GamePlayer;

            /**
             * Encodes the specified GamePlayer message. Does not implicitly {@link pb.common.GamePlayer.verify|verify} messages.
             * @param message GamePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGamePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GamePlayer message, length delimited. Does not implicitly {@link pb.common.GamePlayer.verify|verify} messages.
             * @param message GamePlayer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGamePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GamePlayer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GamePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GamePlayer;

            /**
             * Decodes a GamePlayer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GamePlayer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GamePlayer;

            /**
             * Verifies a GamePlayer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GamePlayer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GamePlayer
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GamePlayer;

            /**
             * Creates a plain object from a GamePlayer message. Also converts values to other types if specified.
             * @param message GamePlayer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GamePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GamePlayer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GamePlayer {

            /** Properties of a Dishonorable. */
            interface IDishonorable {

                /** Dishonorable punished */
                punished?: (boolean|null);

                /** Dishonorable lazyOpt */
                lazyOpt?: (pb.common.IDishonorLazyOpt|null);
            }

            /** Represents a Dishonorable. */
            class Dishonorable implements IDishonorable {

                /**
                 * Constructs a new Dishonorable.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.GamePlayer.IDishonorable);

                /** Dishonorable punished. */
                public punished: boolean;

                /** Dishonorable lazyOpt. */
                public lazyOpt?: (pb.common.IDishonorLazyOpt|null);

                /**
                 * Creates a new Dishonorable instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Dishonorable instance
                 */
                public static create(properties?: pb.common.GamePlayer.IDishonorable): pb.common.GamePlayer.Dishonorable;

                /**
                 * Encodes the specified Dishonorable message. Does not implicitly {@link pb.common.GamePlayer.Dishonorable.verify|verify} messages.
                 * @param message Dishonorable message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.GamePlayer.IDishonorable, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Dishonorable message, length delimited. Does not implicitly {@link pb.common.GamePlayer.Dishonorable.verify|verify} messages.
                 * @param message Dishonorable message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.GamePlayer.IDishonorable, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Dishonorable message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Dishonorable
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GamePlayer.Dishonorable;

                /**
                 * Decodes a Dishonorable message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Dishonorable
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GamePlayer.Dishonorable;

                /**
                 * Verifies a Dishonorable message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Dishonorable message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Dishonorable
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.GamePlayer.Dishonorable;

                /**
                 * Creates a plain object from a Dishonorable message. Also converts values to other types if specified.
                 * @param message Dishonorable
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.GamePlayer.Dishonorable, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Dishonorable to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GetRolesReq. */
        interface IGetRolesReq {

            /** GetRolesReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetRolesReq. */
        class GetRolesReq implements IGetRolesReq {

            /**
             * Constructs a new GetRolesReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetRolesReq);

            /** GetRolesReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetRolesReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetRolesReq instance
             */
            public static create(properties?: pb.common.IGetRolesReq): pb.common.GetRolesReq;

            /**
             * Encodes the specified GetRolesReq message. Does not implicitly {@link pb.common.GetRolesReq.verify|verify} messages.
             * @param message GetRolesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetRolesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetRolesReq message, length delimited. Does not implicitly {@link pb.common.GetRolesReq.verify|verify} messages.
             * @param message GetRolesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetRolesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetRolesReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetRolesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetRolesReq;

            /**
             * Decodes a GetRolesReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetRolesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetRolesReq;

            /**
             * Verifies a GetRolesReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetRolesReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetRolesReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetRolesReq;

            /**
             * Creates a plain object from a GetRolesReq message. Also converts values to other types if specified.
             * @param message GetRolesReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetRolesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetRolesReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetRolesRsp. */
        interface IGetRolesRsp {

            /** GetRolesRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetRolesRsp data */
            data?: (pb.common.GetRolesRsp.IRole[]|null);
        }

        /** Represents a GetRolesRsp. */
        class GetRolesRsp implements IGetRolesRsp {

            /**
             * Constructs a new GetRolesRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetRolesRsp);

            /** GetRolesRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetRolesRsp data. */
            public data: pb.common.GetRolesRsp.IRole[];

            /**
             * Creates a new GetRolesRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetRolesRsp instance
             */
            public static create(properties?: pb.common.IGetRolesRsp): pb.common.GetRolesRsp;

            /**
             * Encodes the specified GetRolesRsp message. Does not implicitly {@link pb.common.GetRolesRsp.verify|verify} messages.
             * @param message GetRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetRolesRsp message, length delimited. Does not implicitly {@link pb.common.GetRolesRsp.verify|verify} messages.
             * @param message GetRolesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetRolesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetRolesRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetRolesRsp;

            /**
             * Decodes a GetRolesRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetRolesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetRolesRsp;

            /**
             * Verifies a GetRolesRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetRolesRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetRolesRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetRolesRsp;

            /**
             * Creates a plain object from a GetRolesRsp message. Also converts values to other types if specified.
             * @param message GetRolesRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetRolesRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetRolesRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GetRolesRsp {

            /** Properties of a Role. */
            interface IRole {

                /** Role ID */
                ID?: (Long|null);

                /** Role Name */
                Name?: (string|null);

                /** Role MonthExpense */
                MonthExpense?: (number|null);

                /** Role MonthSalary */
                MonthSalary?: (number|null);

                /** Role MonthFlow */
                MonthFlow?: (number|null);

                /** Role Deposit */
                Deposit?: (number|null);

                /** Role BabyExpense */
                BabyExpense?: (number|null);

                /** Role WageHikePCT */
                WageHikePCT?: (number|null);

                /** Role Avatar */
                Avatar?: (string|null);

                /** Role Free */
                Free?: (boolean|null);

                /** Role purchased */
                purchased?: (boolean|null);

                /** Role promotions */
                promotions?: (string[]|null);

                /** Role flag */
                flag?: (string|null);
            }

            /** Represents a Role. */
            class Role implements IRole {

                /**
                 * Constructs a new Role.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.GetRolesRsp.IRole);

                /** Role ID. */
                public ID: Long;

                /** Role Name. */
                public Name: string;

                /** Role MonthExpense. */
                public MonthExpense: number;

                /** Role MonthSalary. */
                public MonthSalary: number;

                /** Role MonthFlow. */
                public MonthFlow: number;

                /** Role Deposit. */
                public Deposit: number;

                /** Role BabyExpense. */
                public BabyExpense: number;

                /** Role WageHikePCT. */
                public WageHikePCT: number;

                /** Role Avatar. */
                public Avatar: string;

                /** Role Free. */
                public Free: boolean;

                /** Role purchased. */
                public purchased: boolean;

                /** Role promotions. */
                public promotions: string[];

                /** Role flag. */
                public flag: string;

                /**
                 * Creates a new Role instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Role instance
                 */
                public static create(properties?: pb.common.GetRolesRsp.IRole): pb.common.GetRolesRsp.Role;

                /**
                 * Encodes the specified Role message. Does not implicitly {@link pb.common.GetRolesRsp.Role.verify|verify} messages.
                 * @param message Role message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.GetRolesRsp.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Role message, length delimited. Does not implicitly {@link pb.common.GetRolesRsp.Role.verify|verify} messages.
                 * @param message Role message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.GetRolesRsp.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Role message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Role
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetRolesRsp.Role;

                /**
                 * Decodes a Role message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Role
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetRolesRsp.Role;

                /**
                 * Verifies a Role message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Role message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Role
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.GetRolesRsp.Role;

                /**
                 * Creates a plain object from a Role message. Also converts values to other types if specified.
                 * @param message Role
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.GetRolesRsp.Role, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Role to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SelectRoleReq. */
        interface ISelectRoleReq {

            /** SelectRoleReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** SelectRoleReq roleId */
            roleId?: (Long|null);
        }

        /** Represents a SelectRoleReq. */
        class SelectRoleReq implements ISelectRoleReq {

            /**
             * Constructs a new SelectRoleReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISelectRoleReq);

            /** SelectRoleReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** SelectRoleReq roleId. */
            public roleId: Long;

            /**
             * Creates a new SelectRoleReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SelectRoleReq instance
             */
            public static create(properties?: pb.common.ISelectRoleReq): pb.common.SelectRoleReq;

            /**
             * Encodes the specified SelectRoleReq message. Does not implicitly {@link pb.common.SelectRoleReq.verify|verify} messages.
             * @param message SelectRoleReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISelectRoleReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SelectRoleReq message, length delimited. Does not implicitly {@link pb.common.SelectRoleReq.verify|verify} messages.
             * @param message SelectRoleReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISelectRoleReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SelectRoleReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SelectRoleReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SelectRoleReq;

            /**
             * Decodes a SelectRoleReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SelectRoleReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SelectRoleReq;

            /**
             * Verifies a SelectRoleReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SelectRoleReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SelectRoleReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SelectRoleReq;

            /**
             * Creates a plain object from a SelectRoleReq message. Also converts values to other types if specified.
             * @param message SelectRoleReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SelectRoleReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SelectRoleReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SelectRoleRsp. */
        interface ISelectRoleRsp {

            /** SelectRoleRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a SelectRoleRsp. */
        class SelectRoleRsp implements ISelectRoleRsp {

            /**
             * Constructs a new SelectRoleRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISelectRoleRsp);

            /** SelectRoleRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new SelectRoleRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SelectRoleRsp instance
             */
            public static create(properties?: pb.common.ISelectRoleRsp): pb.common.SelectRoleRsp;

            /**
             * Encodes the specified SelectRoleRsp message. Does not implicitly {@link pb.common.SelectRoleRsp.verify|verify} messages.
             * @param message SelectRoleRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISelectRoleRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SelectRoleRsp message, length delimited. Does not implicitly {@link pb.common.SelectRoleRsp.verify|verify} messages.
             * @param message SelectRoleRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISelectRoleRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SelectRoleRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SelectRoleRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SelectRoleRsp;

            /**
             * Decodes a SelectRoleRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SelectRoleRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SelectRoleRsp;

            /**
             * Verifies a SelectRoleRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SelectRoleRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SelectRoleRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SelectRoleRsp;

            /**
             * Creates a plain object from a SelectRoleRsp message. Also converts values to other types if specified.
             * @param message SelectRoleRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SelectRoleRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SelectRoleRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SelectRoleMsg. */
        interface ISelectRoleMsg {

            /** SelectRoleMsg userId */
            userId?: (Long|null);

            /** SelectRoleMsg roleId */
            roleId?: (Long|null);

            /** SelectRoleMsg isAllReady */
            isAllReady?: (boolean|null);
        }

        /** Represents a SelectRoleMsg. */
        class SelectRoleMsg implements ISelectRoleMsg {

            /**
             * Constructs a new SelectRoleMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISelectRoleMsg);

            /** SelectRoleMsg userId. */
            public userId: Long;

            /** SelectRoleMsg roleId. */
            public roleId: Long;

            /** SelectRoleMsg isAllReady. */
            public isAllReady: boolean;

            /**
             * Creates a new SelectRoleMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SelectRoleMsg instance
             */
            public static create(properties?: pb.common.ISelectRoleMsg): pb.common.SelectRoleMsg;

            /**
             * Encodes the specified SelectRoleMsg message. Does not implicitly {@link pb.common.SelectRoleMsg.verify|verify} messages.
             * @param message SelectRoleMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISelectRoleMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SelectRoleMsg message, length delimited. Does not implicitly {@link pb.common.SelectRoleMsg.verify|verify} messages.
             * @param message SelectRoleMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISelectRoleMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SelectRoleMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SelectRoleMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SelectRoleMsg;

            /**
             * Decodes a SelectRoleMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SelectRoleMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SelectRoleMsg;

            /**
             * Verifies a SelectRoleMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SelectRoleMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SelectRoleMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SelectRoleMsg;

            /**
             * Creates a plain object from a SelectRoleMsg message. Also converts values to other types if specified.
             * @param message SelectRoleMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SelectRoleMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SelectRoleMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerBeginReq. */
        interface IPlayerBeginReq {

            /** PlayerBeginReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a PlayerBeginReq. */
        class PlayerBeginReq implements IPlayerBeginReq {

            /**
             * Constructs a new PlayerBeginReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerBeginReq);

            /** PlayerBeginReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new PlayerBeginReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerBeginReq instance
             */
            public static create(properties?: pb.common.IPlayerBeginReq): pb.common.PlayerBeginReq;

            /**
             * Encodes the specified PlayerBeginReq message. Does not implicitly {@link pb.common.PlayerBeginReq.verify|verify} messages.
             * @param message PlayerBeginReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerBeginReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerBeginReq message, length delimited. Does not implicitly {@link pb.common.PlayerBeginReq.verify|verify} messages.
             * @param message PlayerBeginReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerBeginReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerBeginReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerBeginReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerBeginReq;

            /**
             * Decodes a PlayerBeginReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerBeginReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerBeginReq;

            /**
             * Verifies a PlayerBeginReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerBeginReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerBeginReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerBeginReq;

            /**
             * Creates a plain object from a PlayerBeginReq message. Also converts values to other types if specified.
             * @param message PlayerBeginReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerBeginReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerBeginReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerBeginRsp. */
        interface IPlayerBeginRsp {

            /** PlayerBeginRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a PlayerBeginRsp. */
        class PlayerBeginRsp implements IPlayerBeginRsp {

            /**
             * Constructs a new PlayerBeginRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerBeginRsp);

            /** PlayerBeginRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new PlayerBeginRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerBeginRsp instance
             */
            public static create(properties?: pb.common.IPlayerBeginRsp): pb.common.PlayerBeginRsp;

            /**
             * Encodes the specified PlayerBeginRsp message. Does not implicitly {@link pb.common.PlayerBeginRsp.verify|verify} messages.
             * @param message PlayerBeginRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerBeginRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerBeginRsp message, length delimited. Does not implicitly {@link pb.common.PlayerBeginRsp.verify|verify} messages.
             * @param message PlayerBeginRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerBeginRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerBeginRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerBeginRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerBeginRsp;

            /**
             * Decodes a PlayerBeginRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerBeginRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerBeginRsp;

            /**
             * Verifies a PlayerBeginRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerBeginRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerBeginRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerBeginRsp;

            /**
             * Creates a plain object from a PlayerBeginRsp message. Also converts values to other types if specified.
             * @param message PlayerBeginRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerBeginRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerBeginRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerOutMsg. */
        interface IPlayerOutMsg {

            /** PlayerOutMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** PlayerOutMsg userId */
            userId?: (Long|null);

            /** PlayerOutMsg msg */
            msg?: (string|null);

            /** PlayerOutMsg reason */
            reason?: (string|null);

            /** PlayerOutMsg cash */
            cash?: (number|null);

            /** PlayerOutMsg loanQuota */
            loanQuota?: (number|null);

            /** PlayerOutMsg expense */
            expense?: (number|null);

            /** PlayerOutMsg reasonType */
            reasonType?: (pb.common.PlayerOutMsg.OutReasonType|null);
        }

        /** Represents a PlayerOutMsg. */
        class PlayerOutMsg implements IPlayerOutMsg {

            /**
             * Constructs a new PlayerOutMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerOutMsg);

            /** PlayerOutMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** PlayerOutMsg userId. */
            public userId: Long;

            /** PlayerOutMsg msg. */
            public msg: string;

            /** PlayerOutMsg reason. */
            public reason: string;

            /** PlayerOutMsg cash. */
            public cash: number;

            /** PlayerOutMsg loanQuota. */
            public loanQuota: number;

            /** PlayerOutMsg expense. */
            public expense: number;

            /** PlayerOutMsg reasonType. */
            public reasonType: pb.common.PlayerOutMsg.OutReasonType;

            /**
             * Creates a new PlayerOutMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerOutMsg instance
             */
            public static create(properties?: pb.common.IPlayerOutMsg): pb.common.PlayerOutMsg;

            /**
             * Encodes the specified PlayerOutMsg message. Does not implicitly {@link pb.common.PlayerOutMsg.verify|verify} messages.
             * @param message PlayerOutMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerOutMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerOutMsg message, length delimited. Does not implicitly {@link pb.common.PlayerOutMsg.verify|verify} messages.
             * @param message PlayerOutMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerOutMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerOutMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerOutMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerOutMsg;

            /**
             * Decodes a PlayerOutMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerOutMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerOutMsg;

            /**
             * Verifies a PlayerOutMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerOutMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerOutMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerOutMsg;

            /**
             * Creates a plain object from a PlayerOutMsg message. Also converts values to other types if specified.
             * @param message PlayerOutMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerOutMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerOutMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace PlayerOutMsg {

            /** OutReasonType enum. */
            enum OutReasonType {
                DEFAULT = 0,
                PAYDAY = 1
            }
        }

        /** Properties of a NextRollMsg. */
        interface INextRollMsg {

            /** NextRollMsg userId */
            userId?: (Long|null);

            /** NextRollMsg timer */
            timer?: (pb.common.Itimer|null);
        }

        /** Represents a NextRollMsg. */
        class NextRollMsg implements INextRollMsg {

            /**
             * Constructs a new NextRollMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.INextRollMsg);

            /** NextRollMsg userId. */
            public userId: Long;

            /** NextRollMsg timer. */
            public timer?: (pb.common.Itimer|null);

            /**
             * Creates a new NextRollMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns NextRollMsg instance
             */
            public static create(properties?: pb.common.INextRollMsg): pb.common.NextRollMsg;

            /**
             * Encodes the specified NextRollMsg message. Does not implicitly {@link pb.common.NextRollMsg.verify|verify} messages.
             * @param message NextRollMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.INextRollMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified NextRollMsg message, length delimited. Does not implicitly {@link pb.common.NextRollMsg.verify|verify} messages.
             * @param message NextRollMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.INextRollMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a NextRollMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NextRollMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.NextRollMsg;

            /**
             * Decodes a NextRollMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns NextRollMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.NextRollMsg;

            /**
             * Verifies a NextRollMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a NextRollMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns NextRollMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.NextRollMsg;

            /**
             * Creates a plain object from a NextRollMsg message. Also converts values to other types if specified.
             * @param message NextRollMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.NextRollMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this NextRollMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RollReq. */
        interface IRollReq {

            /** RollReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** RollReq mockScenarioType */
            mockScenarioType?: (number|null);

            /** RollReq mockPayment */
            mockPayment?: (number|null);

            /** RollReq mockScenarioId */
            mockScenarioId?: (Long|null);

            /** RollReq mockPayDay */
            mockPayDay?: (number|null);

            /** RollReq mockGameOver */
            mockGameOver?: (boolean|null);
        }

        /** Represents a RollReq. */
        class RollReq implements IRollReq {

            /**
             * Constructs a new RollReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRollReq);

            /** RollReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** RollReq mockScenarioType. */
            public mockScenarioType: number;

            /** RollReq mockPayment. */
            public mockPayment: number;

            /** RollReq mockScenarioId. */
            public mockScenarioId: Long;

            /** RollReq mockPayDay. */
            public mockPayDay: number;

            /** RollReq mockGameOver. */
            public mockGameOver: boolean;

            /**
             * Creates a new RollReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RollReq instance
             */
            public static create(properties?: pb.common.IRollReq): pb.common.RollReq;

            /**
             * Encodes the specified RollReq message. Does not implicitly {@link pb.common.RollReq.verify|verify} messages.
             * @param message RollReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRollReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RollReq message, length delimited. Does not implicitly {@link pb.common.RollReq.verify|verify} messages.
             * @param message RollReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRollReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RollReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RollReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RollReq;

            /**
             * Decodes a RollReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RollReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RollReq;

            /**
             * Verifies a RollReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RollReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RollReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RollReq;

            /**
             * Creates a plain object from a RollReq message. Also converts values to other types if specified.
             * @param message RollReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RollReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RollReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RollRsp. */
        interface IRollRsp {

            /** RollRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a RollRsp. */
        class RollRsp implements IRollRsp {

            /**
             * Constructs a new RollRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRollRsp);

            /** RollRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new RollRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RollRsp instance
             */
            public static create(properties?: pb.common.IRollRsp): pb.common.RollRsp;

            /**
             * Encodes the specified RollRsp message. Does not implicitly {@link pb.common.RollRsp.verify|verify} messages.
             * @param message RollRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRollRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RollRsp message, length delimited. Does not implicitly {@link pb.common.RollRsp.verify|verify} messages.
             * @param message RollRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRollRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RollRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RollRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RollRsp;

            /**
             * Decodes a RollRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RollRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RollRsp;

            /**
             * Verifies a RollRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RollRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RollRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RollRsp;

            /**
             * Creates a plain object from a RollRsp message. Also converts values to other types if specified.
             * @param message RollRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RollRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RollRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RollMsg. */
        interface IRollMsg {

            /** RollMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** RollMsg isPayDay */
            isPayDay?: (number|null);

            /** RollMsg num */
            num?: (number|null);

            /** RollMsg scenarioId */
            scenarioId?: (Long|null);

            /** RollMsg scenarioType */
            scenarioType?: (number|null);

            /** RollMsg scenario */
            scenario?: (pb.common.IScenario|null);

            /** RollMsg roundData */
            roundData?: (pb.common.IRoundData|null);

            /** RollMsg timer */
            timer?: (pb.common.Itimer|null);

            /** RollMsg traders */
            traders?: (Long[]|null);

            /** RollMsg move */
            move?: (pb.common.RollMsg.IRoute|null);

            /** RollMsg salaryInfo */
            salaryInfo?: (pb.common.RollMsg.ISalaryInfo[]|null);
        }

        /** Represents a RollMsg. */
        class RollMsg implements IRollMsg {

            /**
             * Constructs a new RollMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRollMsg);

            /** RollMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** RollMsg isPayDay. */
            public isPayDay: number;

            /** RollMsg num. */
            public num: number;

            /** RollMsg scenarioId. */
            public scenarioId: Long;

            /** RollMsg scenarioType. */
            public scenarioType: number;

            /** RollMsg scenario. */
            public scenario?: (pb.common.IScenario|null);

            /** RollMsg roundData. */
            public roundData?: (pb.common.IRoundData|null);

            /** RollMsg timer. */
            public timer?: (pb.common.Itimer|null);

            /** RollMsg traders. */
            public traders: Long[];

            /** RollMsg move. */
            public move?: (pb.common.RollMsg.IRoute|null);

            /** RollMsg salaryInfo. */
            public salaryInfo: pb.common.RollMsg.ISalaryInfo[];

            /**
             * Creates a new RollMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RollMsg instance
             */
            public static create(properties?: pb.common.IRollMsg): pb.common.RollMsg;

            /**
             * Encodes the specified RollMsg message. Does not implicitly {@link pb.common.RollMsg.verify|verify} messages.
             * @param message RollMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRollMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RollMsg message, length delimited. Does not implicitly {@link pb.common.RollMsg.verify|verify} messages.
             * @param message RollMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRollMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RollMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RollMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RollMsg;

            /**
             * Decodes a RollMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RollMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RollMsg;

            /**
             * Verifies a RollMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RollMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RollMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RollMsg;

            /**
             * Creates a plain object from a RollMsg message. Also converts values to other types if specified.
             * @param message RollMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RollMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RollMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace RollMsg {

            /** Properties of a Route. */
            interface IRoute {

                /** Route src */
                src?: (pb.common.RollMsg.Route.ILocation|null);

                /** Route dst */
                dst?: (pb.common.RollMsg.Route.ILocation|null);
            }

            /** Represents a Route. */
            class Route implements IRoute {

                /**
                 * Constructs a new Route.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.RollMsg.IRoute);

                /** Route src. */
                public src?: (pb.common.RollMsg.Route.ILocation|null);

                /** Route dst. */
                public dst?: (pb.common.RollMsg.Route.ILocation|null);

                /**
                 * Creates a new Route instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Route instance
                 */
                public static create(properties?: pb.common.RollMsg.IRoute): pb.common.RollMsg.Route;

                /**
                 * Encodes the specified Route message. Does not implicitly {@link pb.common.RollMsg.Route.verify|verify} messages.
                 * @param message Route message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.RollMsg.IRoute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Route message, length delimited. Does not implicitly {@link pb.common.RollMsg.Route.verify|verify} messages.
                 * @param message Route message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.RollMsg.IRoute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Route message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Route
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RollMsg.Route;

                /**
                 * Decodes a Route message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Route
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RollMsg.Route;

                /**
                 * Verifies a Route message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Route message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Route
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.RollMsg.Route;

                /**
                 * Creates a plain object from a Route message. Also converts values to other types if specified.
                 * @param message Route
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.RollMsg.Route, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Route to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            namespace Route {

                /** Properties of a Location. */
                interface ILocation {

                    /** Location cycle */
                    cycle?: (number|null);

                    /** Location step */
                    step?: (number|null);
                }

                /** Represents a Location. */
                class Location implements ILocation {

                    /**
                     * Constructs a new Location.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: pb.common.RollMsg.Route.ILocation);

                    /** Location cycle. */
                    public cycle: number;

                    /** Location step. */
                    public step: number;

                    /**
                     * Creates a new Location instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns Location instance
                     */
                    public static create(properties?: pb.common.RollMsg.Route.ILocation): pb.common.RollMsg.Route.Location;

                    /**
                     * Encodes the specified Location message. Does not implicitly {@link pb.common.RollMsg.Route.Location.verify|verify} messages.
                     * @param message Location message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: pb.common.RollMsg.Route.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link pb.common.RollMsg.Route.Location.verify|verify} messages.
                     * @param message Location message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: pb.common.RollMsg.Route.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RollMsg.Route.Location;

                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RollMsg.Route.Location;

                    /**
                     * Verifies a Location message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns Location
                     */
                    public static fromObject(object: { [k: string]: any }): pb.common.RollMsg.Route.Location;

                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @param message Location
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: pb.common.RollMsg.Route.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this Location to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };
                }
            }

            /** Properties of a SalaryInfo. */
            interface ISalaryInfo {

                /** SalaryInfo steps */
                steps?: (number|null);

                /** SalaryInfo willBankrupt */
                willBankrupt?: (boolean|null);

                /** SalaryInfo salary */
                salary?: (number|null);

                /** SalaryInfo cash */
                cash?: (number|null);

                /** SalaryInfo loanQuota */
                loanQuota?: (number|null);
            }

            /** Represents a SalaryInfo. */
            class SalaryInfo implements ISalaryInfo {

                /**
                 * Constructs a new SalaryInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.RollMsg.ISalaryInfo);

                /** SalaryInfo steps. */
                public steps: number;

                /** SalaryInfo willBankrupt. */
                public willBankrupt: boolean;

                /** SalaryInfo salary. */
                public salary: number;

                /** SalaryInfo cash. */
                public cash: number;

                /** SalaryInfo loanQuota. */
                public loanQuota: number;

                /**
                 * Creates a new SalaryInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SalaryInfo instance
                 */
                public static create(properties?: pb.common.RollMsg.ISalaryInfo): pb.common.RollMsg.SalaryInfo;

                /**
                 * Encodes the specified SalaryInfo message. Does not implicitly {@link pb.common.RollMsg.SalaryInfo.verify|verify} messages.
                 * @param message SalaryInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.RollMsg.ISalaryInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SalaryInfo message, length delimited. Does not implicitly {@link pb.common.RollMsg.SalaryInfo.verify|verify} messages.
                 * @param message SalaryInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.RollMsg.ISalaryInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SalaryInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SalaryInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RollMsg.SalaryInfo;

                /**
                 * Decodes a SalaryInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SalaryInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RollMsg.SalaryInfo;

                /**
                 * Verifies a SalaryInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SalaryInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SalaryInfo
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.RollMsg.SalaryInfo;

                /**
                 * Creates a plain object from a SalaryInfo message. Also converts values to other types if specified.
                 * @param message SalaryInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.RollMsg.SalaryInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SalaryInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a CompleteSalaryReq. */
        interface ICompleteSalaryReq {

            /** CompleteSalaryReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a CompleteSalaryReq. */
        class CompleteSalaryReq implements ICompleteSalaryReq {

            /**
             * Constructs a new CompleteSalaryReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICompleteSalaryReq);

            /** CompleteSalaryReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new CompleteSalaryReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CompleteSalaryReq instance
             */
            public static create(properties?: pb.common.ICompleteSalaryReq): pb.common.CompleteSalaryReq;

            /**
             * Encodes the specified CompleteSalaryReq message. Does not implicitly {@link pb.common.CompleteSalaryReq.verify|verify} messages.
             * @param message CompleteSalaryReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICompleteSalaryReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CompleteSalaryReq message, length delimited. Does not implicitly {@link pb.common.CompleteSalaryReq.verify|verify} messages.
             * @param message CompleteSalaryReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICompleteSalaryReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CompleteSalaryReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CompleteSalaryReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CompleteSalaryReq;

            /**
             * Decodes a CompleteSalaryReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CompleteSalaryReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CompleteSalaryReq;

            /**
             * Verifies a CompleteSalaryReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CompleteSalaryReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CompleteSalaryReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CompleteSalaryReq;

            /**
             * Creates a plain object from a CompleteSalaryReq message. Also converts values to other types if specified.
             * @param message CompleteSalaryReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CompleteSalaryReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CompleteSalaryReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CompleteSalaryRsp. */
        interface ICompleteSalaryRsp {

            /** CompleteSalaryRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a CompleteSalaryRsp. */
        class CompleteSalaryRsp implements ICompleteSalaryRsp {

            /**
             * Constructs a new CompleteSalaryRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICompleteSalaryRsp);

            /** CompleteSalaryRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new CompleteSalaryRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CompleteSalaryRsp instance
             */
            public static create(properties?: pb.common.ICompleteSalaryRsp): pb.common.CompleteSalaryRsp;

            /**
             * Encodes the specified CompleteSalaryRsp message. Does not implicitly {@link pb.common.CompleteSalaryRsp.verify|verify} messages.
             * @param message CompleteSalaryRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICompleteSalaryRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CompleteSalaryRsp message, length delimited. Does not implicitly {@link pb.common.CompleteSalaryRsp.verify|verify} messages.
             * @param message CompleteSalaryRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICompleteSalaryRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CompleteSalaryRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CompleteSalaryRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CompleteSalaryRsp;

            /**
             * Decodes a CompleteSalaryRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CompleteSalaryRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CompleteSalaryRsp;

            /**
             * Verifies a CompleteSalaryRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CompleteSalaryRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CompleteSalaryRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CompleteSalaryRsp;

            /**
             * Creates a plain object from a CompleteSalaryRsp message. Also converts values to other types if specified.
             * @param message CompleteSalaryRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CompleteSalaryRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CompleteSalaryRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CompleteSalaryMsg. */
        interface ICompleteSalaryMsg {

            /** CompleteSalaryMsg base */
            base?: (pb.common.IGameBaseMsg|null);
        }

        /** Represents a CompleteSalaryMsg. */
        class CompleteSalaryMsg implements ICompleteSalaryMsg {

            /**
             * Constructs a new CompleteSalaryMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICompleteSalaryMsg);

            /** CompleteSalaryMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /**
             * Creates a new CompleteSalaryMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CompleteSalaryMsg instance
             */
            public static create(properties?: pb.common.ICompleteSalaryMsg): pb.common.CompleteSalaryMsg;

            /**
             * Encodes the specified CompleteSalaryMsg message. Does not implicitly {@link pb.common.CompleteSalaryMsg.verify|verify} messages.
             * @param message CompleteSalaryMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICompleteSalaryMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CompleteSalaryMsg message, length delimited. Does not implicitly {@link pb.common.CompleteSalaryMsg.verify|verify} messages.
             * @param message CompleteSalaryMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICompleteSalaryMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CompleteSalaryMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CompleteSalaryMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CompleteSalaryMsg;

            /**
             * Decodes a CompleteSalaryMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CompleteSalaryMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CompleteSalaryMsg;

            /**
             * Verifies a CompleteSalaryMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CompleteSalaryMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CompleteSalaryMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CompleteSalaryMsg;

            /**
             * Creates a plain object from a CompleteSalaryMsg message. Also converts values to other types if specified.
             * @param message CompleteSalaryMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CompleteSalaryMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CompleteSalaryMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PayAccidentConsumeReq. */
        interface IPayAccidentConsumeReq {

            /** PayAccidentConsumeReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** PayAccidentConsumeReq mockPayment */
            mockPayment?: (number|null);
        }

        /** Represents a PayAccidentConsumeReq. */
        class PayAccidentConsumeReq implements IPayAccidentConsumeReq {

            /**
             * Constructs a new PayAccidentConsumeReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPayAccidentConsumeReq);

            /** PayAccidentConsumeReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** PayAccidentConsumeReq mockPayment. */
            public mockPayment: number;

            /**
             * Creates a new PayAccidentConsumeReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PayAccidentConsumeReq instance
             */
            public static create(properties?: pb.common.IPayAccidentConsumeReq): pb.common.PayAccidentConsumeReq;

            /**
             * Encodes the specified PayAccidentConsumeReq message. Does not implicitly {@link pb.common.PayAccidentConsumeReq.verify|verify} messages.
             * @param message PayAccidentConsumeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPayAccidentConsumeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PayAccidentConsumeReq message, length delimited. Does not implicitly {@link pb.common.PayAccidentConsumeReq.verify|verify} messages.
             * @param message PayAccidentConsumeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPayAccidentConsumeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PayAccidentConsumeReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PayAccidentConsumeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PayAccidentConsumeReq;

            /**
             * Decodes a PayAccidentConsumeReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PayAccidentConsumeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PayAccidentConsumeReq;

            /**
             * Verifies a PayAccidentConsumeReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PayAccidentConsumeReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PayAccidentConsumeReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PayAccidentConsumeReq;

            /**
             * Creates a plain object from a PayAccidentConsumeReq message. Also converts values to other types if specified.
             * @param message PayAccidentConsumeReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PayAccidentConsumeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PayAccidentConsumeReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PayAccidentConsumeRsp. */
        interface IPayAccidentConsumeRsp {

            /** PayAccidentConsumeRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** PayAccidentConsumeRsp payment */
            payment?: (number|null);

            /** PayAccidentConsumeRsp balance */
            balance?: (number|null);
        }

        /** Represents a PayAccidentConsumeRsp. */
        class PayAccidentConsumeRsp implements IPayAccidentConsumeRsp {

            /**
             * Constructs a new PayAccidentConsumeRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPayAccidentConsumeRsp);

            /** PayAccidentConsumeRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** PayAccidentConsumeRsp payment. */
            public payment: number;

            /** PayAccidentConsumeRsp balance. */
            public balance: number;

            /**
             * Creates a new PayAccidentConsumeRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PayAccidentConsumeRsp instance
             */
            public static create(properties?: pb.common.IPayAccidentConsumeRsp): pb.common.PayAccidentConsumeRsp;

            /**
             * Encodes the specified PayAccidentConsumeRsp message. Does not implicitly {@link pb.common.PayAccidentConsumeRsp.verify|verify} messages.
             * @param message PayAccidentConsumeRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPayAccidentConsumeRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PayAccidentConsumeRsp message, length delimited. Does not implicitly {@link pb.common.PayAccidentConsumeRsp.verify|verify} messages.
             * @param message PayAccidentConsumeRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPayAccidentConsumeRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PayAccidentConsumeRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PayAccidentConsumeRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PayAccidentConsumeRsp;

            /**
             * Decodes a PayAccidentConsumeRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PayAccidentConsumeRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PayAccidentConsumeRsp;

            /**
             * Verifies a PayAccidentConsumeRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PayAccidentConsumeRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PayAccidentConsumeRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PayAccidentConsumeRsp;

            /**
             * Creates a plain object from a PayAccidentConsumeRsp message. Also converts values to other types if specified.
             * @param message PayAccidentConsumeRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PayAccidentConsumeRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PayAccidentConsumeRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PayAccidentConsumeMsg. */
        interface IPayAccidentConsumeMsg {

            /** PayAccidentConsumeMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** PayAccidentConsumeMsg scenario */
            scenario?: (pb.common.IScenario|null);
        }

        /** Represents a PayAccidentConsumeMsg. */
        class PayAccidentConsumeMsg implements IPayAccidentConsumeMsg {

            /**
             * Constructs a new PayAccidentConsumeMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPayAccidentConsumeMsg);

            /** PayAccidentConsumeMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** PayAccidentConsumeMsg scenario. */
            public scenario?: (pb.common.IScenario|null);

            /**
             * Creates a new PayAccidentConsumeMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PayAccidentConsumeMsg instance
             */
            public static create(properties?: pb.common.IPayAccidentConsumeMsg): pb.common.PayAccidentConsumeMsg;

            /**
             * Encodes the specified PayAccidentConsumeMsg message. Does not implicitly {@link pb.common.PayAccidentConsumeMsg.verify|verify} messages.
             * @param message PayAccidentConsumeMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPayAccidentConsumeMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PayAccidentConsumeMsg message, length delimited. Does not implicitly {@link pb.common.PayAccidentConsumeMsg.verify|verify} messages.
             * @param message PayAccidentConsumeMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPayAccidentConsumeMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PayAccidentConsumeMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PayAccidentConsumeMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PayAccidentConsumeMsg;

            /**
             * Decodes a PayAccidentConsumeMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PayAccidentConsumeMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PayAccidentConsumeMsg;

            /**
             * Verifies a PayAccidentConsumeMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PayAccidentConsumeMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PayAccidentConsumeMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PayAccidentConsumeMsg;

            /**
             * Creates a plain object from a PayAccidentConsumeMsg message. Also converts values to other types if specified.
             * @param message PayAccidentConsumeMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PayAccidentConsumeMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PayAccidentConsumeMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ChooseChanceReq. */
        interface IChooseChanceReq {

            /** ChooseChanceReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** ChooseChanceReq mockScenarioId */
            mockScenarioId?: (Long|null);

            /** ChooseChanceReq chanceType */
            chanceType?: (number|null);
        }

        /** Represents a ChooseChanceReq. */
        class ChooseChanceReq implements IChooseChanceReq {

            /**
             * Constructs a new ChooseChanceReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IChooseChanceReq);

            /** ChooseChanceReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** ChooseChanceReq mockScenarioId. */
            public mockScenarioId: Long;

            /** ChooseChanceReq chanceType. */
            public chanceType: number;

            /**
             * Creates a new ChooseChanceReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChooseChanceReq instance
             */
            public static create(properties?: pb.common.IChooseChanceReq): pb.common.ChooseChanceReq;

            /**
             * Encodes the specified ChooseChanceReq message. Does not implicitly {@link pb.common.ChooseChanceReq.verify|verify} messages.
             * @param message ChooseChanceReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IChooseChanceReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChooseChanceReq message, length delimited. Does not implicitly {@link pb.common.ChooseChanceReq.verify|verify} messages.
             * @param message ChooseChanceReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IChooseChanceReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChooseChanceReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChooseChanceReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ChooseChanceReq;

            /**
             * Decodes a ChooseChanceReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChooseChanceReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ChooseChanceReq;

            /**
             * Verifies a ChooseChanceReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChooseChanceReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChooseChanceReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ChooseChanceReq;

            /**
             * Creates a plain object from a ChooseChanceReq message. Also converts values to other types if specified.
             * @param message ChooseChanceReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ChooseChanceReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChooseChanceReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ChooseChanceRsp. */
        interface IChooseChanceRsp {

            /** ChooseChanceRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a ChooseChanceRsp. */
        class ChooseChanceRsp implements IChooseChanceRsp {

            /**
             * Constructs a new ChooseChanceRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IChooseChanceRsp);

            /** ChooseChanceRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new ChooseChanceRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChooseChanceRsp instance
             */
            public static create(properties?: pb.common.IChooseChanceRsp): pb.common.ChooseChanceRsp;

            /**
             * Encodes the specified ChooseChanceRsp message. Does not implicitly {@link pb.common.ChooseChanceRsp.verify|verify} messages.
             * @param message ChooseChanceRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IChooseChanceRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChooseChanceRsp message, length delimited. Does not implicitly {@link pb.common.ChooseChanceRsp.verify|verify} messages.
             * @param message ChooseChanceRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IChooseChanceRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChooseChanceRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChooseChanceRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ChooseChanceRsp;

            /**
             * Decodes a ChooseChanceRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChooseChanceRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ChooseChanceRsp;

            /**
             * Verifies a ChooseChanceRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChooseChanceRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChooseChanceRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ChooseChanceRsp;

            /**
             * Creates a plain object from a ChooseChanceRsp message. Also converts values to other types if specified.
             * @param message ChooseChanceRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ChooseChanceRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChooseChanceRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ChooseChanceMsg. */
        interface IChooseChanceMsg {

            /** ChooseChanceMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** ChooseChanceMsg scenario */
            scenario?: (pb.common.IScenario|null);

            /** ChooseChanceMsg canSellCnt */
            canSellCnt?: (number|null);

            /** ChooseChanceMsg timer */
            timer?: (pb.common.Itimer|null);

            /** ChooseChanceMsg traders */
            traders?: (Long[]|null);
        }

        /** Represents a ChooseChanceMsg. */
        class ChooseChanceMsg implements IChooseChanceMsg {

            /**
             * Constructs a new ChooseChanceMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IChooseChanceMsg);

            /** ChooseChanceMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** ChooseChanceMsg scenario. */
            public scenario?: (pb.common.IScenario|null);

            /** ChooseChanceMsg canSellCnt. */
            public canSellCnt: number;

            /** ChooseChanceMsg timer. */
            public timer?: (pb.common.Itimer|null);

            /** ChooseChanceMsg traders. */
            public traders: Long[];

            /**
             * Creates a new ChooseChanceMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ChooseChanceMsg instance
             */
            public static create(properties?: pb.common.IChooseChanceMsg): pb.common.ChooseChanceMsg;

            /**
             * Encodes the specified ChooseChanceMsg message. Does not implicitly {@link pb.common.ChooseChanceMsg.verify|verify} messages.
             * @param message ChooseChanceMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IChooseChanceMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ChooseChanceMsg message, length delimited. Does not implicitly {@link pb.common.ChooseChanceMsg.verify|verify} messages.
             * @param message ChooseChanceMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IChooseChanceMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ChooseChanceMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChooseChanceMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ChooseChanceMsg;

            /**
             * Decodes a ChooseChanceMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ChooseChanceMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ChooseChanceMsg;

            /**
             * Verifies a ChooseChanceMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ChooseChanceMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ChooseChanceMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ChooseChanceMsg;

            /**
             * Creates a plain object from a ChooseChanceMsg message. Also converts values to other types if specified.
             * @param message ChooseChanceMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ChooseChanceMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ChooseChanceMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BuyReq. */
        interface IBuyReq {

            /** BuyReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** BuyReq quantity */
            quantity?: (number|null);
        }

        /** Represents a BuyReq. */
        class BuyReq implements IBuyReq {

            /**
             * Constructs a new BuyReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IBuyReq);

            /** BuyReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** BuyReq quantity. */
            public quantity: number;

            /**
             * Creates a new BuyReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BuyReq instance
             */
            public static create(properties?: pb.common.IBuyReq): pb.common.BuyReq;

            /**
             * Encodes the specified BuyReq message. Does not implicitly {@link pb.common.BuyReq.verify|verify} messages.
             * @param message BuyReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IBuyReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BuyReq message, length delimited. Does not implicitly {@link pb.common.BuyReq.verify|verify} messages.
             * @param message BuyReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IBuyReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BuyReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BuyReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.BuyReq;

            /**
             * Decodes a BuyReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BuyReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.BuyReq;

            /**
             * Verifies a BuyReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BuyReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BuyReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.BuyReq;

            /**
             * Creates a plain object from a BuyReq message. Also converts values to other types if specified.
             * @param message BuyReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.BuyReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BuyReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BuyRsp. */
        interface IBuyRsp {

            /** BuyRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a BuyRsp. */
        class BuyRsp implements IBuyRsp {

            /**
             * Constructs a new BuyRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IBuyRsp);

            /** BuyRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new BuyRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BuyRsp instance
             */
            public static create(properties?: pb.common.IBuyRsp): pb.common.BuyRsp;

            /**
             * Encodes the specified BuyRsp message. Does not implicitly {@link pb.common.BuyRsp.verify|verify} messages.
             * @param message BuyRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IBuyRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BuyRsp message, length delimited. Does not implicitly {@link pb.common.BuyRsp.verify|verify} messages.
             * @param message BuyRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IBuyRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BuyRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BuyRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.BuyRsp;

            /**
             * Decodes a BuyRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BuyRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.BuyRsp;

            /**
             * Verifies a BuyRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BuyRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BuyRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.BuyRsp;

            /**
             * Creates a plain object from a BuyRsp message. Also converts values to other types if specified.
             * @param message BuyRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.BuyRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BuyRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a BuyMsg. */
        interface IBuyMsg {

            /** BuyMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** BuyMsg scenario */
            scenario?: (pb.common.IScenario|null);

            /** BuyMsg quantity */
            quantity?: (number|null);
        }

        /** Represents a BuyMsg. */
        class BuyMsg implements IBuyMsg {

            /**
             * Constructs a new BuyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IBuyMsg);

            /** BuyMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** BuyMsg scenario. */
            public scenario?: (pb.common.IScenario|null);

            /** BuyMsg quantity. */
            public quantity: number;

            /**
             * Creates a new BuyMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BuyMsg instance
             */
            public static create(properties?: pb.common.IBuyMsg): pb.common.BuyMsg;

            /**
             * Encodes the specified BuyMsg message. Does not implicitly {@link pb.common.BuyMsg.verify|verify} messages.
             * @param message BuyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IBuyMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BuyMsg message, length delimited. Does not implicitly {@link pb.common.BuyMsg.verify|verify} messages.
             * @param message BuyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IBuyMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BuyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BuyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.BuyMsg;

            /**
             * Decodes a BuyMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BuyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.BuyMsg;

            /**
             * Verifies a BuyMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BuyMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BuyMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.BuyMsg;

            /**
             * Creates a plain object from a BuyMsg message. Also converts values to other types if specified.
             * @param message BuyMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.BuyMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BuyMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellStockReq. */
        interface ISellStockReq {

            /** SellStockReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** SellStockReq quantity */
            quantity?: (number|null);

            /** SellStockReq playerAssetId */
            playerAssetId?: (Long|null);
        }

        /** Represents a SellStockReq. */
        class SellStockReq implements ISellStockReq {

            /**
             * Constructs a new SellStockReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellStockReq);

            /** SellStockReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** SellStockReq quantity. */
            public quantity: number;

            /** SellStockReq playerAssetId. */
            public playerAssetId: Long;

            /**
             * Creates a new SellStockReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellStockReq instance
             */
            public static create(properties?: pb.common.ISellStockReq): pb.common.SellStockReq;

            /**
             * Encodes the specified SellStockReq message. Does not implicitly {@link pb.common.SellStockReq.verify|verify} messages.
             * @param message SellStockReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellStockReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellStockReq message, length delimited. Does not implicitly {@link pb.common.SellStockReq.verify|verify} messages.
             * @param message SellStockReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellStockReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellStockReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellStockReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellStockReq;

            /**
             * Decodes a SellStockReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellStockReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellStockReq;

            /**
             * Verifies a SellStockReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellStockReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellStockReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellStockReq;

            /**
             * Creates a plain object from a SellStockReq message. Also converts values to other types if specified.
             * @param message SellStockReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellStockReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellStockReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellStockRsp. */
        interface ISellStockRsp {

            /** SellStockRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a SellStockRsp. */
        class SellStockRsp implements ISellStockRsp {

            /**
             * Constructs a new SellStockRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellStockRsp);

            /** SellStockRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new SellStockRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellStockRsp instance
             */
            public static create(properties?: pb.common.ISellStockRsp): pb.common.SellStockRsp;

            /**
             * Encodes the specified SellStockRsp message. Does not implicitly {@link pb.common.SellStockRsp.verify|verify} messages.
             * @param message SellStockRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellStockRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellStockRsp message, length delimited. Does not implicitly {@link pb.common.SellStockRsp.verify|verify} messages.
             * @param message SellStockRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellStockRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellStockRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellStockRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellStockRsp;

            /**
             * Decodes a SellStockRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellStockRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellStockRsp;

            /**
             * Verifies a SellStockRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellStockRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellStockRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellStockRsp;

            /**
             * Creates a plain object from a SellStockRsp message. Also converts values to other types if specified.
             * @param message SellStockRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellStockRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellStockRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellStockMsg. */
        interface ISellStockMsg {

            /** SellStockMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** SellStockMsg scenario */
            scenario?: (pb.common.IScenario|null);

            /** SellStockMsg quantity */
            quantity?: (number|null);
        }

        /** Represents a SellStockMsg. */
        class SellStockMsg implements ISellStockMsg {

            /**
             * Constructs a new SellStockMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellStockMsg);

            /** SellStockMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** SellStockMsg scenario. */
            public scenario?: (pb.common.IScenario|null);

            /** SellStockMsg quantity. */
            public quantity: number;

            /**
             * Creates a new SellStockMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellStockMsg instance
             */
            public static create(properties?: pb.common.ISellStockMsg): pb.common.SellStockMsg;

            /**
             * Encodes the specified SellStockMsg message. Does not implicitly {@link pb.common.SellStockMsg.verify|verify} messages.
             * @param message SellStockMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellStockMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellStockMsg message, length delimited. Does not implicitly {@link pb.common.SellStockMsg.verify|verify} messages.
             * @param message SellStockMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellStockMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellStockMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellStockMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellStockMsg;

            /**
             * Decodes a SellStockMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellStockMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellStockMsg;

            /**
             * Verifies a SellStockMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellStockMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellStockMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellStockMsg;

            /**
             * Creates a plain object from a SellStockMsg message. Also converts values to other types if specified.
             * @param message SellStockMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellStockMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellStockMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GiveUpChanceReq. */
        interface IGiveUpChanceReq {

            /** GiveUpChanceReq base */
            base?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GiveUpChanceReq. */
        class GiveUpChanceReq implements IGiveUpChanceReq {

            /**
             * Constructs a new GiveUpChanceReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGiveUpChanceReq);

            /** GiveUpChanceReq base. */
            public base?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GiveUpChanceReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GiveUpChanceReq instance
             */
            public static create(properties?: pb.common.IGiveUpChanceReq): pb.common.GiveUpChanceReq;

            /**
             * Encodes the specified GiveUpChanceReq message. Does not implicitly {@link pb.common.GiveUpChanceReq.verify|verify} messages.
             * @param message GiveUpChanceReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGiveUpChanceReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GiveUpChanceReq message, length delimited. Does not implicitly {@link pb.common.GiveUpChanceReq.verify|verify} messages.
             * @param message GiveUpChanceReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGiveUpChanceReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GiveUpChanceReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GiveUpChanceReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GiveUpChanceReq;

            /**
             * Decodes a GiveUpChanceReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GiveUpChanceReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GiveUpChanceReq;

            /**
             * Verifies a GiveUpChanceReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GiveUpChanceReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GiveUpChanceReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GiveUpChanceReq;

            /**
             * Creates a plain object from a GiveUpChanceReq message. Also converts values to other types if specified.
             * @param message GiveUpChanceReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GiveUpChanceReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GiveUpChanceReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GiveUpChanceRsp. */
        interface IGiveUpChanceRsp {

            /** GiveUpChanceRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a GiveUpChanceRsp. */
        class GiveUpChanceRsp implements IGiveUpChanceRsp {

            /**
             * Constructs a new GiveUpChanceRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGiveUpChanceRsp);

            /** GiveUpChanceRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new GiveUpChanceRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GiveUpChanceRsp instance
             */
            public static create(properties?: pb.common.IGiveUpChanceRsp): pb.common.GiveUpChanceRsp;

            /**
             * Encodes the specified GiveUpChanceRsp message. Does not implicitly {@link pb.common.GiveUpChanceRsp.verify|verify} messages.
             * @param message GiveUpChanceRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGiveUpChanceRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GiveUpChanceRsp message, length delimited. Does not implicitly {@link pb.common.GiveUpChanceRsp.verify|verify} messages.
             * @param message GiveUpChanceRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGiveUpChanceRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GiveUpChanceRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GiveUpChanceRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GiveUpChanceRsp;

            /**
             * Decodes a GiveUpChanceRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GiveUpChanceRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GiveUpChanceRsp;

            /**
             * Verifies a GiveUpChanceRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GiveUpChanceRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GiveUpChanceRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GiveUpChanceRsp;

            /**
             * Creates a plain object from a GiveUpChanceRsp message. Also converts values to other types if specified.
             * @param message GiveUpChanceRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GiveUpChanceRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GiveUpChanceRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GiveUpChanceMsg. */
        interface IGiveUpChanceMsg {

            /** GiveUpChanceMsg base */
            base?: (pb.common.IGameBaseMsg|null);
        }

        /** Represents a GiveUpChanceMsg. */
        class GiveUpChanceMsg implements IGiveUpChanceMsg {

            /**
             * Constructs a new GiveUpChanceMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGiveUpChanceMsg);

            /** GiveUpChanceMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /**
             * Creates a new GiveUpChanceMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GiveUpChanceMsg instance
             */
            public static create(properties?: pb.common.IGiveUpChanceMsg): pb.common.GiveUpChanceMsg;

            /**
             * Encodes the specified GiveUpChanceMsg message. Does not implicitly {@link pb.common.GiveUpChanceMsg.verify|verify} messages.
             * @param message GiveUpChanceMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGiveUpChanceMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GiveUpChanceMsg message, length delimited. Does not implicitly {@link pb.common.GiveUpChanceMsg.verify|verify} messages.
             * @param message GiveUpChanceMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGiveUpChanceMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GiveUpChanceMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GiveUpChanceMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GiveUpChanceMsg;

            /**
             * Decodes a GiveUpChanceMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GiveUpChanceMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GiveUpChanceMsg;

            /**
             * Verifies a GiveUpChanceMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GiveUpChanceMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GiveUpChanceMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GiveUpChanceMsg;

            /**
             * Creates a plain object from a GiveUpChanceMsg message. Also converts values to other types if specified.
             * @param message GiveUpChanceMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GiveUpChanceMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GiveUpChanceMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartAuctionReq. */
        interface IStartAuctionReq {

            /** StartAuctionReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** StartAuctionReq floorPrice */
            floorPrice?: (number|null);
        }

        /** Represents a StartAuctionReq. */
        class StartAuctionReq implements IStartAuctionReq {

            /**
             * Constructs a new StartAuctionReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IStartAuctionReq);

            /** StartAuctionReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** StartAuctionReq floorPrice. */
            public floorPrice: number;

            /**
             * Creates a new StartAuctionReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartAuctionReq instance
             */
            public static create(properties?: pb.common.IStartAuctionReq): pb.common.StartAuctionReq;

            /**
             * Encodes the specified StartAuctionReq message. Does not implicitly {@link pb.common.StartAuctionReq.verify|verify} messages.
             * @param message StartAuctionReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IStartAuctionReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartAuctionReq message, length delimited. Does not implicitly {@link pb.common.StartAuctionReq.verify|verify} messages.
             * @param message StartAuctionReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IStartAuctionReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartAuctionReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartAuctionReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.StartAuctionReq;

            /**
             * Decodes a StartAuctionReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartAuctionReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.StartAuctionReq;

            /**
             * Verifies a StartAuctionReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartAuctionReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartAuctionReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.StartAuctionReq;

            /**
             * Creates a plain object from a StartAuctionReq message. Also converts values to other types if specified.
             * @param message StartAuctionReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.StartAuctionReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartAuctionReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartAuctionRsp. */
        interface IStartAuctionRsp {

            /** StartAuctionRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** StartAuctionRsp auctionId */
            auctionId?: (Long|null);
        }

        /** Represents a StartAuctionRsp. */
        class StartAuctionRsp implements IStartAuctionRsp {

            /**
             * Constructs a new StartAuctionRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IStartAuctionRsp);

            /** StartAuctionRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** StartAuctionRsp auctionId. */
            public auctionId: Long;

            /**
             * Creates a new StartAuctionRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartAuctionRsp instance
             */
            public static create(properties?: pb.common.IStartAuctionRsp): pb.common.StartAuctionRsp;

            /**
             * Encodes the specified StartAuctionRsp message. Does not implicitly {@link pb.common.StartAuctionRsp.verify|verify} messages.
             * @param message StartAuctionRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IStartAuctionRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartAuctionRsp message, length delimited. Does not implicitly {@link pb.common.StartAuctionRsp.verify|verify} messages.
             * @param message StartAuctionRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IStartAuctionRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartAuctionRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartAuctionRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.StartAuctionRsp;

            /**
             * Decodes a StartAuctionRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartAuctionRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.StartAuctionRsp;

            /**
             * Verifies a StartAuctionRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartAuctionRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartAuctionRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.StartAuctionRsp;

            /**
             * Creates a plain object from a StartAuctionRsp message. Also converts values to other types if specified.
             * @param message StartAuctionRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.StartAuctionRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartAuctionRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartAuctionMsg. */
        interface IStartAuctionMsg {

            /** StartAuctionMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** StartAuctionMsg scenario */
            scenario?: (pb.common.IScenario|null);

            /** StartAuctionMsg floorPrice */
            floorPrice?: (number|null);

            /** StartAuctionMsg auctionId */
            auctionId?: (Long|null);

            /** StartAuctionMsg timer */
            timer?: (pb.common.Itimer|null);

            /** StartAuctionMsg raiseTimeout */
            raiseTimeout?: (number|null);
        }

        /** Represents a StartAuctionMsg. */
        class StartAuctionMsg implements IStartAuctionMsg {

            /**
             * Constructs a new StartAuctionMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IStartAuctionMsg);

            /** StartAuctionMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** StartAuctionMsg scenario. */
            public scenario?: (pb.common.IScenario|null);

            /** StartAuctionMsg floorPrice. */
            public floorPrice: number;

            /** StartAuctionMsg auctionId. */
            public auctionId: Long;

            /** StartAuctionMsg timer. */
            public timer?: (pb.common.Itimer|null);

            /** StartAuctionMsg raiseTimeout. */
            public raiseTimeout: number;

            /**
             * Creates a new StartAuctionMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartAuctionMsg instance
             */
            public static create(properties?: pb.common.IStartAuctionMsg): pb.common.StartAuctionMsg;

            /**
             * Encodes the specified StartAuctionMsg message. Does not implicitly {@link pb.common.StartAuctionMsg.verify|verify} messages.
             * @param message StartAuctionMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IStartAuctionMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartAuctionMsg message, length delimited. Does not implicitly {@link pb.common.StartAuctionMsg.verify|verify} messages.
             * @param message StartAuctionMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IStartAuctionMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartAuctionMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartAuctionMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.StartAuctionMsg;

            /**
             * Decodes a StartAuctionMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartAuctionMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.StartAuctionMsg;

            /**
             * Verifies a StartAuctionMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartAuctionMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartAuctionMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.StartAuctionMsg;

            /**
             * Creates a plain object from a StartAuctionMsg message. Also converts values to other types if specified.
             * @param message StartAuctionMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.StartAuctionMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartAuctionMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GiveUpAuctionReq. */
        interface IGiveUpAuctionReq {

            /** GiveUpAuctionReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** GiveUpAuctionReq auctionId */
            auctionId?: (Long|null);
        }

        /** Represents a GiveUpAuctionReq. */
        class GiveUpAuctionReq implements IGiveUpAuctionReq {

            /**
             * Constructs a new GiveUpAuctionReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGiveUpAuctionReq);

            /** GiveUpAuctionReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** GiveUpAuctionReq auctionId. */
            public auctionId: Long;

            /**
             * Creates a new GiveUpAuctionReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GiveUpAuctionReq instance
             */
            public static create(properties?: pb.common.IGiveUpAuctionReq): pb.common.GiveUpAuctionReq;

            /**
             * Encodes the specified GiveUpAuctionReq message. Does not implicitly {@link pb.common.GiveUpAuctionReq.verify|verify} messages.
             * @param message GiveUpAuctionReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGiveUpAuctionReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GiveUpAuctionReq message, length delimited. Does not implicitly {@link pb.common.GiveUpAuctionReq.verify|verify} messages.
             * @param message GiveUpAuctionReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGiveUpAuctionReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GiveUpAuctionReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GiveUpAuctionReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GiveUpAuctionReq;

            /**
             * Decodes a GiveUpAuctionReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GiveUpAuctionReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GiveUpAuctionReq;

            /**
             * Verifies a GiveUpAuctionReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GiveUpAuctionReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GiveUpAuctionReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GiveUpAuctionReq;

            /**
             * Creates a plain object from a GiveUpAuctionReq message. Also converts values to other types if specified.
             * @param message GiveUpAuctionReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GiveUpAuctionReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GiveUpAuctionReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GiveUpAuctionRsp. */
        interface IGiveUpAuctionRsp {

            /** GiveUpAuctionRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a GiveUpAuctionRsp. */
        class GiveUpAuctionRsp implements IGiveUpAuctionRsp {

            /**
             * Constructs a new GiveUpAuctionRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGiveUpAuctionRsp);

            /** GiveUpAuctionRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new GiveUpAuctionRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GiveUpAuctionRsp instance
             */
            public static create(properties?: pb.common.IGiveUpAuctionRsp): pb.common.GiveUpAuctionRsp;

            /**
             * Encodes the specified GiveUpAuctionRsp message. Does not implicitly {@link pb.common.GiveUpAuctionRsp.verify|verify} messages.
             * @param message GiveUpAuctionRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGiveUpAuctionRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GiveUpAuctionRsp message, length delimited. Does not implicitly {@link pb.common.GiveUpAuctionRsp.verify|verify} messages.
             * @param message GiveUpAuctionRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGiveUpAuctionRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GiveUpAuctionRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GiveUpAuctionRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GiveUpAuctionRsp;

            /**
             * Decodes a GiveUpAuctionRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GiveUpAuctionRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GiveUpAuctionRsp;

            /**
             * Verifies a GiveUpAuctionRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GiveUpAuctionRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GiveUpAuctionRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GiveUpAuctionRsp;

            /**
             * Creates a plain object from a GiveUpAuctionRsp message. Also converts values to other types if specified.
             * @param message GiveUpAuctionRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GiveUpAuctionRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GiveUpAuctionRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GiveUpAuctionMsg. */
        interface IGiveUpAuctionMsg {

            /** GiveUpAuctionMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** GiveUpAuctionMsg isAllReady */
            isAllReady?: (boolean|null);

            /** GiveUpAuctionMsg userIds */
            userIds?: (Long[]|null);
        }

        /** Represents a GiveUpAuctionMsg. */
        class GiveUpAuctionMsg implements IGiveUpAuctionMsg {

            /**
             * Constructs a new GiveUpAuctionMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGiveUpAuctionMsg);

            /** GiveUpAuctionMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** GiveUpAuctionMsg isAllReady. */
            public isAllReady: boolean;

            /** GiveUpAuctionMsg userIds. */
            public userIds: Long[];

            /**
             * Creates a new GiveUpAuctionMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GiveUpAuctionMsg instance
             */
            public static create(properties?: pb.common.IGiveUpAuctionMsg): pb.common.GiveUpAuctionMsg;

            /**
             * Encodes the specified GiveUpAuctionMsg message. Does not implicitly {@link pb.common.GiveUpAuctionMsg.verify|verify} messages.
             * @param message GiveUpAuctionMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGiveUpAuctionMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GiveUpAuctionMsg message, length delimited. Does not implicitly {@link pb.common.GiveUpAuctionMsg.verify|verify} messages.
             * @param message GiveUpAuctionMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGiveUpAuctionMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GiveUpAuctionMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GiveUpAuctionMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GiveUpAuctionMsg;

            /**
             * Decodes a GiveUpAuctionMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GiveUpAuctionMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GiveUpAuctionMsg;

            /**
             * Verifies a GiveUpAuctionMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GiveUpAuctionMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GiveUpAuctionMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GiveUpAuctionMsg;

            /**
             * Creates a plain object from a GiveUpAuctionMsg message. Also converts values to other types if specified.
             * @param message GiveUpAuctionMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GiveUpAuctionMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GiveUpAuctionMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AuctionBidReq. */
        interface IAuctionBidReq {

            /** AuctionBidReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** AuctionBidReq amount */
            amount?: (number|null);

            /** AuctionBidReq auctionId */
            auctionId?: (Long|null);
        }

        /** Represents an AuctionBidReq. */
        class AuctionBidReq implements IAuctionBidReq {

            /**
             * Constructs a new AuctionBidReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAuctionBidReq);

            /** AuctionBidReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** AuctionBidReq amount. */
            public amount: number;

            /** AuctionBidReq auctionId. */
            public auctionId: Long;

            /**
             * Creates a new AuctionBidReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AuctionBidReq instance
             */
            public static create(properties?: pb.common.IAuctionBidReq): pb.common.AuctionBidReq;

            /**
             * Encodes the specified AuctionBidReq message. Does not implicitly {@link pb.common.AuctionBidReq.verify|verify} messages.
             * @param message AuctionBidReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAuctionBidReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AuctionBidReq message, length delimited. Does not implicitly {@link pb.common.AuctionBidReq.verify|verify} messages.
             * @param message AuctionBidReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAuctionBidReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AuctionBidReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AuctionBidReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AuctionBidReq;

            /**
             * Decodes an AuctionBidReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AuctionBidReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AuctionBidReq;

            /**
             * Verifies an AuctionBidReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AuctionBidReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AuctionBidReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AuctionBidReq;

            /**
             * Creates a plain object from an AuctionBidReq message. Also converts values to other types if specified.
             * @param message AuctionBidReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AuctionBidReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AuctionBidReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AuctionBidRsp. */
        interface IAuctionBidRsp {

            /** AuctionBidRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents an AuctionBidRsp. */
        class AuctionBidRsp implements IAuctionBidRsp {

            /**
             * Constructs a new AuctionBidRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAuctionBidRsp);

            /** AuctionBidRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new AuctionBidRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AuctionBidRsp instance
             */
            public static create(properties?: pb.common.IAuctionBidRsp): pb.common.AuctionBidRsp;

            /**
             * Encodes the specified AuctionBidRsp message. Does not implicitly {@link pb.common.AuctionBidRsp.verify|verify} messages.
             * @param message AuctionBidRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAuctionBidRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AuctionBidRsp message, length delimited. Does not implicitly {@link pb.common.AuctionBidRsp.verify|verify} messages.
             * @param message AuctionBidRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAuctionBidRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AuctionBidRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AuctionBidRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AuctionBidRsp;

            /**
             * Decodes an AuctionBidRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AuctionBidRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AuctionBidRsp;

            /**
             * Verifies an AuctionBidRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AuctionBidRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AuctionBidRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AuctionBidRsp;

            /**
             * Creates a plain object from an AuctionBidRsp message. Also converts values to other types if specified.
             * @param message AuctionBidRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AuctionBidRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AuctionBidRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AuctionBidMsg. */
        interface IAuctionBidMsg {

            /** AuctionBidMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** AuctionBidMsg amount */
            amount?: (number|null);

            /** AuctionBidMsg raiseTimeout */
            raiseTimeout?: (number|null);
        }

        /** Represents an AuctionBidMsg. */
        class AuctionBidMsg implements IAuctionBidMsg {

            /**
             * Constructs a new AuctionBidMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAuctionBidMsg);

            /** AuctionBidMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** AuctionBidMsg amount. */
            public amount: number;

            /** AuctionBidMsg raiseTimeout. */
            public raiseTimeout: number;

            /**
             * Creates a new AuctionBidMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AuctionBidMsg instance
             */
            public static create(properties?: pb.common.IAuctionBidMsg): pb.common.AuctionBidMsg;

            /**
             * Encodes the specified AuctionBidMsg message. Does not implicitly {@link pb.common.AuctionBidMsg.verify|verify} messages.
             * @param message AuctionBidMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAuctionBidMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AuctionBidMsg message, length delimited. Does not implicitly {@link pb.common.AuctionBidMsg.verify|verify} messages.
             * @param message AuctionBidMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAuctionBidMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AuctionBidMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AuctionBidMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AuctionBidMsg;

            /**
             * Decodes an AuctionBidMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AuctionBidMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AuctionBidMsg;

            /**
             * Verifies an AuctionBidMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AuctionBidMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AuctionBidMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AuctionBidMsg;

            /**
             * Creates a plain object from an AuctionBidMsg message. Also converts values to other types if specified.
             * @param message AuctionBidMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AuctionBidMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AuctionBidMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AuctionResultMsg. */
        interface IAuctionResultMsg {

            /** AuctionResultMsg playerWon */
            playerWon?: (boolean|null);

            /** AuctionResultMsg winnerId */
            winnerId?: (Long|null);

            /** AuctionResultMsg auctionId */
            auctionId?: (Long|null);

            /** AuctionResultMsg amount */
            amount?: (number|null);
        }

        /** Represents an AuctionResultMsg. */
        class AuctionResultMsg implements IAuctionResultMsg {

            /**
             * Constructs a new AuctionResultMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAuctionResultMsg);

            /** AuctionResultMsg playerWon. */
            public playerWon: boolean;

            /** AuctionResultMsg winnerId. */
            public winnerId: Long;

            /** AuctionResultMsg auctionId. */
            public auctionId: Long;

            /** AuctionResultMsg amount. */
            public amount: number;

            /**
             * Creates a new AuctionResultMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AuctionResultMsg instance
             */
            public static create(properties?: pb.common.IAuctionResultMsg): pb.common.AuctionResultMsg;

            /**
             * Encodes the specified AuctionResultMsg message. Does not implicitly {@link pb.common.AuctionResultMsg.verify|verify} messages.
             * @param message AuctionResultMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAuctionResultMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AuctionResultMsg message, length delimited. Does not implicitly {@link pb.common.AuctionResultMsg.verify|verify} messages.
             * @param message AuctionResultMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAuctionResultMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AuctionResultMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AuctionResultMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AuctionResultMsg;

            /**
             * Decodes an AuctionResultMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AuctionResultMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AuctionResultMsg;

            /**
             * Verifies an AuctionResultMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AuctionResultMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AuctionResultMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AuctionResultMsg;

            /**
             * Creates a plain object from an AuctionResultMsg message. Also converts values to other types if specified.
             * @param message AuctionResultMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AuctionResultMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AuctionResultMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CompleteMarketReq. */
        interface ICompleteMarketReq {

            /** CompleteMarketReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** CompleteMarketReq giveup */
            giveup?: (boolean|null);
        }

        /** Represents a CompleteMarketReq. */
        class CompleteMarketReq implements ICompleteMarketReq {

            /**
             * Constructs a new CompleteMarketReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICompleteMarketReq);

            /** CompleteMarketReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** CompleteMarketReq giveup. */
            public giveup: boolean;

            /**
             * Creates a new CompleteMarketReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CompleteMarketReq instance
             */
            public static create(properties?: pb.common.ICompleteMarketReq): pb.common.CompleteMarketReq;

            /**
             * Encodes the specified CompleteMarketReq message. Does not implicitly {@link pb.common.CompleteMarketReq.verify|verify} messages.
             * @param message CompleteMarketReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICompleteMarketReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CompleteMarketReq message, length delimited. Does not implicitly {@link pb.common.CompleteMarketReq.verify|verify} messages.
             * @param message CompleteMarketReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICompleteMarketReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CompleteMarketReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CompleteMarketReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CompleteMarketReq;

            /**
             * Decodes a CompleteMarketReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CompleteMarketReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CompleteMarketReq;

            /**
             * Verifies a CompleteMarketReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CompleteMarketReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CompleteMarketReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CompleteMarketReq;

            /**
             * Creates a plain object from a CompleteMarketReq message. Also converts values to other types if specified.
             * @param message CompleteMarketReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CompleteMarketReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CompleteMarketReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CompleteMarketRsp. */
        interface ICompleteMarketRsp {

            /** CompleteMarketRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a CompleteMarketRsp. */
        class CompleteMarketRsp implements ICompleteMarketRsp {

            /**
             * Constructs a new CompleteMarketRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICompleteMarketRsp);

            /** CompleteMarketRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new CompleteMarketRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CompleteMarketRsp instance
             */
            public static create(properties?: pb.common.ICompleteMarketRsp): pb.common.CompleteMarketRsp;

            /**
             * Encodes the specified CompleteMarketRsp message. Does not implicitly {@link pb.common.CompleteMarketRsp.verify|verify} messages.
             * @param message CompleteMarketRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICompleteMarketRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CompleteMarketRsp message, length delimited. Does not implicitly {@link pb.common.CompleteMarketRsp.verify|verify} messages.
             * @param message CompleteMarketRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICompleteMarketRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CompleteMarketRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CompleteMarketRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CompleteMarketRsp;

            /**
             * Decodes a CompleteMarketRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CompleteMarketRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CompleteMarketRsp;

            /**
             * Verifies a CompleteMarketRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CompleteMarketRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CompleteMarketRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CompleteMarketRsp;

            /**
             * Creates a plain object from a CompleteMarketRsp message. Also converts values to other types if specified.
             * @param message CompleteMarketRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CompleteMarketRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CompleteMarketRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CompleteMarketMsg. */
        interface ICompleteMarketMsg {

            /** CompleteMarketMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** CompleteMarketMsg giveup */
            giveup?: (boolean|null);
        }

        /** Represents a CompleteMarketMsg. */
        class CompleteMarketMsg implements ICompleteMarketMsg {

            /**
             * Constructs a new CompleteMarketMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICompleteMarketMsg);

            /** CompleteMarketMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** CompleteMarketMsg giveup. */
            public giveup: boolean;

            /**
             * Creates a new CompleteMarketMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CompleteMarketMsg instance
             */
            public static create(properties?: pb.common.ICompleteMarketMsg): pb.common.CompleteMarketMsg;

            /**
             * Encodes the specified CompleteMarketMsg message. Does not implicitly {@link pb.common.CompleteMarketMsg.verify|verify} messages.
             * @param message CompleteMarketMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICompleteMarketMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CompleteMarketMsg message, length delimited. Does not implicitly {@link pb.common.CompleteMarketMsg.verify|verify} messages.
             * @param message CompleteMarketMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICompleteMarketMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CompleteMarketMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CompleteMarketMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CompleteMarketMsg;

            /**
             * Decodes a CompleteMarketMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CompleteMarketMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CompleteMarketMsg;

            /**
             * Verifies a CompleteMarketMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CompleteMarketMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CompleteMarketMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CompleteMarketMsg;

            /**
             * Creates a plain object from a CompleteMarketMsg message. Also converts values to other types if specified.
             * @param message CompleteMarketMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CompleteMarketMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CompleteMarketMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an IgnoreChildBornReq. */
        interface IIgnoreChildBornReq {

            /** IgnoreChildBornReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents an IgnoreChildBornReq. */
        class IgnoreChildBornReq implements IIgnoreChildBornReq {

            /**
             * Constructs a new IgnoreChildBornReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IIgnoreChildBornReq);

            /** IgnoreChildBornReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new IgnoreChildBornReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns IgnoreChildBornReq instance
             */
            public static create(properties?: pb.common.IIgnoreChildBornReq): pb.common.IgnoreChildBornReq;

            /**
             * Encodes the specified IgnoreChildBornReq message. Does not implicitly {@link pb.common.IgnoreChildBornReq.verify|verify} messages.
             * @param message IgnoreChildBornReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IIgnoreChildBornReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified IgnoreChildBornReq message, length delimited. Does not implicitly {@link pb.common.IgnoreChildBornReq.verify|verify} messages.
             * @param message IgnoreChildBornReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IIgnoreChildBornReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an IgnoreChildBornReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IgnoreChildBornReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.IgnoreChildBornReq;

            /**
             * Decodes an IgnoreChildBornReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns IgnoreChildBornReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.IgnoreChildBornReq;

            /**
             * Verifies an IgnoreChildBornReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an IgnoreChildBornReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns IgnoreChildBornReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.IgnoreChildBornReq;

            /**
             * Creates a plain object from an IgnoreChildBornReq message. Also converts values to other types if specified.
             * @param message IgnoreChildBornReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.IgnoreChildBornReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this IgnoreChildBornReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an IgnoreChildBornRsp. */
        interface IIgnoreChildBornRsp {

            /** IgnoreChildBornRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents an IgnoreChildBornRsp. */
        class IgnoreChildBornRsp implements IIgnoreChildBornRsp {

            /**
             * Constructs a new IgnoreChildBornRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IIgnoreChildBornRsp);

            /** IgnoreChildBornRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new IgnoreChildBornRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns IgnoreChildBornRsp instance
             */
            public static create(properties?: pb.common.IIgnoreChildBornRsp): pb.common.IgnoreChildBornRsp;

            /**
             * Encodes the specified IgnoreChildBornRsp message. Does not implicitly {@link pb.common.IgnoreChildBornRsp.verify|verify} messages.
             * @param message IgnoreChildBornRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IIgnoreChildBornRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified IgnoreChildBornRsp message, length delimited. Does not implicitly {@link pb.common.IgnoreChildBornRsp.verify|verify} messages.
             * @param message IgnoreChildBornRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IIgnoreChildBornRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an IgnoreChildBornRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IgnoreChildBornRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.IgnoreChildBornRsp;

            /**
             * Decodes an IgnoreChildBornRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns IgnoreChildBornRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.IgnoreChildBornRsp;

            /**
             * Verifies an IgnoreChildBornRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an IgnoreChildBornRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns IgnoreChildBornRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.IgnoreChildBornRsp;

            /**
             * Creates a plain object from an IgnoreChildBornRsp message. Also converts values to other types if specified.
             * @param message IgnoreChildBornRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.IgnoreChildBornRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this IgnoreChildBornRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an IgnoreChildBornMsg. */
        interface IIgnoreChildBornMsg {

            /** IgnoreChildBornMsg base */
            base?: (pb.common.IGameBaseMsg|null);
        }

        /** Represents an IgnoreChildBornMsg. */
        class IgnoreChildBornMsg implements IIgnoreChildBornMsg {

            /**
             * Constructs a new IgnoreChildBornMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IIgnoreChildBornMsg);

            /** IgnoreChildBornMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /**
             * Creates a new IgnoreChildBornMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns IgnoreChildBornMsg instance
             */
            public static create(properties?: pb.common.IIgnoreChildBornMsg): pb.common.IgnoreChildBornMsg;

            /**
             * Encodes the specified IgnoreChildBornMsg message. Does not implicitly {@link pb.common.IgnoreChildBornMsg.verify|verify} messages.
             * @param message IgnoreChildBornMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IIgnoreChildBornMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified IgnoreChildBornMsg message, length delimited. Does not implicitly {@link pb.common.IgnoreChildBornMsg.verify|verify} messages.
             * @param message IgnoreChildBornMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IIgnoreChildBornMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an IgnoreChildBornMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IgnoreChildBornMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.IgnoreChildBornMsg;

            /**
             * Decodes an IgnoreChildBornMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns IgnoreChildBornMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.IgnoreChildBornMsg;

            /**
             * Verifies an IgnoreChildBornMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an IgnoreChildBornMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns IgnoreChildBornMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.IgnoreChildBornMsg;

            /**
             * Creates a plain object from an IgnoreChildBornMsg message. Also converts values to other types if specified.
             * @param message IgnoreChildBornMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.IgnoreChildBornMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this IgnoreChildBornMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PayChildBornRedPacketReq. */
        interface IPayChildBornRedPacketReq {

            /** PayChildBornRedPacketReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** PayChildBornRedPacketReq amount */
            amount?: (number|null);
        }

        /** Represents a PayChildBornRedPacketReq. */
        class PayChildBornRedPacketReq implements IPayChildBornRedPacketReq {

            /**
             * Constructs a new PayChildBornRedPacketReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPayChildBornRedPacketReq);

            /** PayChildBornRedPacketReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** PayChildBornRedPacketReq amount. */
            public amount: number;

            /**
             * Creates a new PayChildBornRedPacketReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PayChildBornRedPacketReq instance
             */
            public static create(properties?: pb.common.IPayChildBornRedPacketReq): pb.common.PayChildBornRedPacketReq;

            /**
             * Encodes the specified PayChildBornRedPacketReq message. Does not implicitly {@link pb.common.PayChildBornRedPacketReq.verify|verify} messages.
             * @param message PayChildBornRedPacketReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPayChildBornRedPacketReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PayChildBornRedPacketReq message, length delimited. Does not implicitly {@link pb.common.PayChildBornRedPacketReq.verify|verify} messages.
             * @param message PayChildBornRedPacketReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPayChildBornRedPacketReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PayChildBornRedPacketReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PayChildBornRedPacketReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PayChildBornRedPacketReq;

            /**
             * Decodes a PayChildBornRedPacketReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PayChildBornRedPacketReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PayChildBornRedPacketReq;

            /**
             * Verifies a PayChildBornRedPacketReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PayChildBornRedPacketReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PayChildBornRedPacketReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PayChildBornRedPacketReq;

            /**
             * Creates a plain object from a PayChildBornRedPacketReq message. Also converts values to other types if specified.
             * @param message PayChildBornRedPacketReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PayChildBornRedPacketReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PayChildBornRedPacketReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PayChildBornRedPacketRsp. */
        interface IPayChildBornRedPacketRsp {

            /** PayChildBornRedPacketRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a PayChildBornRedPacketRsp. */
        class PayChildBornRedPacketRsp implements IPayChildBornRedPacketRsp {

            /**
             * Constructs a new PayChildBornRedPacketRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPayChildBornRedPacketRsp);

            /** PayChildBornRedPacketRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new PayChildBornRedPacketRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PayChildBornRedPacketRsp instance
             */
            public static create(properties?: pb.common.IPayChildBornRedPacketRsp): pb.common.PayChildBornRedPacketRsp;

            /**
             * Encodes the specified PayChildBornRedPacketRsp message. Does not implicitly {@link pb.common.PayChildBornRedPacketRsp.verify|verify} messages.
             * @param message PayChildBornRedPacketRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPayChildBornRedPacketRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PayChildBornRedPacketRsp message, length delimited. Does not implicitly {@link pb.common.PayChildBornRedPacketRsp.verify|verify} messages.
             * @param message PayChildBornRedPacketRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPayChildBornRedPacketRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PayChildBornRedPacketRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PayChildBornRedPacketRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PayChildBornRedPacketRsp;

            /**
             * Decodes a PayChildBornRedPacketRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PayChildBornRedPacketRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PayChildBornRedPacketRsp;

            /**
             * Verifies a PayChildBornRedPacketRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PayChildBornRedPacketRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PayChildBornRedPacketRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PayChildBornRedPacketRsp;

            /**
             * Creates a plain object from a PayChildBornRedPacketRsp message. Also converts values to other types if specified.
             * @param message PayChildBornRedPacketRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PayChildBornRedPacketRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PayChildBornRedPacketRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PayChildBornRedPacketMsg. */
        interface IPayChildBornRedPacketMsg {

            /** PayChildBornRedPacketMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** PayChildBornRedPacketMsg amount */
            amount?: (number|null);

            /** PayChildBornRedPacketMsg toUserId */
            toUserId?: (Long|null);
        }

        /** Represents a PayChildBornRedPacketMsg. */
        class PayChildBornRedPacketMsg implements IPayChildBornRedPacketMsg {

            /**
             * Constructs a new PayChildBornRedPacketMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPayChildBornRedPacketMsg);

            /** PayChildBornRedPacketMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** PayChildBornRedPacketMsg amount. */
            public amount: number;

            /** PayChildBornRedPacketMsg toUserId. */
            public toUserId: Long;

            /**
             * Creates a new PayChildBornRedPacketMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PayChildBornRedPacketMsg instance
             */
            public static create(properties?: pb.common.IPayChildBornRedPacketMsg): pb.common.PayChildBornRedPacketMsg;

            /**
             * Encodes the specified PayChildBornRedPacketMsg message. Does not implicitly {@link pb.common.PayChildBornRedPacketMsg.verify|verify} messages.
             * @param message PayChildBornRedPacketMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPayChildBornRedPacketMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PayChildBornRedPacketMsg message, length delimited. Does not implicitly {@link pb.common.PayChildBornRedPacketMsg.verify|verify} messages.
             * @param message PayChildBornRedPacketMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPayChildBornRedPacketMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PayChildBornRedPacketMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PayChildBornRedPacketMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PayChildBornRedPacketMsg;

            /**
             * Decodes a PayChildBornRedPacketMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PayChildBornRedPacketMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PayChildBornRedPacketMsg;

            /**
             * Verifies a PayChildBornRedPacketMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PayChildBornRedPacketMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PayChildBornRedPacketMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PayChildBornRedPacketMsg;

            /**
             * Creates a plain object from a PayChildBornRedPacketMsg message. Also converts values to other types if specified.
             * @param message PayChildBornRedPacketMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PayChildBornRedPacketMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PayChildBornRedPacketMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellReq. */
        interface ISellReq {

            /** SellReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** SellReq playerAssetId */
            playerAssetId?: (Long|null);

            /** SellReq quantity */
            quantity?: (number|null);
        }

        /** Represents a SellReq. */
        class SellReq implements ISellReq {

            /**
             * Constructs a new SellReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellReq);

            /** SellReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** SellReq playerAssetId. */
            public playerAssetId: Long;

            /** SellReq quantity. */
            public quantity: number;

            /**
             * Creates a new SellReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellReq instance
             */
            public static create(properties?: pb.common.ISellReq): pb.common.SellReq;

            /**
             * Encodes the specified SellReq message. Does not implicitly {@link pb.common.SellReq.verify|verify} messages.
             * @param message SellReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellReq message, length delimited. Does not implicitly {@link pb.common.SellReq.verify|verify} messages.
             * @param message SellReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellReq;

            /**
             * Decodes a SellReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellReq;

            /**
             * Verifies a SellReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellReq;

            /**
             * Creates a plain object from a SellReq message. Also converts values to other types if specified.
             * @param message SellReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellRsp. */
        interface ISellRsp {

            /** SellRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a SellRsp. */
        class SellRsp implements ISellRsp {

            /**
             * Constructs a new SellRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellRsp);

            /** SellRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new SellRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellRsp instance
             */
            public static create(properties?: pb.common.ISellRsp): pb.common.SellRsp;

            /**
             * Encodes the specified SellRsp message. Does not implicitly {@link pb.common.SellRsp.verify|verify} messages.
             * @param message SellRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellRsp message, length delimited. Does not implicitly {@link pb.common.SellRsp.verify|verify} messages.
             * @param message SellRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellRsp;

            /**
             * Decodes a SellRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellRsp;

            /**
             * Verifies a SellRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellRsp;

            /**
             * Creates a plain object from a SellRsp message. Also converts values to other types if specified.
             * @param message SellRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellMsg. */
        interface ISellMsg {

            /** SellMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** SellMsg price */
            price?: (number|null);

            /** SellMsg name */
            name?: (string|null);
        }

        /** Represents a SellMsg. */
        class SellMsg implements ISellMsg {

            /**
             * Constructs a new SellMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellMsg);

            /** SellMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** SellMsg price. */
            public price: number;

            /** SellMsg name. */
            public name: string;

            /**
             * Creates a new SellMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellMsg instance
             */
            public static create(properties?: pb.common.ISellMsg): pb.common.SellMsg;

            /**
             * Encodes the specified SellMsg message. Does not implicitly {@link pb.common.SellMsg.verify|verify} messages.
             * @param message SellMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellMsg message, length delimited. Does not implicitly {@link pb.common.SellMsg.verify|verify} messages.
             * @param message SellMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellMsg;

            /**
             * Decodes a SellMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellMsg;

            /**
             * Verifies a SellMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellMsg;

            /**
             * Creates a plain object from a SellMsg message. Also converts values to other types if specified.
             * @param message SellMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetCanSellPlayerAssetReq. */
        interface IGetCanSellPlayerAssetReq {

            /** GetCanSellPlayerAssetReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetCanSellPlayerAssetReq. */
        class GetCanSellPlayerAssetReq implements IGetCanSellPlayerAssetReq {

            /**
             * Constructs a new GetCanSellPlayerAssetReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetCanSellPlayerAssetReq);

            /** GetCanSellPlayerAssetReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetCanSellPlayerAssetReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetCanSellPlayerAssetReq instance
             */
            public static create(properties?: pb.common.IGetCanSellPlayerAssetReq): pb.common.GetCanSellPlayerAssetReq;

            /**
             * Encodes the specified GetCanSellPlayerAssetReq message. Does not implicitly {@link pb.common.GetCanSellPlayerAssetReq.verify|verify} messages.
             * @param message GetCanSellPlayerAssetReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetCanSellPlayerAssetReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetCanSellPlayerAssetReq message, length delimited. Does not implicitly {@link pb.common.GetCanSellPlayerAssetReq.verify|verify} messages.
             * @param message GetCanSellPlayerAssetReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetCanSellPlayerAssetReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetCanSellPlayerAssetReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetCanSellPlayerAssetReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetCanSellPlayerAssetReq;

            /**
             * Decodes a GetCanSellPlayerAssetReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetCanSellPlayerAssetReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetCanSellPlayerAssetReq;

            /**
             * Verifies a GetCanSellPlayerAssetReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetCanSellPlayerAssetReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetCanSellPlayerAssetReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetCanSellPlayerAssetReq;

            /**
             * Creates a plain object from a GetCanSellPlayerAssetReq message. Also converts values to other types if specified.
             * @param message GetCanSellPlayerAssetReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetCanSellPlayerAssetReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetCanSellPlayerAssetReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerAsset. */
        interface IPlayerAsset {

            /** PlayerAsset id */
            id?: (Long|null);

            /** PlayerAsset name */
            name?: (string|null);

            /** PlayerAsset code */
            code?: (string|null);

            /** PlayerAsset totalPrice */
            totalPrice?: (number|null);

            /** PlayerAsset unitPrice */
            unitPrice?: (number|null);

            /** PlayerAsset downPayment */
            downPayment?: (number|null);

            /** PlayerAsset monthCashFlow */
            monthCashFlow?: (number|null);

            /** PlayerAsset liabilities */
            liabilities?: (number|null);

            /** PlayerAsset income */
            income?: (number|null);

            /** PlayerAsset expense */
            expense?: (number|null);

            /** PlayerAsset quantity */
            quantity?: (number|null);

            /** PlayerAsset shard */
            shard?: (number|null);

            /** PlayerAsset mark */
            mark?: (number|null);

            /** PlayerAsset sellPrice */
            sellPrice?: (number|null);

            /** PlayerAsset profit */
            profit?: (number|null);

            /** PlayerAsset imgFile */
            imgFile?: (string|null);
        }

        /** Represents a PlayerAsset. */
        class PlayerAsset implements IPlayerAsset {

            /**
             * Constructs a new PlayerAsset.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerAsset);

            /** PlayerAsset id. */
            public id: Long;

            /** PlayerAsset name. */
            public name: string;

            /** PlayerAsset code. */
            public code: string;

            /** PlayerAsset totalPrice. */
            public totalPrice: number;

            /** PlayerAsset unitPrice. */
            public unitPrice: number;

            /** PlayerAsset downPayment. */
            public downPayment: number;

            /** PlayerAsset monthCashFlow. */
            public monthCashFlow: number;

            /** PlayerAsset liabilities. */
            public liabilities: number;

            /** PlayerAsset income. */
            public income: number;

            /** PlayerAsset expense. */
            public expense: number;

            /** PlayerAsset quantity. */
            public quantity: number;

            /** PlayerAsset shard. */
            public shard: number;

            /** PlayerAsset mark. */
            public mark: number;

            /** PlayerAsset sellPrice. */
            public sellPrice: number;

            /** PlayerAsset profit. */
            public profit: number;

            /** PlayerAsset imgFile. */
            public imgFile: string;

            /**
             * Creates a new PlayerAsset instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerAsset instance
             */
            public static create(properties?: pb.common.IPlayerAsset): pb.common.PlayerAsset;

            /**
             * Encodes the specified PlayerAsset message. Does not implicitly {@link pb.common.PlayerAsset.verify|verify} messages.
             * @param message PlayerAsset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerAsset message, length delimited. Does not implicitly {@link pb.common.PlayerAsset.verify|verify} messages.
             * @param message PlayerAsset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerAsset message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerAsset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerAsset;

            /**
             * Decodes a PlayerAsset message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerAsset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerAsset;

            /**
             * Verifies a PlayerAsset message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerAsset message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerAsset
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerAsset;

            /**
             * Creates a plain object from a PlayerAsset message. Also converts values to other types if specified.
             * @param message PlayerAsset
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerAsset, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerAsset to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetCanSellPlayerAssetRsp. */
        interface IGetCanSellPlayerAssetRsp {

            /** GetCanSellPlayerAssetRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetCanSellPlayerAssetRsp data */
            data?: (pb.common.IPlayerAsset[]|null);
        }

        /** Represents a GetCanSellPlayerAssetRsp. */
        class GetCanSellPlayerAssetRsp implements IGetCanSellPlayerAssetRsp {

            /**
             * Constructs a new GetCanSellPlayerAssetRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetCanSellPlayerAssetRsp);

            /** GetCanSellPlayerAssetRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetCanSellPlayerAssetRsp data. */
            public data: pb.common.IPlayerAsset[];

            /**
             * Creates a new GetCanSellPlayerAssetRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetCanSellPlayerAssetRsp instance
             */
            public static create(properties?: pb.common.IGetCanSellPlayerAssetRsp): pb.common.GetCanSellPlayerAssetRsp;

            /**
             * Encodes the specified GetCanSellPlayerAssetRsp message. Does not implicitly {@link pb.common.GetCanSellPlayerAssetRsp.verify|verify} messages.
             * @param message GetCanSellPlayerAssetRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetCanSellPlayerAssetRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetCanSellPlayerAssetRsp message, length delimited. Does not implicitly {@link pb.common.GetCanSellPlayerAssetRsp.verify|verify} messages.
             * @param message GetCanSellPlayerAssetRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetCanSellPlayerAssetRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetCanSellPlayerAssetRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetCanSellPlayerAssetRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetCanSellPlayerAssetRsp;

            /**
             * Decodes a GetCanSellPlayerAssetRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetCanSellPlayerAssetRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetCanSellPlayerAssetRsp;

            /**
             * Verifies a GetCanSellPlayerAssetRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetCanSellPlayerAssetRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetCanSellPlayerAssetRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetCanSellPlayerAssetRsp;

            /**
             * Creates a plain object from a GetCanSellPlayerAssetRsp message. Also converts values to other types if specified.
             * @param message GetCanSellPlayerAssetRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetCanSellPlayerAssetRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetCanSellPlayerAssetRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LoanReq. */
        interface ILoanReq {

            /** LoanReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** LoanReq amount */
            amount?: (number|null);
        }

        /** Represents a LoanReq. */
        class LoanReq implements ILoanReq {

            /**
             * Constructs a new LoanReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ILoanReq);

            /** LoanReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** LoanReq amount. */
            public amount: number;

            /**
             * Creates a new LoanReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LoanReq instance
             */
            public static create(properties?: pb.common.ILoanReq): pb.common.LoanReq;

            /**
             * Encodes the specified LoanReq message. Does not implicitly {@link pb.common.LoanReq.verify|verify} messages.
             * @param message LoanReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ILoanReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LoanReq message, length delimited. Does not implicitly {@link pb.common.LoanReq.verify|verify} messages.
             * @param message LoanReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ILoanReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LoanReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LoanReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.LoanReq;

            /**
             * Decodes a LoanReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LoanReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.LoanReq;

            /**
             * Verifies a LoanReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LoanReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LoanReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.LoanReq;

            /**
             * Creates a plain object from a LoanReq message. Also converts values to other types if specified.
             * @param message LoanReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.LoanReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LoanReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LoanRsp. */
        interface ILoanRsp {

            /** LoanRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** LoanRsp totalCash */
            totalCash?: (number|null);
        }

        /** Represents a LoanRsp. */
        class LoanRsp implements ILoanRsp {

            /**
             * Constructs a new LoanRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ILoanRsp);

            /** LoanRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** LoanRsp totalCash. */
            public totalCash: number;

            /**
             * Creates a new LoanRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LoanRsp instance
             */
            public static create(properties?: pb.common.ILoanRsp): pb.common.LoanRsp;

            /**
             * Encodes the specified LoanRsp message. Does not implicitly {@link pb.common.LoanRsp.verify|verify} messages.
             * @param message LoanRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ILoanRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LoanRsp message, length delimited. Does not implicitly {@link pb.common.LoanRsp.verify|verify} messages.
             * @param message LoanRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ILoanRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LoanRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LoanRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.LoanRsp;

            /**
             * Decodes a LoanRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LoanRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.LoanRsp;

            /**
             * Verifies a LoanRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LoanRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LoanRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.LoanRsp;

            /**
             * Creates a plain object from a LoanRsp message. Also converts values to other types if specified.
             * @param message LoanRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.LoanRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LoanRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LoanMsg. */
        interface ILoanMsg {

            /** LoanMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** LoanMsg amount */
            amount?: (number|null);
        }

        /** Represents a LoanMsg. */
        class LoanMsg implements ILoanMsg {

            /**
             * Constructs a new LoanMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ILoanMsg);

            /** LoanMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** LoanMsg amount. */
            public amount: number;

            /**
             * Creates a new LoanMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LoanMsg instance
             */
            public static create(properties?: pb.common.ILoanMsg): pb.common.LoanMsg;

            /**
             * Encodes the specified LoanMsg message. Does not implicitly {@link pb.common.LoanMsg.verify|verify} messages.
             * @param message LoanMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ILoanMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LoanMsg message, length delimited. Does not implicitly {@link pb.common.LoanMsg.verify|verify} messages.
             * @param message LoanMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ILoanMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LoanMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LoanMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.LoanMsg;

            /**
             * Decodes a LoanMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LoanMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.LoanMsg;

            /**
             * Verifies a LoanMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LoanMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LoanMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.LoanMsg;

            /**
             * Creates a plain object from a LoanMsg message. Also converts values to other types if specified.
             * @param message LoanMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.LoanMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LoanMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RepayLoanReq. */
        interface IRepayLoanReq {

            /** RepayLoanReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** RepayLoanReq playerAssetId */
            playerAssetId?: (Long|null);

            /** RepayLoanReq amount */
            amount?: (number|null);
        }

        /** Represents a RepayLoanReq. */
        class RepayLoanReq implements IRepayLoanReq {

            /**
             * Constructs a new RepayLoanReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRepayLoanReq);

            /** RepayLoanReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** RepayLoanReq playerAssetId. */
            public playerAssetId: Long;

            /** RepayLoanReq amount. */
            public amount: number;

            /**
             * Creates a new RepayLoanReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RepayLoanReq instance
             */
            public static create(properties?: pb.common.IRepayLoanReq): pb.common.RepayLoanReq;

            /**
             * Encodes the specified RepayLoanReq message. Does not implicitly {@link pb.common.RepayLoanReq.verify|verify} messages.
             * @param message RepayLoanReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRepayLoanReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RepayLoanReq message, length delimited. Does not implicitly {@link pb.common.RepayLoanReq.verify|verify} messages.
             * @param message RepayLoanReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRepayLoanReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RepayLoanReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RepayLoanReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RepayLoanReq;

            /**
             * Decodes a RepayLoanReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RepayLoanReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RepayLoanReq;

            /**
             * Verifies a RepayLoanReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RepayLoanReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RepayLoanReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RepayLoanReq;

            /**
             * Creates a plain object from a RepayLoanReq message. Also converts values to other types if specified.
             * @param message RepayLoanReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RepayLoanReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RepayLoanReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RepayLoanRsp. */
        interface IRepayLoanRsp {

            /** RepayLoanRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a RepayLoanRsp. */
        class RepayLoanRsp implements IRepayLoanRsp {

            /**
             * Constructs a new RepayLoanRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRepayLoanRsp);

            /** RepayLoanRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new RepayLoanRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RepayLoanRsp instance
             */
            public static create(properties?: pb.common.IRepayLoanRsp): pb.common.RepayLoanRsp;

            /**
             * Encodes the specified RepayLoanRsp message. Does not implicitly {@link pb.common.RepayLoanRsp.verify|verify} messages.
             * @param message RepayLoanRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRepayLoanRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RepayLoanRsp message, length delimited. Does not implicitly {@link pb.common.RepayLoanRsp.verify|verify} messages.
             * @param message RepayLoanRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRepayLoanRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RepayLoanRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RepayLoanRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RepayLoanRsp;

            /**
             * Decodes a RepayLoanRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RepayLoanRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RepayLoanRsp;

            /**
             * Verifies a RepayLoanRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RepayLoanRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RepayLoanRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RepayLoanRsp;

            /**
             * Creates a plain object from a RepayLoanRsp message. Also converts values to other types if specified.
             * @param message RepayLoanRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RepayLoanRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RepayLoanRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RepayLiabilitiesReq. */
        interface IRepayLiabilitiesReq {

            /** RepayLiabilitiesReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** RepayLiabilitiesReq playerAssetId */
            playerAssetId?: (Long|null);

            /** RepayLiabilitiesReq amount */
            amount?: (number|null);
        }

        /** Represents a RepayLiabilitiesReq. */
        class RepayLiabilitiesReq implements IRepayLiabilitiesReq {

            /**
             * Constructs a new RepayLiabilitiesReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRepayLiabilitiesReq);

            /** RepayLiabilitiesReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** RepayLiabilitiesReq playerAssetId. */
            public playerAssetId: Long;

            /** RepayLiabilitiesReq amount. */
            public amount: number;

            /**
             * Creates a new RepayLiabilitiesReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RepayLiabilitiesReq instance
             */
            public static create(properties?: pb.common.IRepayLiabilitiesReq): pb.common.RepayLiabilitiesReq;

            /**
             * Encodes the specified RepayLiabilitiesReq message. Does not implicitly {@link pb.common.RepayLiabilitiesReq.verify|verify} messages.
             * @param message RepayLiabilitiesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRepayLiabilitiesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RepayLiabilitiesReq message, length delimited. Does not implicitly {@link pb.common.RepayLiabilitiesReq.verify|verify} messages.
             * @param message RepayLiabilitiesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRepayLiabilitiesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RepayLiabilitiesReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RepayLiabilitiesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RepayLiabilitiesReq;

            /**
             * Decodes a RepayLiabilitiesReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RepayLiabilitiesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RepayLiabilitiesReq;

            /**
             * Verifies a RepayLiabilitiesReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RepayLiabilitiesReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RepayLiabilitiesReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RepayLiabilitiesReq;

            /**
             * Creates a plain object from a RepayLiabilitiesReq message. Also converts values to other types if specified.
             * @param message RepayLiabilitiesReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RepayLiabilitiesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RepayLiabilitiesReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RepayLiabilitiesRsp. */
        interface IRepayLiabilitiesRsp {

            /** RepayLiabilitiesRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a RepayLiabilitiesRsp. */
        class RepayLiabilitiesRsp implements IRepayLiabilitiesRsp {

            /**
             * Constructs a new RepayLiabilitiesRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRepayLiabilitiesRsp);

            /** RepayLiabilitiesRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new RepayLiabilitiesRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RepayLiabilitiesRsp instance
             */
            public static create(properties?: pb.common.IRepayLiabilitiesRsp): pb.common.RepayLiabilitiesRsp;

            /**
             * Encodes the specified RepayLiabilitiesRsp message. Does not implicitly {@link pb.common.RepayLiabilitiesRsp.verify|verify} messages.
             * @param message RepayLiabilitiesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRepayLiabilitiesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RepayLiabilitiesRsp message, length delimited. Does not implicitly {@link pb.common.RepayLiabilitiesRsp.verify|verify} messages.
             * @param message RepayLiabilitiesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRepayLiabilitiesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RepayLiabilitiesRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RepayLiabilitiesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RepayLiabilitiesRsp;

            /**
             * Decodes a RepayLiabilitiesRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RepayLiabilitiesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RepayLiabilitiesRsp;

            /**
             * Verifies a RepayLiabilitiesRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RepayLiabilitiesRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RepayLiabilitiesRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RepayLiabilitiesRsp;

            /**
             * Creates a plain object from a RepayLiabilitiesRsp message. Also converts values to other types if specified.
             * @param message RepayLiabilitiesRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RepayLiabilitiesRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RepayLiabilitiesRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WageHikeRollReq. */
        interface IWageHikeRollReq {

            /** WageHikeRollReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a WageHikeRollReq. */
        class WageHikeRollReq implements IWageHikeRollReq {

            /**
             * Constructs a new WageHikeRollReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IWageHikeRollReq);

            /** WageHikeRollReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new WageHikeRollReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WageHikeRollReq instance
             */
            public static create(properties?: pb.common.IWageHikeRollReq): pb.common.WageHikeRollReq;

            /**
             * Encodes the specified WageHikeRollReq message. Does not implicitly {@link pb.common.WageHikeRollReq.verify|verify} messages.
             * @param message WageHikeRollReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IWageHikeRollReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified WageHikeRollReq message, length delimited. Does not implicitly {@link pb.common.WageHikeRollReq.verify|verify} messages.
             * @param message WageHikeRollReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IWageHikeRollReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a WageHikeRollReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WageHikeRollReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.WageHikeRollReq;

            /**
             * Decodes a WageHikeRollReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WageHikeRollReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.WageHikeRollReq;

            /**
             * Verifies a WageHikeRollReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WageHikeRollReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WageHikeRollReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.WageHikeRollReq;

            /**
             * Creates a plain object from a WageHikeRollReq message. Also converts values to other types if specified.
             * @param message WageHikeRollReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.WageHikeRollReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WageHikeRollReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WageHikeRollRsp. */
        interface IWageHikeRollRsp {

            /** WageHikeRollRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a WageHikeRollRsp. */
        class WageHikeRollRsp implements IWageHikeRollRsp {

            /**
             * Constructs a new WageHikeRollRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IWageHikeRollRsp);

            /** WageHikeRollRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new WageHikeRollRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WageHikeRollRsp instance
             */
            public static create(properties?: pb.common.IWageHikeRollRsp): pb.common.WageHikeRollRsp;

            /**
             * Encodes the specified WageHikeRollRsp message. Does not implicitly {@link pb.common.WageHikeRollRsp.verify|verify} messages.
             * @param message WageHikeRollRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IWageHikeRollRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified WageHikeRollRsp message, length delimited. Does not implicitly {@link pb.common.WageHikeRollRsp.verify|verify} messages.
             * @param message WageHikeRollRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IWageHikeRollRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a WageHikeRollRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WageHikeRollRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.WageHikeRollRsp;

            /**
             * Decodes a WageHikeRollRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WageHikeRollRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.WageHikeRollRsp;

            /**
             * Verifies a WageHikeRollRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WageHikeRollRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WageHikeRollRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.WageHikeRollRsp;

            /**
             * Creates a plain object from a WageHikeRollRsp message. Also converts values to other types if specified.
             * @param message WageHikeRollRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.WageHikeRollRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WageHikeRollRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a WageHikeMsg. */
        interface IWageHikeMsg {

            /** WageHikeMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** WageHikeMsg num */
            num?: (number|null);

            /** WageHikeMsg incr */
            incr?: (number|null);

            /** WageHikeMsg isPromotion */
            isPromotion?: (boolean|null);

            /** WageHikeMsg promotion */
            promotion?: (pb.common.WageHikeMsg.IPromotion|null);
        }

        /** Represents a WageHikeMsg. */
        class WageHikeMsg implements IWageHikeMsg {

            /**
             * Constructs a new WageHikeMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IWageHikeMsg);

            /** WageHikeMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** WageHikeMsg num. */
            public num: number;

            /** WageHikeMsg incr. */
            public incr: number;

            /** WageHikeMsg isPromotion. */
            public isPromotion: boolean;

            /** WageHikeMsg promotion. */
            public promotion?: (pb.common.WageHikeMsg.IPromotion|null);

            /**
             * Creates a new WageHikeMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns WageHikeMsg instance
             */
            public static create(properties?: pb.common.IWageHikeMsg): pb.common.WageHikeMsg;

            /**
             * Encodes the specified WageHikeMsg message. Does not implicitly {@link pb.common.WageHikeMsg.verify|verify} messages.
             * @param message WageHikeMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IWageHikeMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified WageHikeMsg message, length delimited. Does not implicitly {@link pb.common.WageHikeMsg.verify|verify} messages.
             * @param message WageHikeMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IWageHikeMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a WageHikeMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WageHikeMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.WageHikeMsg;

            /**
             * Decodes a WageHikeMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns WageHikeMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.WageHikeMsg;

            /**
             * Verifies a WageHikeMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a WageHikeMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns WageHikeMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.WageHikeMsg;

            /**
             * Creates a plain object from a WageHikeMsg message. Also converts values to other types if specified.
             * @param message WageHikeMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.WageHikeMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this WageHikeMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace WageHikeMsg {

            /** Properties of a Promotion. */
            interface IPromotion {

                /** Promotion before */
                before?: (string|null);

                /** Promotion after */
                after?: (string|null);
            }

            /** Represents a Promotion. */
            class Promotion implements IPromotion {

                /**
                 * Constructs a new Promotion.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.WageHikeMsg.IPromotion);

                /** Promotion before. */
                public before: string;

                /** Promotion after. */
                public after: string;

                /**
                 * Creates a new Promotion instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Promotion instance
                 */
                public static create(properties?: pb.common.WageHikeMsg.IPromotion): pb.common.WageHikeMsg.Promotion;

                /**
                 * Encodes the specified Promotion message. Does not implicitly {@link pb.common.WageHikeMsg.Promotion.verify|verify} messages.
                 * @param message Promotion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.WageHikeMsg.IPromotion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Promotion message, length delimited. Does not implicitly {@link pb.common.WageHikeMsg.Promotion.verify|verify} messages.
                 * @param message Promotion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.WageHikeMsg.IPromotion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Promotion message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Promotion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.WageHikeMsg.Promotion;

                /**
                 * Decodes a Promotion message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Promotion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.WageHikeMsg.Promotion;

                /**
                 * Verifies a Promotion message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Promotion message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Promotion
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.WageHikeMsg.Promotion;

                /**
                 * Creates a plain object from a Promotion message. Also converts values to other types if specified.
                 * @param message Promotion
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.WageHikeMsg.Promotion, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Promotion to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GetFinancialReportsReq. */
        interface IGetFinancialReportsReq {

            /** GetFinancialReportsReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetFinancialReportsReq. */
        class GetFinancialReportsReq implements IGetFinancialReportsReq {

            /**
             * Constructs a new GetFinancialReportsReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetFinancialReportsReq);

            /** GetFinancialReportsReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetFinancialReportsReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetFinancialReportsReq instance
             */
            public static create(properties?: pb.common.IGetFinancialReportsReq): pb.common.GetFinancialReportsReq;

            /**
             * Encodes the specified GetFinancialReportsReq message. Does not implicitly {@link pb.common.GetFinancialReportsReq.verify|verify} messages.
             * @param message GetFinancialReportsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetFinancialReportsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetFinancialReportsReq message, length delimited. Does not implicitly {@link pb.common.GetFinancialReportsReq.verify|verify} messages.
             * @param message GetFinancialReportsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetFinancialReportsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetFinancialReportsReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetFinancialReportsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetFinancialReportsReq;

            /**
             * Decodes a GetFinancialReportsReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetFinancialReportsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetFinancialReportsReq;

            /**
             * Verifies a GetFinancialReportsReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetFinancialReportsReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetFinancialReportsReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetFinancialReportsReq;

            /**
             * Creates a plain object from a GetFinancialReportsReq message. Also converts values to other types if specified.
             * @param message GetFinancialReportsReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetFinancialReportsReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetFinancialReportsReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetFinancialReportsRsp. */
        interface IGetFinancialReportsRsp {

            /** GetFinancialReportsRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetFinancialReportsRsp data */
            data?: (pb.common.GetFinancialReportsRsp.IFinancialReport[]|null);
        }

        /** Represents a GetFinancialReportsRsp. */
        class GetFinancialReportsRsp implements IGetFinancialReportsRsp {

            /**
             * Constructs a new GetFinancialReportsRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetFinancialReportsRsp);

            /** GetFinancialReportsRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetFinancialReportsRsp data. */
            public data: pb.common.GetFinancialReportsRsp.IFinancialReport[];

            /**
             * Creates a new GetFinancialReportsRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetFinancialReportsRsp instance
             */
            public static create(properties?: pb.common.IGetFinancialReportsRsp): pb.common.GetFinancialReportsRsp;

            /**
             * Encodes the specified GetFinancialReportsRsp message. Does not implicitly {@link pb.common.GetFinancialReportsRsp.verify|verify} messages.
             * @param message GetFinancialReportsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetFinancialReportsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetFinancialReportsRsp message, length delimited. Does not implicitly {@link pb.common.GetFinancialReportsRsp.verify|verify} messages.
             * @param message GetFinancialReportsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetFinancialReportsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetFinancialReportsRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetFinancialReportsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetFinancialReportsRsp;

            /**
             * Decodes a GetFinancialReportsRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetFinancialReportsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetFinancialReportsRsp;

            /**
             * Verifies a GetFinancialReportsRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetFinancialReportsRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetFinancialReportsRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetFinancialReportsRsp;

            /**
             * Creates a plain object from a GetFinancialReportsRsp message. Also converts values to other types if specified.
             * @param message GetFinancialReportsRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetFinancialReportsRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetFinancialReportsRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GetFinancialReportsRsp {

            /** Properties of a FinancialReport. */
            interface IFinancialReport {

                /** FinancialReport MonthSalary */
                MonthSalary?: (number|null);

                /** FinancialReport MonthExpense */
                MonthExpense?: (number|null);

                /** FinancialReport MonthIncomeExSalary */
                MonthIncomeExSalary?: (number|null);

                /** FinancialReport MonthCashFlow */
                MonthCashFlow?: (number|null);

                /** FinancialReport TotalCash */
                TotalCash?: (number|null);
            }

            /** Represents a FinancialReport. */
            class FinancialReport implements IFinancialReport {

                /**
                 * Constructs a new FinancialReport.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.GetFinancialReportsRsp.IFinancialReport);

                /** FinancialReport MonthSalary. */
                public MonthSalary: number;

                /** FinancialReport MonthExpense. */
                public MonthExpense: number;

                /** FinancialReport MonthIncomeExSalary. */
                public MonthIncomeExSalary: number;

                /** FinancialReport MonthCashFlow. */
                public MonthCashFlow: number;

                /** FinancialReport TotalCash. */
                public TotalCash: number;

                /**
                 * Creates a new FinancialReport instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FinancialReport instance
                 */
                public static create(properties?: pb.common.GetFinancialReportsRsp.IFinancialReport): pb.common.GetFinancialReportsRsp.FinancialReport;

                /**
                 * Encodes the specified FinancialReport message. Does not implicitly {@link pb.common.GetFinancialReportsRsp.FinancialReport.verify|verify} messages.
                 * @param message FinancialReport message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.GetFinancialReportsRsp.IFinancialReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FinancialReport message, length delimited. Does not implicitly {@link pb.common.GetFinancialReportsRsp.FinancialReport.verify|verify} messages.
                 * @param message FinancialReport message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.GetFinancialReportsRsp.IFinancialReport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FinancialReport message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FinancialReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetFinancialReportsRsp.FinancialReport;

                /**
                 * Decodes a FinancialReport message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FinancialReport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetFinancialReportsRsp.FinancialReport;

                /**
                 * Verifies a FinancialReport message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FinancialReport message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FinancialReport
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.GetFinancialReportsRsp.FinancialReport;

                /**
                 * Creates a plain object from a FinancialReport message. Also converts values to other types if specified.
                 * @param message FinancialReport
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.GetFinancialReportsRsp.FinancialReport, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FinancialReport to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GetPlayerAssetReq. */
        interface IGetPlayerAssetReq {

            /** GetPlayerAssetReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetPlayerAssetReq. */
        class GetPlayerAssetReq implements IGetPlayerAssetReq {

            /**
             * Constructs a new GetPlayerAssetReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetPlayerAssetReq);

            /** GetPlayerAssetReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetPlayerAssetReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerAssetReq instance
             */
            public static create(properties?: pb.common.IGetPlayerAssetReq): pb.common.GetPlayerAssetReq;

            /**
             * Encodes the specified GetPlayerAssetReq message. Does not implicitly {@link pb.common.GetPlayerAssetReq.verify|verify} messages.
             * @param message GetPlayerAssetReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetPlayerAssetReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerAssetReq message, length delimited. Does not implicitly {@link pb.common.GetPlayerAssetReq.verify|verify} messages.
             * @param message GetPlayerAssetReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetPlayerAssetReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerAssetReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerAssetReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetPlayerAssetReq;

            /**
             * Decodes a GetPlayerAssetReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerAssetReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetPlayerAssetReq;

            /**
             * Verifies a GetPlayerAssetReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerAssetReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerAssetReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetPlayerAssetReq;

            /**
             * Creates a plain object from a GetPlayerAssetReq message. Also converts values to other types if specified.
             * @param message GetPlayerAssetReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetPlayerAssetReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerAssetReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetPlayerAssetRsp. */
        interface IGetPlayerAssetRsp {

            /** GetPlayerAssetRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetPlayerAssetRsp data */
            data?: (pb.common.IPlayerAsset[]|null);
        }

        /** Represents a GetPlayerAssetRsp. */
        class GetPlayerAssetRsp implements IGetPlayerAssetRsp {

            /**
             * Constructs a new GetPlayerAssetRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetPlayerAssetRsp);

            /** GetPlayerAssetRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetPlayerAssetRsp data. */
            public data: pb.common.IPlayerAsset[];

            /**
             * Creates a new GetPlayerAssetRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerAssetRsp instance
             */
            public static create(properties?: pb.common.IGetPlayerAssetRsp): pb.common.GetPlayerAssetRsp;

            /**
             * Encodes the specified GetPlayerAssetRsp message. Does not implicitly {@link pb.common.GetPlayerAssetRsp.verify|verify} messages.
             * @param message GetPlayerAssetRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetPlayerAssetRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerAssetRsp message, length delimited. Does not implicitly {@link pb.common.GetPlayerAssetRsp.verify|verify} messages.
             * @param message GetPlayerAssetRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetPlayerAssetRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerAssetRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerAssetRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetPlayerAssetRsp;

            /**
             * Decodes a GetPlayerAssetRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerAssetRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetPlayerAssetRsp;

            /**
             * Verifies a GetPlayerAssetRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerAssetRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerAssetRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetPlayerAssetRsp;

            /**
             * Creates a plain object from a GetPlayerAssetRsp message. Also converts values to other types if specified.
             * @param message GetPlayerAssetRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetPlayerAssetRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerAssetRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetPlayerLoanAssetReq. */
        interface IGetPlayerLoanAssetReq {

            /** GetPlayerLoanAssetReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetPlayerLoanAssetReq. */
        class GetPlayerLoanAssetReq implements IGetPlayerLoanAssetReq {

            /**
             * Constructs a new GetPlayerLoanAssetReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetPlayerLoanAssetReq);

            /** GetPlayerLoanAssetReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetPlayerLoanAssetReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerLoanAssetReq instance
             */
            public static create(properties?: pb.common.IGetPlayerLoanAssetReq): pb.common.GetPlayerLoanAssetReq;

            /**
             * Encodes the specified GetPlayerLoanAssetReq message. Does not implicitly {@link pb.common.GetPlayerLoanAssetReq.verify|verify} messages.
             * @param message GetPlayerLoanAssetReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetPlayerLoanAssetReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerLoanAssetReq message, length delimited. Does not implicitly {@link pb.common.GetPlayerLoanAssetReq.verify|verify} messages.
             * @param message GetPlayerLoanAssetReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetPlayerLoanAssetReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerLoanAssetReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerLoanAssetReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetPlayerLoanAssetReq;

            /**
             * Decodes a GetPlayerLoanAssetReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerLoanAssetReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetPlayerLoanAssetReq;

            /**
             * Verifies a GetPlayerLoanAssetReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerLoanAssetReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerLoanAssetReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetPlayerLoanAssetReq;

            /**
             * Creates a plain object from a GetPlayerLoanAssetReq message. Also converts values to other types if specified.
             * @param message GetPlayerLoanAssetReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetPlayerLoanAssetReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerLoanAssetReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetPlayerLoanAssetRsp. */
        interface IGetPlayerLoanAssetRsp {

            /** GetPlayerLoanAssetRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetPlayerLoanAssetRsp data */
            data?: (pb.common.IPlayerAsset[]|null);
        }

        /** Represents a GetPlayerLoanAssetRsp. */
        class GetPlayerLoanAssetRsp implements IGetPlayerLoanAssetRsp {

            /**
             * Constructs a new GetPlayerLoanAssetRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetPlayerLoanAssetRsp);

            /** GetPlayerLoanAssetRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetPlayerLoanAssetRsp data. */
            public data: pb.common.IPlayerAsset[];

            /**
             * Creates a new GetPlayerLoanAssetRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerLoanAssetRsp instance
             */
            public static create(properties?: pb.common.IGetPlayerLoanAssetRsp): pb.common.GetPlayerLoanAssetRsp;

            /**
             * Encodes the specified GetPlayerLoanAssetRsp message. Does not implicitly {@link pb.common.GetPlayerLoanAssetRsp.verify|verify} messages.
             * @param message GetPlayerLoanAssetRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetPlayerLoanAssetRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerLoanAssetRsp message, length delimited. Does not implicitly {@link pb.common.GetPlayerLoanAssetRsp.verify|verify} messages.
             * @param message GetPlayerLoanAssetRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetPlayerLoanAssetRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerLoanAssetRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerLoanAssetRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetPlayerLoanAssetRsp;

            /**
             * Decodes a GetPlayerLoanAssetRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerLoanAssetRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetPlayerLoanAssetRsp;

            /**
             * Verifies a GetPlayerLoanAssetRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerLoanAssetRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerLoanAssetRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetPlayerLoanAssetRsp;

            /**
             * Creates a plain object from a GetPlayerLoanAssetRsp message. Also converts values to other types if specified.
             * @param message GetPlayerLoanAssetRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetPlayerLoanAssetRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerLoanAssetRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TestPushReq. */
        interface ITestPushReq {

            /** TestPushReq type */
            type?: (number|null);

            /** TestPushReq userId */
            userId?: (Long|null);

            /** TestPushReq content */
            content?: (Uint8Array|null);
        }

        /** Represents a TestPushReq. */
        class TestPushReq implements ITestPushReq {

            /**
             * Constructs a new TestPushReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ITestPushReq);

            /** TestPushReq type. */
            public type: number;

            /** TestPushReq userId. */
            public userId: Long;

            /** TestPushReq content. */
            public content: Uint8Array;

            /**
             * Creates a new TestPushReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TestPushReq instance
             */
            public static create(properties?: pb.common.ITestPushReq): pb.common.TestPushReq;

            /**
             * Encodes the specified TestPushReq message. Does not implicitly {@link pb.common.TestPushReq.verify|verify} messages.
             * @param message TestPushReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ITestPushReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TestPushReq message, length delimited. Does not implicitly {@link pb.common.TestPushReq.verify|verify} messages.
             * @param message TestPushReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ITestPushReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TestPushReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TestPushReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.TestPushReq;

            /**
             * Decodes a TestPushReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TestPushReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.TestPushReq;

            /**
             * Verifies a TestPushReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TestPushReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TestPushReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.TestPushReq;

            /**
             * Creates a plain object from a TestPushReq message. Also converts values to other types if specified.
             * @param message TestPushReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.TestPushReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TestPushReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetLoanQualificationReq. */
        interface IGetLoanQualificationReq {

            /** GetLoanQualificationReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetLoanQualificationReq. */
        class GetLoanQualificationReq implements IGetLoanQualificationReq {

            /**
             * Constructs a new GetLoanQualificationReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetLoanQualificationReq);

            /** GetLoanQualificationReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetLoanQualificationReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetLoanQualificationReq instance
             */
            public static create(properties?: pb.common.IGetLoanQualificationReq): pb.common.GetLoanQualificationReq;

            /**
             * Encodes the specified GetLoanQualificationReq message. Does not implicitly {@link pb.common.GetLoanQualificationReq.verify|verify} messages.
             * @param message GetLoanQualificationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetLoanQualificationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetLoanQualificationReq message, length delimited. Does not implicitly {@link pb.common.GetLoanQualificationReq.verify|verify} messages.
             * @param message GetLoanQualificationReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetLoanQualificationReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetLoanQualificationReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetLoanQualificationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetLoanQualificationReq;

            /**
             * Decodes a GetLoanQualificationReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetLoanQualificationReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetLoanQualificationReq;

            /**
             * Verifies a GetLoanQualificationReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetLoanQualificationReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetLoanQualificationReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetLoanQualificationReq;

            /**
             * Creates a plain object from a GetLoanQualificationReq message. Also converts values to other types if specified.
             * @param message GetLoanQualificationReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetLoanQualificationReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetLoanQualificationReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetLoanQualificationRsp. */
        interface IGetLoanQualificationRsp {

            /** GetLoanQualificationRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetLoanQualificationRsp amount */
            amount?: (number|null);

            /** GetLoanQualificationRsp loanRatePCT */
            loanRatePCT?: (number|null);

            /** GetLoanQualificationRsp loanMultiplier */
            loanMultiplier?: (number|null);

            /** GetLoanQualificationRsp recList */
            recList?: (pb.common.GetLoanQualificationRsp.IRecLoan[]|null);

            /** GetLoanQualificationRsp loanLimitPrompt */
            loanLimitPrompt?: (string|null);

            /** GetLoanQualificationRsp loanLimit */
            loanLimit?: (Long|null);

            /** GetLoanQualificationRsp totalLoan */
            totalLoan?: (Long|null);
        }

        /** Represents a GetLoanQualificationRsp. */
        class GetLoanQualificationRsp implements IGetLoanQualificationRsp {

            /**
             * Constructs a new GetLoanQualificationRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetLoanQualificationRsp);

            /** GetLoanQualificationRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetLoanQualificationRsp amount. */
            public amount: number;

            /** GetLoanQualificationRsp loanRatePCT. */
            public loanRatePCT: number;

            /** GetLoanQualificationRsp loanMultiplier. */
            public loanMultiplier: number;

            /** GetLoanQualificationRsp recList. */
            public recList: pb.common.GetLoanQualificationRsp.IRecLoan[];

            /** GetLoanQualificationRsp loanLimitPrompt. */
            public loanLimitPrompt: string;

            /** GetLoanQualificationRsp loanLimit. */
            public loanLimit: Long;

            /** GetLoanQualificationRsp totalLoan. */
            public totalLoan: Long;

            /**
             * Creates a new GetLoanQualificationRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetLoanQualificationRsp instance
             */
            public static create(properties?: pb.common.IGetLoanQualificationRsp): pb.common.GetLoanQualificationRsp;

            /**
             * Encodes the specified GetLoanQualificationRsp message. Does not implicitly {@link pb.common.GetLoanQualificationRsp.verify|verify} messages.
             * @param message GetLoanQualificationRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetLoanQualificationRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetLoanQualificationRsp message, length delimited. Does not implicitly {@link pb.common.GetLoanQualificationRsp.verify|verify} messages.
             * @param message GetLoanQualificationRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetLoanQualificationRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetLoanQualificationRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetLoanQualificationRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetLoanQualificationRsp;

            /**
             * Decodes a GetLoanQualificationRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetLoanQualificationRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetLoanQualificationRsp;

            /**
             * Verifies a GetLoanQualificationRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetLoanQualificationRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetLoanQualificationRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetLoanQualificationRsp;

            /**
             * Creates a plain object from a GetLoanQualificationRsp message. Also converts values to other types if specified.
             * @param message GetLoanQualificationRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetLoanQualificationRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetLoanQualificationRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GetLoanQualificationRsp {

            /** Properties of a RecLoan. */
            interface IRecLoan {

                /** RecLoan amount */
                amount?: (number|null);

                /** RecLoan interest */
                interest?: (number|null);
            }

            /** Represents a RecLoan. */
            class RecLoan implements IRecLoan {

                /**
                 * Constructs a new RecLoan.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.GetLoanQualificationRsp.IRecLoan);

                /** RecLoan amount. */
                public amount: number;

                /** RecLoan interest. */
                public interest: number;

                /**
                 * Creates a new RecLoan instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RecLoan instance
                 */
                public static create(properties?: pb.common.GetLoanQualificationRsp.IRecLoan): pb.common.GetLoanQualificationRsp.RecLoan;

                /**
                 * Encodes the specified RecLoan message. Does not implicitly {@link pb.common.GetLoanQualificationRsp.RecLoan.verify|verify} messages.
                 * @param message RecLoan message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.GetLoanQualificationRsp.IRecLoan, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RecLoan message, length delimited. Does not implicitly {@link pb.common.GetLoanQualificationRsp.RecLoan.verify|verify} messages.
                 * @param message RecLoan message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.GetLoanQualificationRsp.IRecLoan, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RecLoan message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RecLoan
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetLoanQualificationRsp.RecLoan;

                /**
                 * Decodes a RecLoan message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RecLoan
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetLoanQualificationRsp.RecLoan;

                /**
                 * Verifies a RecLoan message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RecLoan message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RecLoan
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.GetLoanQualificationRsp.RecLoan;

                /**
                 * Creates a plain object from a RecLoan message. Also converts values to other types if specified.
                 * @param message RecLoan
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.GetLoanQualificationRsp.RecLoan, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RecLoan to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an UnemploymentAckReq. */
        interface IUnemploymentAckReq {

            /** UnemploymentAckReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents an UnemploymentAckReq. */
        class UnemploymentAckReq implements IUnemploymentAckReq {

            /**
             * Constructs a new UnemploymentAckReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IUnemploymentAckReq);

            /** UnemploymentAckReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new UnemploymentAckReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UnemploymentAckReq instance
             */
            public static create(properties?: pb.common.IUnemploymentAckReq): pb.common.UnemploymentAckReq;

            /**
             * Encodes the specified UnemploymentAckReq message. Does not implicitly {@link pb.common.UnemploymentAckReq.verify|verify} messages.
             * @param message UnemploymentAckReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IUnemploymentAckReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UnemploymentAckReq message, length delimited. Does not implicitly {@link pb.common.UnemploymentAckReq.verify|verify} messages.
             * @param message UnemploymentAckReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IUnemploymentAckReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UnemploymentAckReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UnemploymentAckReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.UnemploymentAckReq;

            /**
             * Decodes an UnemploymentAckReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UnemploymentAckReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.UnemploymentAckReq;

            /**
             * Verifies an UnemploymentAckReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UnemploymentAckReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UnemploymentAckReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.UnemploymentAckReq;

            /**
             * Creates a plain object from an UnemploymentAckReq message. Also converts values to other types if specified.
             * @param message UnemploymentAckReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.UnemploymentAckReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UnemploymentAckReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UnemploymentAckRsp. */
        interface IUnemploymentAckRsp {

            /** UnemploymentAckRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents an UnemploymentAckRsp. */
        class UnemploymentAckRsp implements IUnemploymentAckRsp {

            /**
             * Constructs a new UnemploymentAckRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IUnemploymentAckRsp);

            /** UnemploymentAckRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new UnemploymentAckRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UnemploymentAckRsp instance
             */
            public static create(properties?: pb.common.IUnemploymentAckRsp): pb.common.UnemploymentAckRsp;

            /**
             * Encodes the specified UnemploymentAckRsp message. Does not implicitly {@link pb.common.UnemploymentAckRsp.verify|verify} messages.
             * @param message UnemploymentAckRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IUnemploymentAckRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UnemploymentAckRsp message, length delimited. Does not implicitly {@link pb.common.UnemploymentAckRsp.verify|verify} messages.
             * @param message UnemploymentAckRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IUnemploymentAckRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UnemploymentAckRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UnemploymentAckRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.UnemploymentAckRsp;

            /**
             * Decodes an UnemploymentAckRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UnemploymentAckRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.UnemploymentAckRsp;

            /**
             * Verifies an UnemploymentAckRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UnemploymentAckRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UnemploymentAckRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.UnemploymentAckRsp;

            /**
             * Creates a plain object from an UnemploymentAckRsp message. Also converts values to other types if specified.
             * @param message UnemploymentAckRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.UnemploymentAckRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UnemploymentAckRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameReportItem. */
        interface IGameReportItem {

            /** GameReportItem userId */
            userId?: (Long|null);

            /** GameReportItem stockCnt */
            stockCnt?: (number|null);

            /** GameReportItem houseCnt */
            houseCnt?: (number|null);

            /** GameReportItem companyCnt */
            companyCnt?: (number|null);

            /** GameReportItem degree */
            degree?: (number|null);

            /** GameReportItem equityCnt */
            equityCnt?: (number|null);
        }

        /** Represents a GameReportItem. */
        class GameReportItem implements IGameReportItem {

            /**
             * Constructs a new GameReportItem.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameReportItem);

            /** GameReportItem userId. */
            public userId: Long;

            /** GameReportItem stockCnt. */
            public stockCnt: number;

            /** GameReportItem houseCnt. */
            public houseCnt: number;

            /** GameReportItem companyCnt. */
            public companyCnt: number;

            /** GameReportItem degree. */
            public degree: number;

            /** GameReportItem equityCnt. */
            public equityCnt: number;

            /**
             * Creates a new GameReportItem instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameReportItem instance
             */
            public static create(properties?: pb.common.IGameReportItem): pb.common.GameReportItem;

            /**
             * Encodes the specified GameReportItem message. Does not implicitly {@link pb.common.GameReportItem.verify|verify} messages.
             * @param message GameReportItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameReportItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameReportItem message, length delimited. Does not implicitly {@link pb.common.GameReportItem.verify|verify} messages.
             * @param message GameReportItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameReportItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameReportItem message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameReportItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameReportItem;

            /**
             * Decodes a GameReportItem message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameReportItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameReportItem;

            /**
             * Verifies a GameReportItem message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameReportItem message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameReportItem
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameReportItem;

            /**
             * Creates a plain object from a GameReportItem message. Also converts values to other types if specified.
             * @param message GameReportItem
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameReportItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameReportItem to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameOverMsg. */
        interface IGameOverMsg {

            /** GameOverMsg data */
            data?: (pb.common.IGameReportItem[]|null);

            /** GameOverMsg winnerId */
            winnerId?: (Long|null);

            /** GameOverMsg typ */
            typ?: (pb.common.GameOverMsg.endType|null);

            /** GameOverMsg gameId */
            gameId?: (Long|null);

            /** GameOverMsg bonus */
            bonus?: ({ [k: string]: pb.common.IGameBonus }|null);

            /** GameOverMsg startedAt */
            startedAt?: (google.protobuf.ITimestamp|null);

            /** GameOverMsg endedAt */
            endedAt?: (google.protobuf.ITimestamp|null);

            /** GameOverMsg roles */
            roles?: (pb.common.IPlayerRole[]|null);
        }

        /** Represents a GameOverMsg. */
        class GameOverMsg implements IGameOverMsg {

            /**
             * Constructs a new GameOverMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameOverMsg);

            /** GameOverMsg data. */
            public data: pb.common.IGameReportItem[];

            /** GameOverMsg winnerId. */
            public winnerId: Long;

            /** GameOverMsg typ. */
            public typ: pb.common.GameOverMsg.endType;

            /** GameOverMsg gameId. */
            public gameId: Long;

            /** GameOverMsg bonus. */
            public bonus: { [k: string]: pb.common.IGameBonus };

            /** GameOverMsg startedAt. */
            public startedAt?: (google.protobuf.ITimestamp|null);

            /** GameOverMsg endedAt. */
            public endedAt?: (google.protobuf.ITimestamp|null);

            /** GameOverMsg roles. */
            public roles: pb.common.IPlayerRole[];

            /**
             * Creates a new GameOverMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameOverMsg instance
             */
            public static create(properties?: pb.common.IGameOverMsg): pb.common.GameOverMsg;

            /**
             * Encodes the specified GameOverMsg message. Does not implicitly {@link pb.common.GameOverMsg.verify|verify} messages.
             * @param message GameOverMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameOverMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameOverMsg message, length delimited. Does not implicitly {@link pb.common.GameOverMsg.verify|verify} messages.
             * @param message GameOverMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameOverMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameOverMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameOverMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameOverMsg;

            /**
             * Decodes a GameOverMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameOverMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameOverMsg;

            /**
             * Verifies a GameOverMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameOverMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameOverMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameOverMsg;

            /**
             * Creates a plain object from a GameOverMsg message. Also converts values to other types if specified.
             * @param message GameOverMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameOverMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameOverMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GameOverMsg {

            /** endType enum. */
            enum endType {
                normal = 0,
                timeout = 1,
                force = 2,
                allBust = 3
            }
        }

        /** Properties of a TryPayReq. */
        interface ITryPayReq {

            /** TryPayReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** TryPayReq quantity */
            quantity?: (number|null);
        }

        /** Represents a TryPayReq. */
        class TryPayReq implements ITryPayReq {

            /**
             * Constructs a new TryPayReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ITryPayReq);

            /** TryPayReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** TryPayReq quantity. */
            public quantity: number;

            /**
             * Creates a new TryPayReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TryPayReq instance
             */
            public static create(properties?: pb.common.ITryPayReq): pb.common.TryPayReq;

            /**
             * Encodes the specified TryPayReq message. Does not implicitly {@link pb.common.TryPayReq.verify|verify} messages.
             * @param message TryPayReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ITryPayReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TryPayReq message, length delimited. Does not implicitly {@link pb.common.TryPayReq.verify|verify} messages.
             * @param message TryPayReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ITryPayReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TryPayReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TryPayReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.TryPayReq;

            /**
             * Decodes a TryPayReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TryPayReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.TryPayReq;

            /**
             * Verifies a TryPayReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TryPayReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TryPayReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.TryPayReq;

            /**
             * Creates a plain object from a TryPayReq message. Also converts values to other types if specified.
             * @param message TryPayReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.TryPayReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TryPayReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TryPayRsp. */
        interface ITryPayRsp {

            /** TryPayRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** TryPayRsp payment */
            payment?: (number|null);

            /** TryPayRsp balance */
            balance?: (number|null);

            /** TryPayRsp cash */
            cash?: (number|null);
        }

        /** Represents a TryPayRsp. */
        class TryPayRsp implements ITryPayRsp {

            /**
             * Constructs a new TryPayRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ITryPayRsp);

            /** TryPayRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** TryPayRsp payment. */
            public payment: number;

            /** TryPayRsp balance. */
            public balance: number;

            /** TryPayRsp cash. */
            public cash: number;

            /**
             * Creates a new TryPayRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TryPayRsp instance
             */
            public static create(properties?: pb.common.ITryPayRsp): pb.common.TryPayRsp;

            /**
             * Encodes the specified TryPayRsp message. Does not implicitly {@link pb.common.TryPayRsp.verify|verify} messages.
             * @param message TryPayRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ITryPayRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TryPayRsp message, length delimited. Does not implicitly {@link pb.common.TryPayRsp.verify|verify} messages.
             * @param message TryPayRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ITryPayRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TryPayRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TryPayRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.TryPayRsp;

            /**
             * Decodes a TryPayRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TryPayRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.TryPayRsp;

            /**
             * Verifies a TryPayRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TryPayRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TryPayRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.TryPayRsp;

            /**
             * Creates a plain object from a TryPayRsp message. Also converts values to other types if specified.
             * @param message TryPayRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.TryPayRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TryPayRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AuctionTryRaiseReq. */
        interface IAuctionTryRaiseReq {

            /** AuctionTryRaiseReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** AuctionTryRaiseReq price */
            price?: (Long|null);
        }

        /** Represents an AuctionTryRaiseReq. */
        class AuctionTryRaiseReq implements IAuctionTryRaiseReq {

            /**
             * Constructs a new AuctionTryRaiseReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAuctionTryRaiseReq);

            /** AuctionTryRaiseReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** AuctionTryRaiseReq price. */
            public price: Long;

            /**
             * Creates a new AuctionTryRaiseReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AuctionTryRaiseReq instance
             */
            public static create(properties?: pb.common.IAuctionTryRaiseReq): pb.common.AuctionTryRaiseReq;

            /**
             * Encodes the specified AuctionTryRaiseReq message. Does not implicitly {@link pb.common.AuctionTryRaiseReq.verify|verify} messages.
             * @param message AuctionTryRaiseReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAuctionTryRaiseReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AuctionTryRaiseReq message, length delimited. Does not implicitly {@link pb.common.AuctionTryRaiseReq.verify|verify} messages.
             * @param message AuctionTryRaiseReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAuctionTryRaiseReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AuctionTryRaiseReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AuctionTryRaiseReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AuctionTryRaiseReq;

            /**
             * Decodes an AuctionTryRaiseReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AuctionTryRaiseReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AuctionTryRaiseReq;

            /**
             * Verifies an AuctionTryRaiseReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AuctionTryRaiseReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AuctionTryRaiseReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AuctionTryRaiseReq;

            /**
             * Creates a plain object from an AuctionTryRaiseReq message. Also converts values to other types if specified.
             * @param message AuctionTryRaiseReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AuctionTryRaiseReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AuctionTryRaiseReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AuctionTryRaiseRsp. */
        interface IAuctionTryRaiseRsp {

            /** AuctionTryRaiseRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** AuctionTryRaiseRsp payment */
            payment?: (pb.common.PaymentType|null);

            /** AuctionTryRaiseRsp balance */
            balance?: (Long|null);

            /** AuctionTryRaiseRsp cash */
            cash?: (Long|null);
        }

        /** Represents an AuctionTryRaiseRsp. */
        class AuctionTryRaiseRsp implements IAuctionTryRaiseRsp {

            /**
             * Constructs a new AuctionTryRaiseRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAuctionTryRaiseRsp);

            /** AuctionTryRaiseRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** AuctionTryRaiseRsp payment. */
            public payment: pb.common.PaymentType;

            /** AuctionTryRaiseRsp balance. */
            public balance: Long;

            /** AuctionTryRaiseRsp cash. */
            public cash: Long;

            /**
             * Creates a new AuctionTryRaiseRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AuctionTryRaiseRsp instance
             */
            public static create(properties?: pb.common.IAuctionTryRaiseRsp): pb.common.AuctionTryRaiseRsp;

            /**
             * Encodes the specified AuctionTryRaiseRsp message. Does not implicitly {@link pb.common.AuctionTryRaiseRsp.verify|verify} messages.
             * @param message AuctionTryRaiseRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAuctionTryRaiseRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AuctionTryRaiseRsp message, length delimited. Does not implicitly {@link pb.common.AuctionTryRaiseRsp.verify|verify} messages.
             * @param message AuctionTryRaiseRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAuctionTryRaiseRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AuctionTryRaiseRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AuctionTryRaiseRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.AuctionTryRaiseRsp;

            /**
             * Decodes an AuctionTryRaiseRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AuctionTryRaiseRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.AuctionTryRaiseRsp;

            /**
             * Verifies an AuctionTryRaiseRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AuctionTryRaiseRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AuctionTryRaiseRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.AuctionTryRaiseRsp;

            /**
             * Creates a plain object from an AuctionTryRaiseRsp message. Also converts values to other types if specified.
             * @param message AuctionTryRaiseRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.AuctionTryRaiseRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AuctionTryRaiseRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetStatementReq. */
        interface IGetStatementReq {

            /** GetStatementReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** GetStatementReq userId */
            userId?: (Long|null);
        }

        /** Represents a GetStatementReq. */
        class GetStatementReq implements IGetStatementReq {

            /**
             * Constructs a new GetStatementReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetStatementReq);

            /** GetStatementReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** GetStatementReq userId. */
            public userId: Long;

            /**
             * Creates a new GetStatementReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetStatementReq instance
             */
            public static create(properties?: pb.common.IGetStatementReq): pb.common.GetStatementReq;

            /**
             * Encodes the specified GetStatementReq message. Does not implicitly {@link pb.common.GetStatementReq.verify|verify} messages.
             * @param message GetStatementReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetStatementReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetStatementReq message, length delimited. Does not implicitly {@link pb.common.GetStatementReq.verify|verify} messages.
             * @param message GetStatementReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetStatementReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetStatementReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetStatementReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetStatementReq;

            /**
             * Decodes a GetStatementReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetStatementReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetStatementReq;

            /**
             * Verifies a GetStatementReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetStatementReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetStatementReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetStatementReq;

            /**
             * Creates a plain object from a GetStatementReq message. Also converts values to other types if specified.
             * @param message GetStatementReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetStatementReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetStatementReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetStatementRsp. */
        interface IGetStatementRsp {

            /** GetStatementRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetStatementRsp JsonBody */
            JsonBody?: (string|null);

            /** GetStatementRsp assetStatement */
            assetStatement?: (pb.common.IAssetStatement|null);
        }

        /** Represents a GetStatementRsp. */
        class GetStatementRsp implements IGetStatementRsp {

            /**
             * Constructs a new GetStatementRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetStatementRsp);

            /** GetStatementRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetStatementRsp JsonBody. */
            public JsonBody: string;

            /** GetStatementRsp assetStatement. */
            public assetStatement?: (pb.common.IAssetStatement|null);

            /**
             * Creates a new GetStatementRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetStatementRsp instance
             */
            public static create(properties?: pb.common.IGetStatementRsp): pb.common.GetStatementRsp;

            /**
             * Encodes the specified GetStatementRsp message. Does not implicitly {@link pb.common.GetStatementRsp.verify|verify} messages.
             * @param message GetStatementRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetStatementRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetStatementRsp message, length delimited. Does not implicitly {@link pb.common.GetStatementRsp.verify|verify} messages.
             * @param message GetStatementRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetStatementRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetStatementRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetStatementRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetStatementRsp;

            /**
             * Decodes a GetStatementRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetStatementRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetStatementRsp;

            /**
             * Verifies a GetStatementRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetStatementRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetStatementRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetStatementRsp;

            /**
             * Creates a plain object from a GetStatementRsp message. Also converts values to other types if specified.
             * @param message GetStatementRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetStatementRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetStatementRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PassReq. */
        interface IPassReq {

            /** PassReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a PassReq. */
        class PassReq implements IPassReq {

            /**
             * Constructs a new PassReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPassReq);

            /** PassReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new PassReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PassReq instance
             */
            public static create(properties?: pb.common.IPassReq): pb.common.PassReq;

            /**
             * Encodes the specified PassReq message. Does not implicitly {@link pb.common.PassReq.verify|verify} messages.
             * @param message PassReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPassReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PassReq message, length delimited. Does not implicitly {@link pb.common.PassReq.verify|verify} messages.
             * @param message PassReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPassReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PassReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PassReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PassReq;

            /**
             * Decodes a PassReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PassReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PassReq;

            /**
             * Verifies a PassReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PassReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PassReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PassReq;

            /**
             * Creates a plain object from a PassReq message. Also converts values to other types if specified.
             * @param message PassReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PassReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PassReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PassRsp. */
        interface IPassRsp {

            /** PassRsp Rsp */
            Rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a PassRsp. */
        class PassRsp implements IPassRsp {

            /**
             * Constructs a new PassRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPassRsp);

            /** PassRsp Rsp. */
            public Rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new PassRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PassRsp instance
             */
            public static create(properties?: pb.common.IPassRsp): pb.common.PassRsp;

            /**
             * Encodes the specified PassRsp message. Does not implicitly {@link pb.common.PassRsp.verify|verify} messages.
             * @param message PassRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPassRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PassRsp message, length delimited. Does not implicitly {@link pb.common.PassRsp.verify|verify} messages.
             * @param message PassRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPassRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PassRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PassRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PassRsp;

            /**
             * Decodes a PassRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PassRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PassRsp;

            /**
             * Verifies a PassRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PassRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PassRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PassRsp;

            /**
             * Creates a plain object from a PassRsp message. Also converts values to other types if specified.
             * @param message PassRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PassRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PassRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerAllSelectedRoleMsg. */
        interface IPlayerAllSelectedRoleMsg {

            /** PlayerAllSelectedRoleMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** PlayerAllSelectedRoleMsg roles */
            roles?: (pb.common.IPlayerRole[]|null);
        }

        /** Represents a PlayerAllSelectedRoleMsg. */
        class PlayerAllSelectedRoleMsg implements IPlayerAllSelectedRoleMsg {

            /**
             * Constructs a new PlayerAllSelectedRoleMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerAllSelectedRoleMsg);

            /** PlayerAllSelectedRoleMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** PlayerAllSelectedRoleMsg roles. */
            public roles: pb.common.IPlayerRole[];

            /**
             * Creates a new PlayerAllSelectedRoleMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerAllSelectedRoleMsg instance
             */
            public static create(properties?: pb.common.IPlayerAllSelectedRoleMsg): pb.common.PlayerAllSelectedRoleMsg;

            /**
             * Encodes the specified PlayerAllSelectedRoleMsg message. Does not implicitly {@link pb.common.PlayerAllSelectedRoleMsg.verify|verify} messages.
             * @param message PlayerAllSelectedRoleMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerAllSelectedRoleMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerAllSelectedRoleMsg message, length delimited. Does not implicitly {@link pb.common.PlayerAllSelectedRoleMsg.verify|verify} messages.
             * @param message PlayerAllSelectedRoleMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerAllSelectedRoleMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerAllSelectedRoleMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerAllSelectedRoleMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerAllSelectedRoleMsg;

            /**
             * Decodes a PlayerAllSelectedRoleMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerAllSelectedRoleMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerAllSelectedRoleMsg;

            /**
             * Verifies a PlayerAllSelectedRoleMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerAllSelectedRoleMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerAllSelectedRoleMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerAllSelectedRoleMsg;

            /**
             * Creates a plain object from a PlayerAllSelectedRoleMsg message. Also converts values to other types if specified.
             * @param message PlayerAllSelectedRoleMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerAllSelectedRoleMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerAllSelectedRoleMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartMatchingReq. */
        interface IStartMatchingReq {

            /** StartMatchingReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** StartMatchingReq roomId */
            roomId?: (string|null);
        }

        /** Represents a StartMatchingReq. */
        class StartMatchingReq implements IStartMatchingReq {

            /**
             * Constructs a new StartMatchingReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IStartMatchingReq);

            /** StartMatchingReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** StartMatchingReq roomId. */
            public roomId: string;

            /**
             * Creates a new StartMatchingReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartMatchingReq instance
             */
            public static create(properties?: pb.common.IStartMatchingReq): pb.common.StartMatchingReq;

            /**
             * Encodes the specified StartMatchingReq message. Does not implicitly {@link pb.common.StartMatchingReq.verify|verify} messages.
             * @param message StartMatchingReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IStartMatchingReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartMatchingReq message, length delimited. Does not implicitly {@link pb.common.StartMatchingReq.verify|verify} messages.
             * @param message StartMatchingReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IStartMatchingReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartMatchingReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartMatchingReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.StartMatchingReq;

            /**
             * Decodes a StartMatchingReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartMatchingReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.StartMatchingReq;

            /**
             * Verifies a StartMatchingReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartMatchingReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartMatchingReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.StartMatchingReq;

            /**
             * Creates a plain object from a StartMatchingReq message. Also converts values to other types if specified.
             * @param message StartMatchingReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.StartMatchingReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartMatchingReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartMatchingRsp. */
        interface IStartMatchingRsp {

            /** StartMatchingRsp Rsp */
            Rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a StartMatchingRsp. */
        class StartMatchingRsp implements IStartMatchingRsp {

            /**
             * Constructs a new StartMatchingRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IStartMatchingRsp);

            /** StartMatchingRsp Rsp. */
            public Rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new StartMatchingRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartMatchingRsp instance
             */
            public static create(properties?: pb.common.IStartMatchingRsp): pb.common.StartMatchingRsp;

            /**
             * Encodes the specified StartMatchingRsp message. Does not implicitly {@link pb.common.StartMatchingRsp.verify|verify} messages.
             * @param message StartMatchingRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IStartMatchingRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartMatchingRsp message, length delimited. Does not implicitly {@link pb.common.StartMatchingRsp.verify|verify} messages.
             * @param message StartMatchingRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IStartMatchingRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartMatchingRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartMatchingRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.StartMatchingRsp;

            /**
             * Decodes a StartMatchingRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartMatchingRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.StartMatchingRsp;

            /**
             * Verifies a StartMatchingRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartMatchingRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartMatchingRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.StartMatchingRsp;

            /**
             * Creates a plain object from a StartMatchingRsp message. Also converts values to other types if specified.
             * @param message StartMatchingRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.StartMatchingRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartMatchingRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartMatchingMsg. */
        interface IStartMatchingMsg {

            /** StartMatchingMsg base */
            base?: (pb.common.IGameBaseMsg|null);
        }

        /** Represents a StartMatchingMsg. */
        class StartMatchingMsg implements IStartMatchingMsg {

            /**
             * Constructs a new StartMatchingMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IStartMatchingMsg);

            /** StartMatchingMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /**
             * Creates a new StartMatchingMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartMatchingMsg instance
             */
            public static create(properties?: pb.common.IStartMatchingMsg): pb.common.StartMatchingMsg;

            /**
             * Encodes the specified StartMatchingMsg message. Does not implicitly {@link pb.common.StartMatchingMsg.verify|verify} messages.
             * @param message StartMatchingMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IStartMatchingMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartMatchingMsg message, length delimited. Does not implicitly {@link pb.common.StartMatchingMsg.verify|verify} messages.
             * @param message StartMatchingMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IStartMatchingMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartMatchingMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartMatchingMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.StartMatchingMsg;

            /**
             * Decodes a StartMatchingMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartMatchingMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.StartMatchingMsg;

            /**
             * Verifies a StartMatchingMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartMatchingMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartMatchingMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.StartMatchingMsg;

            /**
             * Creates a plain object from a StartMatchingMsg message. Also converts values to other types if specified.
             * @param message StartMatchingMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.StartMatchingMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartMatchingMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ExitRoomReq. */
        interface IExitRoomReq {

            /** ExitRoomReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents an ExitRoomReq. */
        class ExitRoomReq implements IExitRoomReq {

            /**
             * Constructs a new ExitRoomReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IExitRoomReq);

            /** ExitRoomReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new ExitRoomReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExitRoomReq instance
             */
            public static create(properties?: pb.common.IExitRoomReq): pb.common.ExitRoomReq;

            /**
             * Encodes the specified ExitRoomReq message. Does not implicitly {@link pb.common.ExitRoomReq.verify|verify} messages.
             * @param message ExitRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IExitRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExitRoomReq message, length delimited. Does not implicitly {@link pb.common.ExitRoomReq.verify|verify} messages.
             * @param message ExitRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IExitRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExitRoomReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExitRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ExitRoomReq;

            /**
             * Decodes an ExitRoomReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExitRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ExitRoomReq;

            /**
             * Verifies an ExitRoomReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExitRoomReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExitRoomReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ExitRoomReq;

            /**
             * Creates a plain object from an ExitRoomReq message. Also converts values to other types if specified.
             * @param message ExitRoomReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ExitRoomReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExitRoomReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ExitRoomRsp. */
        interface IExitRoomRsp {

            /** ExitRoomRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents an ExitRoomRsp. */
        class ExitRoomRsp implements IExitRoomRsp {

            /**
             * Constructs a new ExitRoomRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IExitRoomRsp);

            /** ExitRoomRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new ExitRoomRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExitRoomRsp instance
             */
            public static create(properties?: pb.common.IExitRoomRsp): pb.common.ExitRoomRsp;

            /**
             * Encodes the specified ExitRoomRsp message. Does not implicitly {@link pb.common.ExitRoomRsp.verify|verify} messages.
             * @param message ExitRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IExitRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExitRoomRsp message, length delimited. Does not implicitly {@link pb.common.ExitRoomRsp.verify|verify} messages.
             * @param message ExitRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IExitRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExitRoomRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExitRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ExitRoomRsp;

            /**
             * Decodes an ExitRoomRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExitRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ExitRoomRsp;

            /**
             * Verifies an ExitRoomRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExitRoomRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExitRoomRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ExitRoomRsp;

            /**
             * Creates a plain object from an ExitRoomRsp message. Also converts values to other types if specified.
             * @param message ExitRoomRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ExitRoomRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExitRoomRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RoomInfoReq. */
        interface IRoomInfoReq {

            /** RoomInfoReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** RoomInfoReq roomId */
            roomId?: (string|null);
        }

        /** Represents a RoomInfoReq. */
        class RoomInfoReq implements IRoomInfoReq {

            /**
             * Constructs a new RoomInfoReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRoomInfoReq);

            /** RoomInfoReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** RoomInfoReq roomId. */
            public roomId: string;

            /**
             * Creates a new RoomInfoReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoomInfoReq instance
             */
            public static create(properties?: pb.common.IRoomInfoReq): pb.common.RoomInfoReq;

            /**
             * Encodes the specified RoomInfoReq message. Does not implicitly {@link pb.common.RoomInfoReq.verify|verify} messages.
             * @param message RoomInfoReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRoomInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoomInfoReq message, length delimited. Does not implicitly {@link pb.common.RoomInfoReq.verify|verify} messages.
             * @param message RoomInfoReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRoomInfoReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoomInfoReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoomInfoReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RoomInfoReq;

            /**
             * Decodes a RoomInfoReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoomInfoReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RoomInfoReq;

            /**
             * Verifies a RoomInfoReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoomInfoReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoomInfoReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RoomInfoReq;

            /**
             * Creates a plain object from a RoomInfoReq message. Also converts values to other types if specified.
             * @param message RoomInfoReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RoomInfoReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoomInfoReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RoomInfoRsp. */
        interface IRoomInfoRsp {

            /** RoomInfoRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** RoomInfoRsp room */
            room?: (pb.common.IRoomInfo|null);
        }

        /** Represents a RoomInfoRsp. */
        class RoomInfoRsp implements IRoomInfoRsp {

            /**
             * Constructs a new RoomInfoRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRoomInfoRsp);

            /** RoomInfoRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** RoomInfoRsp room. */
            public room?: (pb.common.IRoomInfo|null);

            /**
             * Creates a new RoomInfoRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoomInfoRsp instance
             */
            public static create(properties?: pb.common.IRoomInfoRsp): pb.common.RoomInfoRsp;

            /**
             * Encodes the specified RoomInfoRsp message. Does not implicitly {@link pb.common.RoomInfoRsp.verify|verify} messages.
             * @param message RoomInfoRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRoomInfoRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoomInfoRsp message, length delimited. Does not implicitly {@link pb.common.RoomInfoRsp.verify|verify} messages.
             * @param message RoomInfoRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRoomInfoRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoomInfoRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoomInfoRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RoomInfoRsp;

            /**
             * Decodes a RoomInfoRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoomInfoRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RoomInfoRsp;

            /**
             * Verifies a RoomInfoRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoomInfoRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoomInfoRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RoomInfoRsp;

            /**
             * Creates a plain object from a RoomInfoRsp message. Also converts values to other types if specified.
             * @param message RoomInfoRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RoomInfoRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoomInfoRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RoomInfoMsg. */
        interface IRoomInfoMsg {

            /** RoomInfoMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** RoomInfoMsg room */
            room?: (pb.common.IRoomInfo|null);
        }

        /** Represents a RoomInfoMsg. */
        class RoomInfoMsg implements IRoomInfoMsg {

            /**
             * Constructs a new RoomInfoMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRoomInfoMsg);

            /** RoomInfoMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** RoomInfoMsg room. */
            public room?: (pb.common.IRoomInfo|null);

            /**
             * Creates a new RoomInfoMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoomInfoMsg instance
             */
            public static create(properties?: pb.common.IRoomInfoMsg): pb.common.RoomInfoMsg;

            /**
             * Encodes the specified RoomInfoMsg message. Does not implicitly {@link pb.common.RoomInfoMsg.verify|verify} messages.
             * @param message RoomInfoMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRoomInfoMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoomInfoMsg message, length delimited. Does not implicitly {@link pb.common.RoomInfoMsg.verify|verify} messages.
             * @param message RoomInfoMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRoomInfoMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoomInfoMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoomInfoMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RoomInfoMsg;

            /**
             * Decodes a RoomInfoMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoomInfoMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RoomInfoMsg;

            /**
             * Verifies a RoomInfoMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoomInfoMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoomInfoMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RoomInfoMsg;

            /**
             * Creates a plain object from a RoomInfoMsg message. Also converts values to other types if specified.
             * @param message RoomInfoMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RoomInfoMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoomInfoMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CreateRoomReq. */
        interface ICreateRoomReq {

            /** CreateRoomReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** CreateRoomReq size */
            size?: (number|null);

            /** CreateRoomReq matchType */
            matchType?: (pb.common.MatchType|null);

            /** CreateRoomReq isABTester */
            isABTester?: (boolean|null);
        }

        /** Represents a CreateRoomReq. */
        class CreateRoomReq implements ICreateRoomReq {

            /**
             * Constructs a new CreateRoomReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICreateRoomReq);

            /** CreateRoomReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** CreateRoomReq size. */
            public size: number;

            /** CreateRoomReq matchType. */
            public matchType: pb.common.MatchType;

            /** CreateRoomReq isABTester. */
            public isABTester: boolean;

            /**
             * Creates a new CreateRoomReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CreateRoomReq instance
             */
            public static create(properties?: pb.common.ICreateRoomReq): pb.common.CreateRoomReq;

            /**
             * Encodes the specified CreateRoomReq message. Does not implicitly {@link pb.common.CreateRoomReq.verify|verify} messages.
             * @param message CreateRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICreateRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CreateRoomReq message, length delimited. Does not implicitly {@link pb.common.CreateRoomReq.verify|verify} messages.
             * @param message CreateRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICreateRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CreateRoomReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CreateRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CreateRoomReq;

            /**
             * Decodes a CreateRoomReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CreateRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CreateRoomReq;

            /**
             * Verifies a CreateRoomReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CreateRoomReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CreateRoomReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CreateRoomReq;

            /**
             * Creates a plain object from a CreateRoomReq message. Also converts values to other types if specified.
             * @param message CreateRoomReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CreateRoomReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CreateRoomReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CreateRoomRsp. */
        interface ICreateRoomRsp {

            /** CreateRoomRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** CreateRoomRsp room */
            room?: (pb.common.IRoomInfo|null);
        }

        /** Represents a CreateRoomRsp. */
        class CreateRoomRsp implements ICreateRoomRsp {

            /**
             * Constructs a new CreateRoomRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICreateRoomRsp);

            /** CreateRoomRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** CreateRoomRsp room. */
            public room?: (pb.common.IRoomInfo|null);

            /**
             * Creates a new CreateRoomRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CreateRoomRsp instance
             */
            public static create(properties?: pb.common.ICreateRoomRsp): pb.common.CreateRoomRsp;

            /**
             * Encodes the specified CreateRoomRsp message. Does not implicitly {@link pb.common.CreateRoomRsp.verify|verify} messages.
             * @param message CreateRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICreateRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CreateRoomRsp message, length delimited. Does not implicitly {@link pb.common.CreateRoomRsp.verify|verify} messages.
             * @param message CreateRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICreateRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CreateRoomRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CreateRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CreateRoomRsp;

            /**
             * Decodes a CreateRoomRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CreateRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CreateRoomRsp;

            /**
             * Verifies a CreateRoomRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CreateRoomRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CreateRoomRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CreateRoomRsp;

            /**
             * Creates a plain object from a CreateRoomRsp message. Also converts values to other types if specified.
             * @param message CreateRoomRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CreateRoomRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CreateRoomRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetAvailableRoomSizeReq. */
        interface IGetAvailableRoomSizeReq {

            /** GetAvailableRoomSizeReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** GetAvailableRoomSizeReq matchType */
            matchType?: (pb.common.MatchType|null);
        }

        /** Represents a GetAvailableRoomSizeReq. */
        class GetAvailableRoomSizeReq implements IGetAvailableRoomSizeReq {

            /**
             * Constructs a new GetAvailableRoomSizeReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetAvailableRoomSizeReq);

            /** GetAvailableRoomSizeReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** GetAvailableRoomSizeReq matchType. */
            public matchType: pb.common.MatchType;

            /**
             * Creates a new GetAvailableRoomSizeReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetAvailableRoomSizeReq instance
             */
            public static create(properties?: pb.common.IGetAvailableRoomSizeReq): pb.common.GetAvailableRoomSizeReq;

            /**
             * Encodes the specified GetAvailableRoomSizeReq message. Does not implicitly {@link pb.common.GetAvailableRoomSizeReq.verify|verify} messages.
             * @param message GetAvailableRoomSizeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetAvailableRoomSizeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetAvailableRoomSizeReq message, length delimited. Does not implicitly {@link pb.common.GetAvailableRoomSizeReq.verify|verify} messages.
             * @param message GetAvailableRoomSizeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetAvailableRoomSizeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetAvailableRoomSizeReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetAvailableRoomSizeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetAvailableRoomSizeReq;

            /**
             * Decodes a GetAvailableRoomSizeReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetAvailableRoomSizeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetAvailableRoomSizeReq;

            /**
             * Verifies a GetAvailableRoomSizeReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetAvailableRoomSizeReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetAvailableRoomSizeReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetAvailableRoomSizeReq;

            /**
             * Creates a plain object from a GetAvailableRoomSizeReq message. Also converts values to other types if specified.
             * @param message GetAvailableRoomSizeReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetAvailableRoomSizeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetAvailableRoomSizeReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetAvailableRoomSizeRsp. */
        interface IGetAvailableRoomSizeRsp {

            /** GetAvailableRoomSizeRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetAvailableRoomSizeRsp sizes */
            sizes?: (number[]|null);
        }

        /** Represents a GetAvailableRoomSizeRsp. */
        class GetAvailableRoomSizeRsp implements IGetAvailableRoomSizeRsp {

            /**
             * Constructs a new GetAvailableRoomSizeRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetAvailableRoomSizeRsp);

            /** GetAvailableRoomSizeRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetAvailableRoomSizeRsp sizes. */
            public sizes: number[];

            /**
             * Creates a new GetAvailableRoomSizeRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetAvailableRoomSizeRsp instance
             */
            public static create(properties?: pb.common.IGetAvailableRoomSizeRsp): pb.common.GetAvailableRoomSizeRsp;

            /**
             * Encodes the specified GetAvailableRoomSizeRsp message. Does not implicitly {@link pb.common.GetAvailableRoomSizeRsp.verify|verify} messages.
             * @param message GetAvailableRoomSizeRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetAvailableRoomSizeRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetAvailableRoomSizeRsp message, length delimited. Does not implicitly {@link pb.common.GetAvailableRoomSizeRsp.verify|verify} messages.
             * @param message GetAvailableRoomSizeRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetAvailableRoomSizeRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetAvailableRoomSizeRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetAvailableRoomSizeRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetAvailableRoomSizeRsp;

            /**
             * Decodes a GetAvailableRoomSizeRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetAvailableRoomSizeRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetAvailableRoomSizeRsp;

            /**
             * Verifies a GetAvailableRoomSizeRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetAvailableRoomSizeRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetAvailableRoomSizeRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetAvailableRoomSizeRsp;

            /**
             * Creates a plain object from a GetAvailableRoomSizeRsp message. Also converts values to other types if specified.
             * @param message GetAvailableRoomSizeRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetAvailableRoomSizeRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetAvailableRoomSizeRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an InviteReq. */
        interface IInviteReq {

            /** InviteReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** InviteReq roomId */
            roomId?: (string|null);

            /** InviteReq userId */
            userId?: (Long|null);

            /** InviteReq groupId */
            groupId?: (string|null);
        }

        /** Represents an InviteReq. */
        class InviteReq implements IInviteReq {

            /**
             * Constructs a new InviteReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IInviteReq);

            /** InviteReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** InviteReq roomId. */
            public roomId: string;

            /** InviteReq userId. */
            public userId: Long;

            /** InviteReq groupId. */
            public groupId: string;

            /**
             * Creates a new InviteReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns InviteReq instance
             */
            public static create(properties?: pb.common.IInviteReq): pb.common.InviteReq;

            /**
             * Encodes the specified InviteReq message. Does not implicitly {@link pb.common.InviteReq.verify|verify} messages.
             * @param message InviteReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IInviteReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified InviteReq message, length delimited. Does not implicitly {@link pb.common.InviteReq.verify|verify} messages.
             * @param message InviteReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IInviteReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an InviteReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns InviteReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.InviteReq;

            /**
             * Decodes an InviteReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns InviteReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.InviteReq;

            /**
             * Verifies an InviteReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an InviteReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns InviteReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.InviteReq;

            /**
             * Creates a plain object from an InviteReq message. Also converts values to other types if specified.
             * @param message InviteReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.InviteReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this InviteReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an InviteRsp. */
        interface IInviteRsp {

            /** InviteRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents an InviteRsp. */
        class InviteRsp implements IInviteRsp {

            /**
             * Constructs a new InviteRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IInviteRsp);

            /** InviteRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new InviteRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns InviteRsp instance
             */
            public static create(properties?: pb.common.IInviteRsp): pb.common.InviteRsp;

            /**
             * Encodes the specified InviteRsp message. Does not implicitly {@link pb.common.InviteRsp.verify|verify} messages.
             * @param message InviteRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IInviteRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified InviteRsp message, length delimited. Does not implicitly {@link pb.common.InviteRsp.verify|verify} messages.
             * @param message InviteRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IInviteRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an InviteRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns InviteRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.InviteRsp;

            /**
             * Decodes an InviteRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns InviteRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.InviteRsp;

            /**
             * Verifies an InviteRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an InviteRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns InviteRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.InviteRsp;

            /**
             * Creates a plain object from an InviteRsp message. Also converts values to other types if specified.
             * @param message InviteRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.InviteRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this InviteRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an InviteMsg. */
        interface IInviteMsg {

            /** InviteMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** InviteMsg roomId */
            roomId?: (string|null);

            /** InviteMsg invitor */
            invitor?: (pb.common.IPlayerInfo|null);
        }

        /** Represents an InviteMsg. */
        class InviteMsg implements IInviteMsg {

            /**
             * Constructs a new InviteMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IInviteMsg);

            /** InviteMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** InviteMsg roomId. */
            public roomId: string;

            /** InviteMsg invitor. */
            public invitor?: (pb.common.IPlayerInfo|null);

            /**
             * Creates a new InviteMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns InviteMsg instance
             */
            public static create(properties?: pb.common.IInviteMsg): pb.common.InviteMsg;

            /**
             * Encodes the specified InviteMsg message. Does not implicitly {@link pb.common.InviteMsg.verify|verify} messages.
             * @param message InviteMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IInviteMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified InviteMsg message, length delimited. Does not implicitly {@link pb.common.InviteMsg.verify|verify} messages.
             * @param message InviteMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IInviteMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an InviteMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns InviteMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.InviteMsg;

            /**
             * Decodes an InviteMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns InviteMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.InviteMsg;

            /**
             * Verifies an InviteMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an InviteMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns InviteMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.InviteMsg;

            /**
             * Creates a plain object from an InviteMsg message. Also converts values to other types if specified.
             * @param message InviteMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.InviteMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this InviteMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnterRoomReq. */
        interface IEnterRoomReq {

            /** EnterRoomReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** EnterRoomReq roomId */
            roomId?: (string|null);

            /** EnterRoomReq roomNum */
            roomNum?: (number|null);
        }

        /** Represents an EnterRoomReq. */
        class EnterRoomReq implements IEnterRoomReq {

            /**
             * Constructs a new EnterRoomReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IEnterRoomReq);

            /** EnterRoomReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** EnterRoomReq roomId. */
            public roomId: string;

            /** EnterRoomReq roomNum. */
            public roomNum: number;

            /**
             * Creates a new EnterRoomReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EnterRoomReq instance
             */
            public static create(properties?: pb.common.IEnterRoomReq): pb.common.EnterRoomReq;

            /**
             * Encodes the specified EnterRoomReq message. Does not implicitly {@link pb.common.EnterRoomReq.verify|verify} messages.
             * @param message EnterRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IEnterRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnterRoomReq message, length delimited. Does not implicitly {@link pb.common.EnterRoomReq.verify|verify} messages.
             * @param message EnterRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IEnterRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnterRoomReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnterRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.EnterRoomReq;

            /**
             * Decodes an EnterRoomReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnterRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.EnterRoomReq;

            /**
             * Verifies an EnterRoomReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnterRoomReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnterRoomReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.EnterRoomReq;

            /**
             * Creates a plain object from an EnterRoomReq message. Also converts values to other types if specified.
             * @param message EnterRoomReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.EnterRoomReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnterRoomReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnterRoomRsp. */
        interface IEnterRoomRsp {

            /** EnterRoomRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** EnterRoomRsp room */
            room?: (pb.common.IRoomInfo|null);
        }

        /** Represents an EnterRoomRsp. */
        class EnterRoomRsp implements IEnterRoomRsp {

            /**
             * Constructs a new EnterRoomRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IEnterRoomRsp);

            /** EnterRoomRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** EnterRoomRsp room. */
            public room?: (pb.common.IRoomInfo|null);

            /**
             * Creates a new EnterRoomRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EnterRoomRsp instance
             */
            public static create(properties?: pb.common.IEnterRoomRsp): pb.common.EnterRoomRsp;

            /**
             * Encodes the specified EnterRoomRsp message. Does not implicitly {@link pb.common.EnterRoomRsp.verify|verify} messages.
             * @param message EnterRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IEnterRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnterRoomRsp message, length delimited. Does not implicitly {@link pb.common.EnterRoomRsp.verify|verify} messages.
             * @param message EnterRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IEnterRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnterRoomRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnterRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.EnterRoomRsp;

            /**
             * Decodes an EnterRoomRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnterRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.EnterRoomRsp;

            /**
             * Verifies an EnterRoomRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnterRoomRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnterRoomRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.EnterRoomRsp;

            /**
             * Creates a plain object from an EnterRoomRsp message. Also converts values to other types if specified.
             * @param message EnterRoomRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.EnterRoomRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnterRoomRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetPlayerStateReq. */
        interface IGetPlayerStateReq {

            /** GetPlayerStateReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** GetPlayerStateReq userIds */
            userIds?: (Long[]|null);
        }

        /** Represents a GetPlayerStateReq. */
        class GetPlayerStateReq implements IGetPlayerStateReq {

            /**
             * Constructs a new GetPlayerStateReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetPlayerStateReq);

            /** GetPlayerStateReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** GetPlayerStateReq userIds. */
            public userIds: Long[];

            /**
             * Creates a new GetPlayerStateReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerStateReq instance
             */
            public static create(properties?: pb.common.IGetPlayerStateReq): pb.common.GetPlayerStateReq;

            /**
             * Encodes the specified GetPlayerStateReq message. Does not implicitly {@link pb.common.GetPlayerStateReq.verify|verify} messages.
             * @param message GetPlayerStateReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetPlayerStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerStateReq message, length delimited. Does not implicitly {@link pb.common.GetPlayerStateReq.verify|verify} messages.
             * @param message GetPlayerStateReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetPlayerStateReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerStateReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerStateReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetPlayerStateReq;

            /**
             * Decodes a GetPlayerStateReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerStateReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetPlayerStateReq;

            /**
             * Verifies a GetPlayerStateReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerStateReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerStateReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetPlayerStateReq;

            /**
             * Creates a plain object from a GetPlayerStateReq message. Also converts values to other types if specified.
             * @param message GetPlayerStateReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetPlayerStateReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerStateReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetPlayerStateRsp. */
        interface IGetPlayerStateRsp {

            /** GetPlayerStateRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetPlayerStateRsp states */
            states?: ({ [k: string]: pb.common.PlayerState }|null);
        }

        /** Represents a GetPlayerStateRsp. */
        class GetPlayerStateRsp implements IGetPlayerStateRsp {

            /**
             * Constructs a new GetPlayerStateRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetPlayerStateRsp);

            /** GetPlayerStateRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetPlayerStateRsp states. */
            public states: { [k: string]: pb.common.PlayerState };

            /**
             * Creates a new GetPlayerStateRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetPlayerStateRsp instance
             */
            public static create(properties?: pb.common.IGetPlayerStateRsp): pb.common.GetPlayerStateRsp;

            /**
             * Encodes the specified GetPlayerStateRsp message. Does not implicitly {@link pb.common.GetPlayerStateRsp.verify|verify} messages.
             * @param message GetPlayerStateRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetPlayerStateRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetPlayerStateRsp message, length delimited. Does not implicitly {@link pb.common.GetPlayerStateRsp.verify|verify} messages.
             * @param message GetPlayerStateRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetPlayerStateRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetPlayerStateRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetPlayerStateRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetPlayerStateRsp;

            /**
             * Decodes a GetPlayerStateRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetPlayerStateRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetPlayerStateRsp;

            /**
             * Verifies a GetPlayerStateRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetPlayerStateRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetPlayerStateRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetPlayerStateRsp;

            /**
             * Creates a plain object from a GetPlayerStateRsp message. Also converts values to other types if specified.
             * @param message GetPlayerStateRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetPlayerStateRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetPlayerStateRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RemovePlayerFromRoomReq. */
        interface IRemovePlayerFromRoomReq {

            /** RemovePlayerFromRoomReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** RemovePlayerFromRoomReq userId */
            userId?: (Long|null);
        }

        /** Represents a RemovePlayerFromRoomReq. */
        class RemovePlayerFromRoomReq implements IRemovePlayerFromRoomReq {

            /**
             * Constructs a new RemovePlayerFromRoomReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRemovePlayerFromRoomReq);

            /** RemovePlayerFromRoomReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** RemovePlayerFromRoomReq userId. */
            public userId: Long;

            /**
             * Creates a new RemovePlayerFromRoomReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RemovePlayerFromRoomReq instance
             */
            public static create(properties?: pb.common.IRemovePlayerFromRoomReq): pb.common.RemovePlayerFromRoomReq;

            /**
             * Encodes the specified RemovePlayerFromRoomReq message. Does not implicitly {@link pb.common.RemovePlayerFromRoomReq.verify|verify} messages.
             * @param message RemovePlayerFromRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRemovePlayerFromRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RemovePlayerFromRoomReq message, length delimited. Does not implicitly {@link pb.common.RemovePlayerFromRoomReq.verify|verify} messages.
             * @param message RemovePlayerFromRoomReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRemovePlayerFromRoomReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RemovePlayerFromRoomReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RemovePlayerFromRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RemovePlayerFromRoomReq;

            /**
             * Decodes a RemovePlayerFromRoomReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RemovePlayerFromRoomReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RemovePlayerFromRoomReq;

            /**
             * Verifies a RemovePlayerFromRoomReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RemovePlayerFromRoomReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RemovePlayerFromRoomReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RemovePlayerFromRoomReq;

            /**
             * Creates a plain object from a RemovePlayerFromRoomReq message. Also converts values to other types if specified.
             * @param message RemovePlayerFromRoomReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RemovePlayerFromRoomReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RemovePlayerFromRoomReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RemovePlayerFromRoomRsp. */
        interface IRemovePlayerFromRoomRsp {

            /** RemovePlayerFromRoomRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a RemovePlayerFromRoomRsp. */
        class RemovePlayerFromRoomRsp implements IRemovePlayerFromRoomRsp {

            /**
             * Constructs a new RemovePlayerFromRoomRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRemovePlayerFromRoomRsp);

            /** RemovePlayerFromRoomRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new RemovePlayerFromRoomRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RemovePlayerFromRoomRsp instance
             */
            public static create(properties?: pb.common.IRemovePlayerFromRoomRsp): pb.common.RemovePlayerFromRoomRsp;

            /**
             * Encodes the specified RemovePlayerFromRoomRsp message. Does not implicitly {@link pb.common.RemovePlayerFromRoomRsp.verify|verify} messages.
             * @param message RemovePlayerFromRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRemovePlayerFromRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RemovePlayerFromRoomRsp message, length delimited. Does not implicitly {@link pb.common.RemovePlayerFromRoomRsp.verify|verify} messages.
             * @param message RemovePlayerFromRoomRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRemovePlayerFromRoomRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RemovePlayerFromRoomRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RemovePlayerFromRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RemovePlayerFromRoomRsp;

            /**
             * Decodes a RemovePlayerFromRoomRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RemovePlayerFromRoomRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RemovePlayerFromRoomRsp;

            /**
             * Verifies a RemovePlayerFromRoomRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RemovePlayerFromRoomRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RemovePlayerFromRoomRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RemovePlayerFromRoomRsp;

            /**
             * Creates a plain object from a RemovePlayerFromRoomRsp message. Also converts values to other types if specified.
             * @param message RemovePlayerFromRoomRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RemovePlayerFromRoomRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RemovePlayerFromRoomRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a RemovePlayerFromRoomMsg. */
        interface IRemovePlayerFromRoomMsg {

            /** RemovePlayerFromRoomMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** RemovePlayerFromRoomMsg userId */
            userId?: (Long|null);

            /** RemovePlayerFromRoomMsg removedBy */
            removedBy?: (pb.common.IPlayerInfo|null);
        }

        /** Represents a RemovePlayerFromRoomMsg. */
        class RemovePlayerFromRoomMsg implements IRemovePlayerFromRoomMsg {

            /**
             * Constructs a new RemovePlayerFromRoomMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRemovePlayerFromRoomMsg);

            /** RemovePlayerFromRoomMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** RemovePlayerFromRoomMsg userId. */
            public userId: Long;

            /** RemovePlayerFromRoomMsg removedBy. */
            public removedBy?: (pb.common.IPlayerInfo|null);

            /**
             * Creates a new RemovePlayerFromRoomMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RemovePlayerFromRoomMsg instance
             */
            public static create(properties?: pb.common.IRemovePlayerFromRoomMsg): pb.common.RemovePlayerFromRoomMsg;

            /**
             * Encodes the specified RemovePlayerFromRoomMsg message. Does not implicitly {@link pb.common.RemovePlayerFromRoomMsg.verify|verify} messages.
             * @param message RemovePlayerFromRoomMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRemovePlayerFromRoomMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RemovePlayerFromRoomMsg message, length delimited. Does not implicitly {@link pb.common.RemovePlayerFromRoomMsg.verify|verify} messages.
             * @param message RemovePlayerFromRoomMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRemovePlayerFromRoomMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RemovePlayerFromRoomMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RemovePlayerFromRoomMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RemovePlayerFromRoomMsg;

            /**
             * Decodes a RemovePlayerFromRoomMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RemovePlayerFromRoomMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RemovePlayerFromRoomMsg;

            /**
             * Verifies a RemovePlayerFromRoomMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RemovePlayerFromRoomMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RemovePlayerFromRoomMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RemovePlayerFromRoomMsg;

            /**
             * Creates a plain object from a RemovePlayerFromRoomMsg message. Also converts values to other types if specified.
             * @param message RemovePlayerFromRoomMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RemovePlayerFromRoomMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RemovePlayerFromRoomMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerAFKReq. */
        interface IPlayerAFKReq {

            /** PlayerAFKReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a PlayerAFKReq. */
        class PlayerAFKReq implements IPlayerAFKReq {

            /**
             * Constructs a new PlayerAFKReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerAFKReq);

            /** PlayerAFKReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new PlayerAFKReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerAFKReq instance
             */
            public static create(properties?: pb.common.IPlayerAFKReq): pb.common.PlayerAFKReq;

            /**
             * Encodes the specified PlayerAFKReq message. Does not implicitly {@link pb.common.PlayerAFKReq.verify|verify} messages.
             * @param message PlayerAFKReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerAFKReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerAFKReq message, length delimited. Does not implicitly {@link pb.common.PlayerAFKReq.verify|verify} messages.
             * @param message PlayerAFKReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerAFKReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerAFKReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerAFKReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerAFKReq;

            /**
             * Decodes a PlayerAFKReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerAFKReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerAFKReq;

            /**
             * Verifies a PlayerAFKReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerAFKReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerAFKReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerAFKReq;

            /**
             * Creates a plain object from a PlayerAFKReq message. Also converts values to other types if specified.
             * @param message PlayerAFKReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerAFKReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerAFKReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerAFKRsp. */
        interface IPlayerAFKRsp {

            /** PlayerAFKRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a PlayerAFKRsp. */
        class PlayerAFKRsp implements IPlayerAFKRsp {

            /**
             * Constructs a new PlayerAFKRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerAFKRsp);

            /** PlayerAFKRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new PlayerAFKRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerAFKRsp instance
             */
            public static create(properties?: pb.common.IPlayerAFKRsp): pb.common.PlayerAFKRsp;

            /**
             * Encodes the specified PlayerAFKRsp message. Does not implicitly {@link pb.common.PlayerAFKRsp.verify|verify} messages.
             * @param message PlayerAFKRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerAFKRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerAFKRsp message, length delimited. Does not implicitly {@link pb.common.PlayerAFKRsp.verify|verify} messages.
             * @param message PlayerAFKRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerAFKRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerAFKRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerAFKRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerAFKRsp;

            /**
             * Decodes a PlayerAFKRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerAFKRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerAFKRsp;

            /**
             * Verifies a PlayerAFKRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerAFKRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerAFKRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerAFKRsp;

            /**
             * Creates a plain object from a PlayerAFKRsp message. Also converts values to other types if specified.
             * @param message PlayerAFKRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerAFKRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerAFKRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerAFKMsg. */
        interface IPlayerAFKMsg {

            /** PlayerAFKMsg UserID */
            UserID?: (Long|null);
        }

        /** Represents a PlayerAFKMsg. */
        class PlayerAFKMsg implements IPlayerAFKMsg {

            /**
             * Constructs a new PlayerAFKMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerAFKMsg);

            /** PlayerAFKMsg UserID. */
            public UserID: Long;

            /**
             * Creates a new PlayerAFKMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerAFKMsg instance
             */
            public static create(properties?: pb.common.IPlayerAFKMsg): pb.common.PlayerAFKMsg;

            /**
             * Encodes the specified PlayerAFKMsg message. Does not implicitly {@link pb.common.PlayerAFKMsg.verify|verify} messages.
             * @param message PlayerAFKMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerAFKMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerAFKMsg message, length delimited. Does not implicitly {@link pb.common.PlayerAFKMsg.verify|verify} messages.
             * @param message PlayerAFKMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerAFKMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerAFKMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerAFKMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerAFKMsg;

            /**
             * Decodes a PlayerAFKMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerAFKMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerAFKMsg;

            /**
             * Verifies a PlayerAFKMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerAFKMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerAFKMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerAFKMsg;

            /**
             * Creates a plain object from a PlayerAFKMsg message. Also converts values to other types if specified.
             * @param message PlayerAFKMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerAFKMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerAFKMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerReConnectReq. */
        interface IPlayerReConnectReq {

            /** PlayerReConnectReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a PlayerReConnectReq. */
        class PlayerReConnectReq implements IPlayerReConnectReq {

            /**
             * Constructs a new PlayerReConnectReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerReConnectReq);

            /** PlayerReConnectReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new PlayerReConnectReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerReConnectReq instance
             */
            public static create(properties?: pb.common.IPlayerReConnectReq): pb.common.PlayerReConnectReq;

            /**
             * Encodes the specified PlayerReConnectReq message. Does not implicitly {@link pb.common.PlayerReConnectReq.verify|verify} messages.
             * @param message PlayerReConnectReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerReConnectReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerReConnectReq message, length delimited. Does not implicitly {@link pb.common.PlayerReConnectReq.verify|verify} messages.
             * @param message PlayerReConnectReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerReConnectReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerReConnectReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerReConnectReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerReConnectReq;

            /**
             * Decodes a PlayerReConnectReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerReConnectReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerReConnectReq;

            /**
             * Verifies a PlayerReConnectReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerReConnectReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerReConnectReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerReConnectReq;

            /**
             * Creates a plain object from a PlayerReConnectReq message. Also converts values to other types if specified.
             * @param message PlayerReConnectReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerReConnectReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerReConnectReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerReconnectRsp. */
        interface IPlayerReconnectRsp {

            /** PlayerReconnectRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a PlayerReconnectRsp. */
        class PlayerReconnectRsp implements IPlayerReconnectRsp {

            /**
             * Constructs a new PlayerReconnectRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerReconnectRsp);

            /** PlayerReconnectRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new PlayerReconnectRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerReconnectRsp instance
             */
            public static create(properties?: pb.common.IPlayerReconnectRsp): pb.common.PlayerReconnectRsp;

            /**
             * Encodes the specified PlayerReconnectRsp message. Does not implicitly {@link pb.common.PlayerReconnectRsp.verify|verify} messages.
             * @param message PlayerReconnectRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerReconnectRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerReconnectRsp message, length delimited. Does not implicitly {@link pb.common.PlayerReconnectRsp.verify|verify} messages.
             * @param message PlayerReconnectRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerReconnectRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerReconnectRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerReconnectRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerReconnectRsp;

            /**
             * Decodes a PlayerReconnectRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerReconnectRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerReconnectRsp;

            /**
             * Verifies a PlayerReconnectRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerReconnectRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerReconnectRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerReconnectRsp;

            /**
             * Creates a plain object from a PlayerReconnectRsp message. Also converts values to other types if specified.
             * @param message PlayerReconnectRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerReconnectRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerReconnectRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerReconnectMsg. */
        interface IPlayerReconnectMsg {

            /** PlayerReconnectMsg userID */
            userID?: (Long|null);
        }

        /** Represents a PlayerReconnectMsg. */
        class PlayerReconnectMsg implements IPlayerReconnectMsg {

            /**
             * Constructs a new PlayerReconnectMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerReconnectMsg);

            /** PlayerReconnectMsg userID. */
            public userID: Long;

            /**
             * Creates a new PlayerReconnectMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerReconnectMsg instance
             */
            public static create(properties?: pb.common.IPlayerReconnectMsg): pb.common.PlayerReconnectMsg;

            /**
             * Encodes the specified PlayerReconnectMsg message. Does not implicitly {@link pb.common.PlayerReconnectMsg.verify|verify} messages.
             * @param message PlayerReconnectMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerReconnectMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerReconnectMsg message, length delimited. Does not implicitly {@link pb.common.PlayerReconnectMsg.verify|verify} messages.
             * @param message PlayerReconnectMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerReconnectMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerReconnectMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerReconnectMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerReconnectMsg;

            /**
             * Decodes a PlayerReconnectMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerReconnectMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerReconnectMsg;

            /**
             * Verifies a PlayerReconnectMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerReconnectMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerReconnectMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerReconnectMsg;

            /**
             * Creates a plain object from a PlayerReconnectMsg message. Also converts values to other types if specified.
             * @param message PlayerReconnectMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerReconnectMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerReconnectMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellAssetsReq. */
        interface ISellAssetsReq {

            /** SellAssetsReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** SellAssetsReq items */
            items?: (pb.common.SellAssetsReq.Iitem[]|null);
        }

        /** Represents a SellAssetsReq. */
        class SellAssetsReq implements ISellAssetsReq {

            /**
             * Constructs a new SellAssetsReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellAssetsReq);

            /** SellAssetsReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** SellAssetsReq items. */
            public items: pb.common.SellAssetsReq.Iitem[];

            /**
             * Creates a new SellAssetsReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellAssetsReq instance
             */
            public static create(properties?: pb.common.ISellAssetsReq): pb.common.SellAssetsReq;

            /**
             * Encodes the specified SellAssetsReq message. Does not implicitly {@link pb.common.SellAssetsReq.verify|verify} messages.
             * @param message SellAssetsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellAssetsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellAssetsReq message, length delimited. Does not implicitly {@link pb.common.SellAssetsReq.verify|verify} messages.
             * @param message SellAssetsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellAssetsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellAssetsReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellAssetsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellAssetsReq;

            /**
             * Decodes a SellAssetsReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellAssetsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellAssetsReq;

            /**
             * Verifies a SellAssetsReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellAssetsReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellAssetsReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellAssetsReq;

            /**
             * Creates a plain object from a SellAssetsReq message. Also converts values to other types if specified.
             * @param message SellAssetsReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellAssetsReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellAssetsReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace SellAssetsReq {

            /** Properties of an item. */
            interface Iitem {

                /** item assetID */
                assetID?: (Long|null);

                /** item quantity */
                quantity?: (number|null);
            }

            /** Represents an item. */
            class item implements Iitem {

                /**
                 * Constructs a new item.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.SellAssetsReq.Iitem);

                /** item assetID. */
                public assetID: Long;

                /** item quantity. */
                public quantity: number;

                /**
                 * Creates a new item instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns item instance
                 */
                public static create(properties?: pb.common.SellAssetsReq.Iitem): pb.common.SellAssetsReq.item;

                /**
                 * Encodes the specified item message. Does not implicitly {@link pb.common.SellAssetsReq.item.verify|verify} messages.
                 * @param message item message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.SellAssetsReq.Iitem, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified item message, length delimited. Does not implicitly {@link pb.common.SellAssetsReq.item.verify|verify} messages.
                 * @param message item message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.SellAssetsReq.Iitem, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an item message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns item
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellAssetsReq.item;

                /**
                 * Decodes an item message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns item
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellAssetsReq.item;

                /**
                 * Verifies an item message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an item message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns item
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.SellAssetsReq.item;

                /**
                 * Creates a plain object from an item message. Also converts values to other types if specified.
                 * @param message item
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.SellAssetsReq.item, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this item to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SellAssetsRsp. */
        interface ISellAssetsRsp {

            /** SellAssetsRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a SellAssetsRsp. */
        class SellAssetsRsp implements ISellAssetsRsp {

            /**
             * Constructs a new SellAssetsRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellAssetsRsp);

            /** SellAssetsRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new SellAssetsRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellAssetsRsp instance
             */
            public static create(properties?: pb.common.ISellAssetsRsp): pb.common.SellAssetsRsp;

            /**
             * Encodes the specified SellAssetsRsp message. Does not implicitly {@link pb.common.SellAssetsRsp.verify|verify} messages.
             * @param message SellAssetsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellAssetsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellAssetsRsp message, length delimited. Does not implicitly {@link pb.common.SellAssetsRsp.verify|verify} messages.
             * @param message SellAssetsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellAssetsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellAssetsRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellAssetsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellAssetsRsp;

            /**
             * Decodes a SellAssetsRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellAssetsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellAssetsRsp;

            /**
             * Verifies a SellAssetsRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellAssetsRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellAssetsRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellAssetsRsp;

            /**
             * Creates a plain object from a SellAssetsRsp message. Also converts values to other types if specified.
             * @param message SellAssetsRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellAssetsRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellAssetsRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a SellAssetsMsg. */
        interface ISellAssetsMsg {

            /** SellAssetsMsg base */
            base?: (pb.common.IGameBaseMsg|null);

            /** SellAssetsMsg assets */
            assets?: (pb.common.IPlayerAsset[]|null);
        }

        /** Represents a SellAssetsMsg. */
        class SellAssetsMsg implements ISellAssetsMsg {

            /**
             * Constructs a new SellAssetsMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ISellAssetsMsg);

            /** SellAssetsMsg base. */
            public base?: (pb.common.IGameBaseMsg|null);

            /** SellAssetsMsg assets. */
            public assets: pb.common.IPlayerAsset[];

            /**
             * Creates a new SellAssetsMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SellAssetsMsg instance
             */
            public static create(properties?: pb.common.ISellAssetsMsg): pb.common.SellAssetsMsg;

            /**
             * Encodes the specified SellAssetsMsg message. Does not implicitly {@link pb.common.SellAssetsMsg.verify|verify} messages.
             * @param message SellAssetsMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ISellAssetsMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SellAssetsMsg message, length delimited. Does not implicitly {@link pb.common.SellAssetsMsg.verify|verify} messages.
             * @param message SellAssetsMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ISellAssetsMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SellAssetsMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SellAssetsMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.SellAssetsMsg;

            /**
             * Decodes a SellAssetsMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SellAssetsMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.SellAssetsMsg;

            /**
             * Verifies a SellAssetsMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SellAssetsMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SellAssetsMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.SellAssetsMsg;

            /**
             * Creates a plain object from a SellAssetsMsg message. Also converts values to other types if specified.
             * @param message SellAssetsMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.SellAssetsMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SellAssetsMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConfirmBankruptReq. */
        interface IConfirmBankruptReq {

            /** ConfirmBankruptReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a ConfirmBankruptReq. */
        class ConfirmBankruptReq implements IConfirmBankruptReq {

            /**
             * Constructs a new ConfirmBankruptReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IConfirmBankruptReq);

            /** ConfirmBankruptReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new ConfirmBankruptReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ConfirmBankruptReq instance
             */
            public static create(properties?: pb.common.IConfirmBankruptReq): pb.common.ConfirmBankruptReq;

            /**
             * Encodes the specified ConfirmBankruptReq message. Does not implicitly {@link pb.common.ConfirmBankruptReq.verify|verify} messages.
             * @param message ConfirmBankruptReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IConfirmBankruptReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConfirmBankruptReq message, length delimited. Does not implicitly {@link pb.common.ConfirmBankruptReq.verify|verify} messages.
             * @param message ConfirmBankruptReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IConfirmBankruptReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConfirmBankruptReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConfirmBankruptReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ConfirmBankruptReq;

            /**
             * Decodes a ConfirmBankruptReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConfirmBankruptReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ConfirmBankruptReq;

            /**
             * Verifies a ConfirmBankruptReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConfirmBankruptReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConfirmBankruptReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ConfirmBankruptReq;

            /**
             * Creates a plain object from a ConfirmBankruptReq message. Also converts values to other types if specified.
             * @param message ConfirmBankruptReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ConfirmBankruptReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConfirmBankruptReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConfirmBankruptRsp. */
        interface IConfirmBankruptRsp {

            /** ConfirmBankruptRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a ConfirmBankruptRsp. */
        class ConfirmBankruptRsp implements IConfirmBankruptRsp {

            /**
             * Constructs a new ConfirmBankruptRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IConfirmBankruptRsp);

            /** ConfirmBankruptRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new ConfirmBankruptRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ConfirmBankruptRsp instance
             */
            public static create(properties?: pb.common.IConfirmBankruptRsp): pb.common.ConfirmBankruptRsp;

            /**
             * Encodes the specified ConfirmBankruptRsp message. Does not implicitly {@link pb.common.ConfirmBankruptRsp.verify|verify} messages.
             * @param message ConfirmBankruptRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IConfirmBankruptRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConfirmBankruptRsp message, length delimited. Does not implicitly {@link pb.common.ConfirmBankruptRsp.verify|verify} messages.
             * @param message ConfirmBankruptRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IConfirmBankruptRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConfirmBankruptRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConfirmBankruptRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ConfirmBankruptRsp;

            /**
             * Decodes a ConfirmBankruptRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConfirmBankruptRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ConfirmBankruptRsp;

            /**
             * Verifies a ConfirmBankruptRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConfirmBankruptRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConfirmBankruptRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ConfirmBankruptRsp;

            /**
             * Creates a plain object from a ConfirmBankruptRsp message. Also converts values to other types if specified.
             * @param message ConfirmBankruptRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ConfirmBankruptRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConfirmBankruptRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConfirmMarketChangeReq. */
        interface IConfirmMarketChangeReq {

            /** ConfirmMarketChangeReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a ConfirmMarketChangeReq. */
        class ConfirmMarketChangeReq implements IConfirmMarketChangeReq {

            /**
             * Constructs a new ConfirmMarketChangeReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IConfirmMarketChangeReq);

            /** ConfirmMarketChangeReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new ConfirmMarketChangeReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ConfirmMarketChangeReq instance
             */
            public static create(properties?: pb.common.IConfirmMarketChangeReq): pb.common.ConfirmMarketChangeReq;

            /**
             * Encodes the specified ConfirmMarketChangeReq message. Does not implicitly {@link pb.common.ConfirmMarketChangeReq.verify|verify} messages.
             * @param message ConfirmMarketChangeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IConfirmMarketChangeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConfirmMarketChangeReq message, length delimited. Does not implicitly {@link pb.common.ConfirmMarketChangeReq.verify|verify} messages.
             * @param message ConfirmMarketChangeReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IConfirmMarketChangeReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConfirmMarketChangeReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConfirmMarketChangeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ConfirmMarketChangeReq;

            /**
             * Decodes a ConfirmMarketChangeReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConfirmMarketChangeReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ConfirmMarketChangeReq;

            /**
             * Verifies a ConfirmMarketChangeReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConfirmMarketChangeReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConfirmMarketChangeReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ConfirmMarketChangeReq;

            /**
             * Creates a plain object from a ConfirmMarketChangeReq message. Also converts values to other types if specified.
             * @param message ConfirmMarketChangeReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ConfirmMarketChangeReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConfirmMarketChangeReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ConfirmMarketChangeRsp. */
        interface IConfirmMarketChangeRsp {

            /** ConfirmMarketChangeRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a ConfirmMarketChangeRsp. */
        class ConfirmMarketChangeRsp implements IConfirmMarketChangeRsp {

            /**
             * Constructs a new ConfirmMarketChangeRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IConfirmMarketChangeRsp);

            /** ConfirmMarketChangeRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new ConfirmMarketChangeRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ConfirmMarketChangeRsp instance
             */
            public static create(properties?: pb.common.IConfirmMarketChangeRsp): pb.common.ConfirmMarketChangeRsp;

            /**
             * Encodes the specified ConfirmMarketChangeRsp message. Does not implicitly {@link pb.common.ConfirmMarketChangeRsp.verify|verify} messages.
             * @param message ConfirmMarketChangeRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IConfirmMarketChangeRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ConfirmMarketChangeRsp message, length delimited. Does not implicitly {@link pb.common.ConfirmMarketChangeRsp.verify|verify} messages.
             * @param message ConfirmMarketChangeRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IConfirmMarketChangeRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ConfirmMarketChangeRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConfirmMarketChangeRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.ConfirmMarketChangeRsp;

            /**
             * Decodes a ConfirmMarketChangeRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ConfirmMarketChangeRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.ConfirmMarketChangeRsp;

            /**
             * Verifies a ConfirmMarketChangeRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ConfirmMarketChangeRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ConfirmMarketChangeRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.ConfirmMarketChangeRsp;

            /**
             * Creates a plain object from a ConfirmMarketChangeRsp message. Also converts values to other types if specified.
             * @param message ConfirmMarketChangeRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.ConfirmMarketChangeRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ConfirmMarketChangeRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DishonorablePunishReason. */
        interface IDishonorablePunishReason {
        }

        /** Represents a DishonorablePunishReason. */
        class DishonorablePunishReason implements IDishonorablePunishReason {

            /**
             * Constructs a new DishonorablePunishReason.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IDishonorablePunishReason);

            /**
             * Creates a new DishonorablePunishReason instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DishonorablePunishReason instance
             */
            public static create(properties?: pb.common.IDishonorablePunishReason): pb.common.DishonorablePunishReason;

            /**
             * Encodes the specified DishonorablePunishReason message. Does not implicitly {@link pb.common.DishonorablePunishReason.verify|verify} messages.
             * @param message DishonorablePunishReason message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IDishonorablePunishReason, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DishonorablePunishReason message, length delimited. Does not implicitly {@link pb.common.DishonorablePunishReason.verify|verify} messages.
             * @param message DishonorablePunishReason message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IDishonorablePunishReason, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DishonorablePunishReason message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DishonorablePunishReason
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.DishonorablePunishReason;

            /**
             * Decodes a DishonorablePunishReason message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DishonorablePunishReason
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.DishonorablePunishReason;

            /**
             * Verifies a DishonorablePunishReason message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DishonorablePunishReason message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DishonorablePunishReason
             */
            public static fromObject(object: { [k: string]: any }): pb.common.DishonorablePunishReason;

            /**
             * Creates a plain object from a DishonorablePunishReason message. Also converts values to other types if specified.
             * @param message DishonorablePunishReason
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.DishonorablePunishReason, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DishonorablePunishReason to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace DishonorablePunishReason {

            /** Enum enum. */
            enum Enum {
                Unknown = 0,
                LazyOpt = 1,
                TerribleNetwork = 2
            }
        }

        /** Properties of a DishonorLazyOpt. */
        interface IDishonorLazyOpt {

            /** DishonorLazyOpt cnt */
            cnt?: (number|null);

            /** DishonorLazyOpt tolerance */
            tolerance?: (number|null);
        }

        /** Represents a DishonorLazyOpt. */
        class DishonorLazyOpt implements IDishonorLazyOpt {

            /**
             * Constructs a new DishonorLazyOpt.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IDishonorLazyOpt);

            /** DishonorLazyOpt cnt. */
            public cnt: number;

            /** DishonorLazyOpt tolerance. */
            public tolerance: number;

            /**
             * Creates a new DishonorLazyOpt instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DishonorLazyOpt instance
             */
            public static create(properties?: pb.common.IDishonorLazyOpt): pb.common.DishonorLazyOpt;

            /**
             * Encodes the specified DishonorLazyOpt message. Does not implicitly {@link pb.common.DishonorLazyOpt.verify|verify} messages.
             * @param message DishonorLazyOpt message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IDishonorLazyOpt, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DishonorLazyOpt message, length delimited. Does not implicitly {@link pb.common.DishonorLazyOpt.verify|verify} messages.
             * @param message DishonorLazyOpt message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IDishonorLazyOpt, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DishonorLazyOpt message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DishonorLazyOpt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.DishonorLazyOpt;

            /**
             * Decodes a DishonorLazyOpt message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DishonorLazyOpt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.DishonorLazyOpt;

            /**
             * Verifies a DishonorLazyOpt message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DishonorLazyOpt message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DishonorLazyOpt
             */
            public static fromObject(object: { [k: string]: any }): pb.common.DishonorLazyOpt;

            /**
             * Creates a plain object from a DishonorLazyOpt message. Also converts values to other types if specified.
             * @param message DishonorLazyOpt
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.DishonorLazyOpt, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DishonorLazyOpt to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DishonorablePunishMsg. */
        interface IDishonorablePunishMsg {

            /** DishonorablePunishMsg userID */
            userID?: (Long|null);

            /** DishonorablePunishMsg reason */
            reason?: (pb.common.DishonorablePunishReason.Enum|null);

            /** DishonorablePunishMsg detail */
            detail?: (google.protobuf.IAny|null);
        }

        /** Represents a DishonorablePunishMsg. */
        class DishonorablePunishMsg implements IDishonorablePunishMsg {

            /**
             * Constructs a new DishonorablePunishMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IDishonorablePunishMsg);

            /** DishonorablePunishMsg userID. */
            public userID: Long;

            /** DishonorablePunishMsg reason. */
            public reason: pb.common.DishonorablePunishReason.Enum;

            /** DishonorablePunishMsg detail. */
            public detail?: (google.protobuf.IAny|null);

            /**
             * Creates a new DishonorablePunishMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DishonorablePunishMsg instance
             */
            public static create(properties?: pb.common.IDishonorablePunishMsg): pb.common.DishonorablePunishMsg;

            /**
             * Encodes the specified DishonorablePunishMsg message. Does not implicitly {@link pb.common.DishonorablePunishMsg.verify|verify} messages.
             * @param message DishonorablePunishMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IDishonorablePunishMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DishonorablePunishMsg message, length delimited. Does not implicitly {@link pb.common.DishonorablePunishMsg.verify|verify} messages.
             * @param message DishonorablePunishMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IDishonorablePunishMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DishonorablePunishMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DishonorablePunishMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.DishonorablePunishMsg;

            /**
             * Decodes a DishonorablePunishMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DishonorablePunishMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.DishonorablePunishMsg;

            /**
             * Verifies a DishonorablePunishMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DishonorablePunishMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DishonorablePunishMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.common.DishonorablePunishMsg;

            /**
             * Creates a plain object from a DishonorablePunishMsg message. Also converts values to other types if specified.
             * @param message DishonorablePunishMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.DishonorablePunishMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DishonorablePunishMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpdateRoomChoicesReq. */
        interface IUpdateRoomChoicesReq {

            /** UpdateRoomChoicesReq req */
            req?: (pb.common.IAssetBaseReq|null);

            /** UpdateRoomChoicesReq roomID */
            roomID?: (string|null);

            /** UpdateRoomChoicesReq opt */
            opt?: (pb.common.IRoomOption|null);
        }

        /** Represents an UpdateRoomChoicesReq. */
        class UpdateRoomChoicesReq implements IUpdateRoomChoicesReq {

            /**
             * Constructs a new UpdateRoomChoicesReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IUpdateRoomChoicesReq);

            /** UpdateRoomChoicesReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /** UpdateRoomChoicesReq roomID. */
            public roomID: string;

            /** UpdateRoomChoicesReq opt. */
            public opt?: (pb.common.IRoomOption|null);

            /**
             * Creates a new UpdateRoomChoicesReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UpdateRoomChoicesReq instance
             */
            public static create(properties?: pb.common.IUpdateRoomChoicesReq): pb.common.UpdateRoomChoicesReq;

            /**
             * Encodes the specified UpdateRoomChoicesReq message. Does not implicitly {@link pb.common.UpdateRoomChoicesReq.verify|verify} messages.
             * @param message UpdateRoomChoicesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IUpdateRoomChoicesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpdateRoomChoicesReq message, length delimited. Does not implicitly {@link pb.common.UpdateRoomChoicesReq.verify|verify} messages.
             * @param message UpdateRoomChoicesReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IUpdateRoomChoicesReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpdateRoomChoicesReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpdateRoomChoicesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.UpdateRoomChoicesReq;

            /**
             * Decodes an UpdateRoomChoicesReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpdateRoomChoicesReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.UpdateRoomChoicesReq;

            /**
             * Verifies an UpdateRoomChoicesReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpdateRoomChoicesReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpdateRoomChoicesReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.UpdateRoomChoicesReq;

            /**
             * Creates a plain object from an UpdateRoomChoicesReq message. Also converts values to other types if specified.
             * @param message UpdateRoomChoicesReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.UpdateRoomChoicesReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpdateRoomChoicesReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UpdateRoomChoicesRsp. */
        interface IUpdateRoomChoicesRsp {

            /** UpdateRoomChoicesRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** UpdateRoomChoicesRsp roomID */
            roomID?: (string|null);

            /** UpdateRoomChoicesRsp opt */
            opt?: (pb.common.IRoomOption|null);
        }

        /** Represents an UpdateRoomChoicesRsp. */
        class UpdateRoomChoicesRsp implements IUpdateRoomChoicesRsp {

            /**
             * Constructs a new UpdateRoomChoicesRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IUpdateRoomChoicesRsp);

            /** UpdateRoomChoicesRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** UpdateRoomChoicesRsp roomID. */
            public roomID: string;

            /** UpdateRoomChoicesRsp opt. */
            public opt?: (pb.common.IRoomOption|null);

            /**
             * Creates a new UpdateRoomChoicesRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UpdateRoomChoicesRsp instance
             */
            public static create(properties?: pb.common.IUpdateRoomChoicesRsp): pb.common.UpdateRoomChoicesRsp;

            /**
             * Encodes the specified UpdateRoomChoicesRsp message. Does not implicitly {@link pb.common.UpdateRoomChoicesRsp.verify|verify} messages.
             * @param message UpdateRoomChoicesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IUpdateRoomChoicesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UpdateRoomChoicesRsp message, length delimited. Does not implicitly {@link pb.common.UpdateRoomChoicesRsp.verify|verify} messages.
             * @param message UpdateRoomChoicesRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IUpdateRoomChoicesRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UpdateRoomChoicesRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UpdateRoomChoicesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.UpdateRoomChoicesRsp;

            /**
             * Decodes an UpdateRoomChoicesRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UpdateRoomChoicesRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.UpdateRoomChoicesRsp;

            /**
             * Verifies an UpdateRoomChoicesRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UpdateRoomChoicesRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UpdateRoomChoicesRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.UpdateRoomChoicesRsp;

            /**
             * Creates a plain object from an UpdateRoomChoicesRsp message. Also converts values to other types if specified.
             * @param message UpdateRoomChoicesRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.UpdateRoomChoicesRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UpdateRoomChoicesRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetUniqueScenarioImgNameReq. */
        interface IGetUniqueScenarioImgNameReq {

            /** GetUniqueScenarioImgNameReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetUniqueScenarioImgNameReq. */
        class GetUniqueScenarioImgNameReq implements IGetUniqueScenarioImgNameReq {

            /**
             * Constructs a new GetUniqueScenarioImgNameReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetUniqueScenarioImgNameReq);

            /** GetUniqueScenarioImgNameReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetUniqueScenarioImgNameReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetUniqueScenarioImgNameReq instance
             */
            public static create(properties?: pb.common.IGetUniqueScenarioImgNameReq): pb.common.GetUniqueScenarioImgNameReq;

            /**
             * Encodes the specified GetUniqueScenarioImgNameReq message. Does not implicitly {@link pb.common.GetUniqueScenarioImgNameReq.verify|verify} messages.
             * @param message GetUniqueScenarioImgNameReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetUniqueScenarioImgNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetUniqueScenarioImgNameReq message, length delimited. Does not implicitly {@link pb.common.GetUniqueScenarioImgNameReq.verify|verify} messages.
             * @param message GetUniqueScenarioImgNameReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetUniqueScenarioImgNameReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetUniqueScenarioImgNameReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetUniqueScenarioImgNameReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetUniqueScenarioImgNameReq;

            /**
             * Decodes a GetUniqueScenarioImgNameReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetUniqueScenarioImgNameReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetUniqueScenarioImgNameReq;

            /**
             * Verifies a GetUniqueScenarioImgNameReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetUniqueScenarioImgNameReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetUniqueScenarioImgNameReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetUniqueScenarioImgNameReq;

            /**
             * Creates a plain object from a GetUniqueScenarioImgNameReq message. Also converts values to other types if specified.
             * @param message GetUniqueScenarioImgNameReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetUniqueScenarioImgNameReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetUniqueScenarioImgNameReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetUniqueScenarioImgNameRsp. */
        interface IGetUniqueScenarioImgNameRsp {

            /** GetUniqueScenarioImgNameRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetUniqueScenarioImgNameRsp imgFiles */
            imgFiles?: (string[]|null);
        }

        /** Represents a GetUniqueScenarioImgNameRsp. */
        class GetUniqueScenarioImgNameRsp implements IGetUniqueScenarioImgNameRsp {

            /**
             * Constructs a new GetUniqueScenarioImgNameRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetUniqueScenarioImgNameRsp);

            /** GetUniqueScenarioImgNameRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetUniqueScenarioImgNameRsp imgFiles. */
            public imgFiles: string[];

            /**
             * Creates a new GetUniqueScenarioImgNameRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetUniqueScenarioImgNameRsp instance
             */
            public static create(properties?: pb.common.IGetUniqueScenarioImgNameRsp): pb.common.GetUniqueScenarioImgNameRsp;

            /**
             * Encodes the specified GetUniqueScenarioImgNameRsp message. Does not implicitly {@link pb.common.GetUniqueScenarioImgNameRsp.verify|verify} messages.
             * @param message GetUniqueScenarioImgNameRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetUniqueScenarioImgNameRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetUniqueScenarioImgNameRsp message, length delimited. Does not implicitly {@link pb.common.GetUniqueScenarioImgNameRsp.verify|verify} messages.
             * @param message GetUniqueScenarioImgNameRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetUniqueScenarioImgNameRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetUniqueScenarioImgNameRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetUniqueScenarioImgNameRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetUniqueScenarioImgNameRsp;

            /**
             * Decodes a GetUniqueScenarioImgNameRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetUniqueScenarioImgNameRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetUniqueScenarioImgNameRsp;

            /**
             * Verifies a GetUniqueScenarioImgNameRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetUniqueScenarioImgNameRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetUniqueScenarioImgNameRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetUniqueScenarioImgNameRsp;

            /**
             * Creates a plain object from a GetUniqueScenarioImgNameRsp message. Also converts values to other types if specified.
             * @param message GetUniqueScenarioImgNameRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetUniqueScenarioImgNameRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetUniqueScenarioImgNameRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetAvailableMapsReq. */
        interface IGetAvailableMapsReq {

            /** GetAvailableMapsReq req */
            req?: (pb.common.IAssetBaseReq|null);
        }

        /** Represents a GetAvailableMapsReq. */
        class GetAvailableMapsReq implements IGetAvailableMapsReq {

            /**
             * Constructs a new GetAvailableMapsReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetAvailableMapsReq);

            /** GetAvailableMapsReq req. */
            public req?: (pb.common.IAssetBaseReq|null);

            /**
             * Creates a new GetAvailableMapsReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetAvailableMapsReq instance
             */
            public static create(properties?: pb.common.IGetAvailableMapsReq): pb.common.GetAvailableMapsReq;

            /**
             * Encodes the specified GetAvailableMapsReq message. Does not implicitly {@link pb.common.GetAvailableMapsReq.verify|verify} messages.
             * @param message GetAvailableMapsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetAvailableMapsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetAvailableMapsReq message, length delimited. Does not implicitly {@link pb.common.GetAvailableMapsReq.verify|verify} messages.
             * @param message GetAvailableMapsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetAvailableMapsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetAvailableMapsReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetAvailableMapsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetAvailableMapsReq;

            /**
             * Decodes a GetAvailableMapsReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetAvailableMapsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetAvailableMapsReq;

            /**
             * Verifies a GetAvailableMapsReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetAvailableMapsReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetAvailableMapsReq
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetAvailableMapsReq;

            /**
             * Creates a plain object from a GetAvailableMapsReq message. Also converts values to other types if specified.
             * @param message GetAvailableMapsReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetAvailableMapsReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetAvailableMapsReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetAvailableMapsRsp. */
        interface IGetAvailableMapsRsp {

            /** GetAvailableMapsRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** GetAvailableMapsRsp maps */
            maps?: (pb.common.IMapItem[]|null);
        }

        /** Represents a GetAvailableMapsRsp. */
        class GetAvailableMapsRsp implements IGetAvailableMapsRsp {

            /**
             * Constructs a new GetAvailableMapsRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGetAvailableMapsRsp);

            /** GetAvailableMapsRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** GetAvailableMapsRsp maps. */
            public maps: pb.common.IMapItem[];

            /**
             * Creates a new GetAvailableMapsRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetAvailableMapsRsp instance
             */
            public static create(properties?: pb.common.IGetAvailableMapsRsp): pb.common.GetAvailableMapsRsp;

            /**
             * Encodes the specified GetAvailableMapsRsp message. Does not implicitly {@link pb.common.GetAvailableMapsRsp.verify|verify} messages.
             * @param message GetAvailableMapsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGetAvailableMapsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetAvailableMapsRsp message, length delimited. Does not implicitly {@link pb.common.GetAvailableMapsRsp.verify|verify} messages.
             * @param message GetAvailableMapsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGetAvailableMapsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetAvailableMapsRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetAvailableMapsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GetAvailableMapsRsp;

            /**
             * Decodes a GetAvailableMapsRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetAvailableMapsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GetAvailableMapsRsp;

            /**
             * Verifies a GetAvailableMapsRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetAvailableMapsRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetAvailableMapsRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GetAvailableMapsRsp;

            /**
             * Creates a plain object from a GetAvailableMapsRsp message. Also converts values to other types if specified.
             * @param message GetAvailableMapsRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GetAvailableMapsRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetAvailableMapsRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CashFlow. */
        interface ICashFlow {

            /** CashFlow monthlySalary */
            monthlySalary?: (Long|null);

            /** CashFlow monthlyIncomeExSalary */
            monthlyIncomeExSalary?: (Long|null);

            /** CashFlow monthlyExpenses */
            monthlyExpenses?: (Long|null);

            /** CashFlow monthlyCashFlow */
            monthlyCashFlow?: (Long|null);

            /** CashFlow totalCash */
            totalCash?: (Long|null);
        }

        /** Represents a CashFlow. */
        class CashFlow implements ICashFlow {

            /**
             * Constructs a new CashFlow.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.ICashFlow);

            /** CashFlow monthlySalary. */
            public monthlySalary: Long;

            /** CashFlow monthlyIncomeExSalary. */
            public monthlyIncomeExSalary: Long;

            /** CashFlow monthlyExpenses. */
            public monthlyExpenses: Long;

            /** CashFlow monthlyCashFlow. */
            public monthlyCashFlow: Long;

            /** CashFlow totalCash. */
            public totalCash: Long;

            /**
             * Creates a new CashFlow instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CashFlow instance
             */
            public static create(properties?: pb.common.ICashFlow): pb.common.CashFlow;

            /**
             * Encodes the specified CashFlow message. Does not implicitly {@link pb.common.CashFlow.verify|verify} messages.
             * @param message CashFlow message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.ICashFlow, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CashFlow message, length delimited. Does not implicitly {@link pb.common.CashFlow.verify|verify} messages.
             * @param message CashFlow message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.ICashFlow, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CashFlow message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CashFlow
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.CashFlow;

            /**
             * Decodes a CashFlow message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CashFlow
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.CashFlow;

            /**
             * Verifies a CashFlow message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CashFlow message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CashFlow
             */
            public static fromObject(object: { [k: string]: any }): pb.common.CashFlow;

            /**
             * Creates a plain object from a CashFlow message. Also converts values to other types if specified.
             * @param message CashFlow
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.CashFlow, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CashFlow to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an Asset. */
        interface IAsset {

            /** Asset assetId */
            assetId?: (Long|null);

            /** Asset name */
            name?: (string|null);

            /** Asset type */
            type?: (number|null);

            /** Asset totalPrice */
            totalPrice?: (Long|null);

            /** Asset Liabilities */
            Liabilities?: (Long|null);

            /** Asset monthlyCashFlow */
            monthlyCashFlow?: (Long|null);

            /** Asset quantity */
            quantity?: (number|null);

            /** Asset shard */
            shard?: (number|null);
        }

        /** Represents an Asset. */
        class Asset implements IAsset {

            /**
             * Constructs a new Asset.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IAsset);

            /** Asset assetId. */
            public assetId: Long;

            /** Asset name. */
            public name: string;

            /** Asset type. */
            public type: number;

            /** Asset totalPrice. */
            public totalPrice: Long;

            /** Asset Liabilities. */
            public Liabilities: Long;

            /** Asset monthlyCashFlow. */
            public monthlyCashFlow: Long;

            /** Asset quantity. */
            public quantity: number;

            /** Asset shard. */
            public shard: number;

            /**
             * Creates a new Asset instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Asset instance
             */
            public static create(properties?: pb.common.IAsset): pb.common.Asset;

            /**
             * Encodes the specified Asset message. Does not implicitly {@link pb.common.Asset.verify|verify} messages.
             * @param message Asset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Asset message, length delimited. Does not implicitly {@link pb.common.Asset.verify|verify} messages.
             * @param message Asset message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IAsset, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Asset message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Asset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.Asset;

            /**
             * Decodes an Asset message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Asset
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.Asset;

            /**
             * Verifies an Asset message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Asset message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Asset
             */
            public static fromObject(object: { [k: string]: any }): pb.common.Asset;

            /**
             * Creates a plain object from an Asset message. Also converts values to other types if specified.
             * @param message Asset
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.Asset, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Asset to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerRecord. */
        interface IPlayerRecord {

            /** PlayerRecord userId */
            userId?: (Long|null);

            /** PlayerRecord cashFlow */
            cashFlow?: (pb.common.ICashFlow|null);

            /** PlayerRecord BehaviorType */
            BehaviorType?: (number|null);

            /** PlayerRecord degree */
            degree?: (number|null);

            /** PlayerRecord isOut */
            isOut?: (boolean|null);

            /** PlayerRecord videotapeId */
            videotapeId?: (Long|null);

            /** PlayerRecord currentLocation */
            currentLocation?: (number|null);

            /** PlayerRecord cycle */
            cycle?: (number|null);

            /** PlayerRecord age */
            age?: (number|null);

            /** PlayerRecord initAge */
            initAge?: (number|null);
        }

        /** Represents a PlayerRecord. */
        class PlayerRecord implements IPlayerRecord {

            /**
             * Constructs a new PlayerRecord.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerRecord);

            /** PlayerRecord userId. */
            public userId: Long;

            /** PlayerRecord cashFlow. */
            public cashFlow?: (pb.common.ICashFlow|null);

            /** PlayerRecord BehaviorType. */
            public BehaviorType: number;

            /** PlayerRecord degree. */
            public degree: number;

            /** PlayerRecord isOut. */
            public isOut: boolean;

            /** PlayerRecord videotapeId. */
            public videotapeId: Long;

            /** PlayerRecord currentLocation. */
            public currentLocation: number;

            /** PlayerRecord cycle. */
            public cycle: number;

            /** PlayerRecord age. */
            public age: number;

            /** PlayerRecord initAge. */
            public initAge: number;

            /**
             * Creates a new PlayerRecord instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerRecord instance
             */
            public static create(properties?: pb.common.IPlayerRecord): pb.common.PlayerRecord;

            /**
             * Encodes the specified PlayerRecord message. Does not implicitly {@link pb.common.PlayerRecord.verify|verify} messages.
             * @param message PlayerRecord message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerRecord, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerRecord message, length delimited. Does not implicitly {@link pb.common.PlayerRecord.verify|verify} messages.
             * @param message PlayerRecord message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerRecord, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerRecord message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerRecord
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerRecord;

            /**
             * Decodes a PlayerRecord message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerRecord
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerRecord;

            /**
             * Verifies a PlayerRecord message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerRecord message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerRecord
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerRecord;

            /**
             * Creates a plain object from a PlayerRecord message. Also converts values to other types if specified.
             * @param message PlayerRecord
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerRecord to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameState. */
        interface IGameState {

            /** GameState userId */
            userId?: (Long|null);

            /** GameState roundSeq */
            roundSeq?: (number|null);

            /** GameState currentLocation */
            currentLocation?: (number|null);

            /** GameState diceNum */
            diceNum?: (number|null);

            /** GameState roundData */
            roundData?: (pb.common.IRoundData|null);

            /** GameState scenario */
            scenario?: (pb.common.IScenario|null);

            /** GameState playerRecords */
            playerRecords?: (pb.common.IPlayerRecord[]|null);

            /** GameState timer */
            timer?: (pb.common.Itimer|null);

            /** GameState globalTimer */
            globalTimer?: (pb.common.Itimer|null);
        }

        /** Represents a GameState. */
        class GameState implements IGameState {

            /**
             * Constructs a new GameState.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameState);

            /** GameState userId. */
            public userId: Long;

            /** GameState roundSeq. */
            public roundSeq: number;

            /** GameState currentLocation. */
            public currentLocation: number;

            /** GameState diceNum. */
            public diceNum: number;

            /** GameState roundData. */
            public roundData?: (pb.common.IRoundData|null);

            /** GameState scenario. */
            public scenario?: (pb.common.IScenario|null);

            /** GameState playerRecords. */
            public playerRecords: pb.common.IPlayerRecord[];

            /** GameState timer. */
            public timer?: (pb.common.Itimer|null);

            /** GameState globalTimer. */
            public globalTimer?: (pb.common.Itimer|null);

            /**
             * Creates a new GameState instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameState instance
             */
            public static create(properties?: pb.common.IGameState): pb.common.GameState;

            /**
             * Encodes the specified GameState message. Does not implicitly {@link pb.common.GameState.verify|verify} messages.
             * @param message GameState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameState message, length delimited. Does not implicitly {@link pb.common.GameState.verify|verify} messages.
             * @param message GameState message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameState, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameState message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameState;

            /**
             * Decodes a GameState message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameState
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameState;

            /**
             * Verifies a GameState message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameState message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameState
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameState;

            /**
             * Creates a plain object from a GameState message. Also converts values to other types if specified.
             * @param message GameState
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameState, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameState to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerRole. */
        interface IPlayerRole {

            /** PlayerRole ID */
            ID?: (Long|null);

            /** PlayerRole Name */
            Name?: (string|null);

            /** PlayerRole userId */
            userId?: (Long|null);

            /** PlayerRole avatar */
            avatar?: (string|null);

            /** PlayerRole flag */
            flag?: (string|null);
        }

        /** Represents a PlayerRole. */
        class PlayerRole implements IPlayerRole {

            /**
             * Constructs a new PlayerRole.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPlayerRole);

            /** PlayerRole ID. */
            public ID: Long;

            /** PlayerRole Name. */
            public Name: string;

            /** PlayerRole userId. */
            public userId: Long;

            /** PlayerRole avatar. */
            public avatar: string;

            /** PlayerRole flag. */
            public flag: string;

            /**
             * Creates a new PlayerRole instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerRole instance
             */
            public static create(properties?: pb.common.IPlayerRole): pb.common.PlayerRole;

            /**
             * Encodes the specified PlayerRole message. Does not implicitly {@link pb.common.PlayerRole.verify|verify} messages.
             * @param message PlayerRole message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPlayerRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerRole message, length delimited. Does not implicitly {@link pb.common.PlayerRole.verify|verify} messages.
             * @param message PlayerRole message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPlayerRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerRole message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerRole
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.PlayerRole;

            /**
             * Decodes a PlayerRole message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerRole
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.PlayerRole;

            /**
             * Verifies a PlayerRole message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerRole message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerRole
             */
            public static fromObject(object: { [k: string]: any }): pb.common.PlayerRole;

            /**
             * Creates a plain object from a PlayerRole message. Also converts values to other types if specified.
             * @param message PlayerRole
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.PlayerRole, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerRole to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Scenario. */
        interface IScenario {

            /** Scenario Id */
            Id?: (Long|null);

            /** Scenario Name */
            Name?: (string|null);

            /** Scenario Type */
            Type?: (number|null);

            /** Scenario category */
            category?: (string|null);

            /** Scenario C_Price */
            C_Price?: (number|null);

            /** Scenario C_DownPayment */
            C_DownPayment?: (number|null);

            /** Scenario C_Loan */
            C_Loan?: (number|null);

            /** Scenario C_Interest */
            C_Interest?: (number|null);

            /** Scenario C_Income */
            C_Income?: (number|null);

            /** Scenario C_MonthCashFlow */
            C_MonthCashFlow?: (number|null);

            /** Scenario C_YieldRatePCT */
            C_YieldRatePCT?: (number|null);

            /** Scenario C_HighPrice */
            C_HighPrice?: (number|null);

            /** Scenario C_LowPrice */
            C_LowPrice?: (number|null);

            /** Scenario C_Shard */
            C_Shard?: (number|null);

            /** Scenario C_Mark */
            C_Mark?: (number|null);

            /** Scenario A_Cash */
            A_Cash?: (number|null);

            /** Scenario MI_TotalPrice */
            MI_TotalPrice?: (number|null);

            /** Scenario MI_UnitPrice */
            MI_UnitPrice?: (number|null);

            /** Scenario MI_Multiple */
            MI_Multiple?: (number|null);

            /** Scenario MI_PerfPCT */
            MI_PerfPCT?: (number|null);

            /** Scenario MI_Shard */
            MI_Shard?: (number|null);

            /** Scenario MI_Mark */
            MI_Mark?: (number|null);

            /** Scenario Code */
            Code?: (string|null);

            /** Scenario Desc */
            Desc?: (string|null);

            /** Scenario priceInfo */
            priceInfo?: (string|null);

            /** Scenario imgFile */
            imgFile?: (string|null);

            /** Scenario babyExpense */
            babyExpense?: (number|null);

            /** Scenario MC_Type */
            MC_Type?: (pb.common.MarketChangeType.Enum|null);

            /** Scenario MC_AffectAll */
            MC_AffectAll?: (boolean|null);

            /** Scenario MC_Ratio */
            MC_Ratio?: (number|null);
        }

        /** Represents a Scenario. */
        class Scenario implements IScenario {

            /**
             * Constructs a new Scenario.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IScenario);

            /** Scenario Id. */
            public Id: Long;

            /** Scenario Name. */
            public Name: string;

            /** Scenario Type. */
            public Type: number;

            /** Scenario category. */
            public category: string;

            /** Scenario C_Price. */
            public C_Price: number;

            /** Scenario C_DownPayment. */
            public C_DownPayment: number;

            /** Scenario C_Loan. */
            public C_Loan: number;

            /** Scenario C_Interest. */
            public C_Interest: number;

            /** Scenario C_Income. */
            public C_Income: number;

            /** Scenario C_MonthCashFlow. */
            public C_MonthCashFlow: number;

            /** Scenario C_YieldRatePCT. */
            public C_YieldRatePCT: number;

            /** Scenario C_HighPrice. */
            public C_HighPrice: number;

            /** Scenario C_LowPrice. */
            public C_LowPrice: number;

            /** Scenario C_Shard. */
            public C_Shard: number;

            /** Scenario C_Mark. */
            public C_Mark: number;

            /** Scenario A_Cash. */
            public A_Cash: number;

            /** Scenario MI_TotalPrice. */
            public MI_TotalPrice: number;

            /** Scenario MI_UnitPrice. */
            public MI_UnitPrice: number;

            /** Scenario MI_Multiple. */
            public MI_Multiple: number;

            /** Scenario MI_PerfPCT. */
            public MI_PerfPCT: number;

            /** Scenario MI_Shard. */
            public MI_Shard: number;

            /** Scenario MI_Mark. */
            public MI_Mark: number;

            /** Scenario Code. */
            public Code: string;

            /** Scenario Desc. */
            public Desc: string;

            /** Scenario priceInfo. */
            public priceInfo: string;

            /** Scenario imgFile. */
            public imgFile: string;

            /** Scenario babyExpense. */
            public babyExpense: number;

            /** Scenario MC_Type. */
            public MC_Type: pb.common.MarketChangeType.Enum;

            /** Scenario MC_AffectAll. */
            public MC_AffectAll: boolean;

            /** Scenario MC_Ratio. */
            public MC_Ratio: number;

            /**
             * Creates a new Scenario instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Scenario instance
             */
            public static create(properties?: pb.common.IScenario): pb.common.Scenario;

            /**
             * Encodes the specified Scenario message. Does not implicitly {@link pb.common.Scenario.verify|verify} messages.
             * @param message Scenario message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Scenario message, length delimited. Does not implicitly {@link pb.common.Scenario.verify|verify} messages.
             * @param message Scenario message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Scenario message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Scenario
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.Scenario;

            /**
             * Decodes a Scenario message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Scenario
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.Scenario;

            /**
             * Verifies a Scenario message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Scenario message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Scenario
             */
            public static fromObject(object: { [k: string]: any }): pb.common.Scenario;

            /**
             * Creates a plain object from a Scenario message. Also converts values to other types if specified.
             * @param message Scenario
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.Scenario, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Scenario to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MarketChangeType. */
        interface IMarketChangeType {
        }

        /** Represents a MarketChangeType. */
        class MarketChangeType implements IMarketChangeType {

            /**
             * Constructs a new MarketChangeType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IMarketChangeType);

            /**
             * Creates a new MarketChangeType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MarketChangeType instance
             */
            public static create(properties?: pb.common.IMarketChangeType): pb.common.MarketChangeType;

            /**
             * Encodes the specified MarketChangeType message. Does not implicitly {@link pb.common.MarketChangeType.verify|verify} messages.
             * @param message MarketChangeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IMarketChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MarketChangeType message, length delimited. Does not implicitly {@link pb.common.MarketChangeType.verify|verify} messages.
             * @param message MarketChangeType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IMarketChangeType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MarketChangeType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MarketChangeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.MarketChangeType;

            /**
             * Decodes a MarketChangeType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MarketChangeType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.MarketChangeType;

            /**
             * Verifies a MarketChangeType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MarketChangeType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MarketChangeType
             */
            public static fromObject(object: { [k: string]: any }): pb.common.MarketChangeType;

            /**
             * Creates a plain object from a MarketChangeType message. Also converts values to other types if specified.
             * @param message MarketChangeType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.MarketChangeType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MarketChangeType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MarketChangeType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                RENT_INCREASE = 1,
                RENT_DECREASE = 2,
                EQUITY_BANKRUPT = 3,
                COOP_INCOME_INCREASE = 4,
                COOP_INCOME_DECREASE = 5
            }
        }

        /** Properties of a RoundData. */
        interface IRoundData {

            /** RoundData payment */
            payment?: (number|null);

            /** RoundData balance */
            balance?: (number|null);

            /** RoundData salary */
            salary?: (number|null);

            /** RoundData isOutGame */
            isOutGame?: (boolean|null);

            /** RoundData isPayDay */
            isPayDay?: (number|null);

            /** RoundData canSellCnt */
            canSellCnt?: (number|null);

            /** RoundData StepsToPayday */
            StepsToPayday?: (number|null);

            /** RoundData UnemploymentLoss */
            UnemploymentLoss?: (number|null);
        }

        /** Represents a RoundData. */
        class RoundData implements IRoundData {

            /**
             * Constructs a new RoundData.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IRoundData);

            /** RoundData payment. */
            public payment: number;

            /** RoundData balance. */
            public balance: number;

            /** RoundData salary. */
            public salary: number;

            /** RoundData isOutGame. */
            public isOutGame: boolean;

            /** RoundData isPayDay. */
            public isPayDay: number;

            /** RoundData canSellCnt. */
            public canSellCnt: number;

            /** RoundData StepsToPayday. */
            public StepsToPayday: number;

            /** RoundData UnemploymentLoss. */
            public UnemploymentLoss: number;

            /**
             * Creates a new RoundData instance using the specified properties.
             * @param [properties] Properties to set
             * @returns RoundData instance
             */
            public static create(properties?: pb.common.IRoundData): pb.common.RoundData;

            /**
             * Encodes the specified RoundData message. Does not implicitly {@link pb.common.RoundData.verify|verify} messages.
             * @param message RoundData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IRoundData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified RoundData message, length delimited. Does not implicitly {@link pb.common.RoundData.verify|verify} messages.
             * @param message RoundData message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IRoundData, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a RoundData message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoundData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.RoundData;

            /**
             * Decodes a RoundData message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns RoundData
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.RoundData;

            /**
             * Verifies a RoundData message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a RoundData message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns RoundData
             */
            public static fromObject(object: { [k: string]: any }): pb.common.RoundData;

            /**
             * Creates a plain object from a RoundData message. Also converts values to other types if specified.
             * @param message RoundData
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.RoundData, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this RoundData to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Payload. */
        interface IPayload {

            /** Payload type */
            type?: (number|null);

            /** Payload userId */
            userId?: (Long|null);

            /** Payload content */
            content?: (Uint8Array|null);

            /** Payload pushToUserId */
            pushToUserId?: (Long|null);
        }

        /** Represents a Payload. */
        class Payload implements IPayload {

            /**
             * Constructs a new Payload.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IPayload);

            /** Payload type. */
            public type: number;

            /** Payload userId. */
            public userId: Long;

            /** Payload content. */
            public content: Uint8Array;

            /** Payload pushToUserId. */
            public pushToUserId: Long;

            /**
             * Creates a new Payload instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Payload instance
             */
            public static create(properties?: pb.common.IPayload): pb.common.Payload;

            /**
             * Encodes the specified Payload message. Does not implicitly {@link pb.common.Payload.verify|verify} messages.
             * @param message Payload message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Payload message, length delimited. Does not implicitly {@link pb.common.Payload.verify|verify} messages.
             * @param message Payload message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IPayload, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Payload message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Payload
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.Payload;

            /**
             * Decodes a Payload message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Payload
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.Payload;

            /**
             * Verifies a Payload message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Payload message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Payload
             */
            public static fromObject(object: { [k: string]: any }): pb.common.Payload;

            /**
             * Creates a plain object from a Payload message. Also converts values to other types if specified.
             * @param message Payload
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.Payload, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Payload to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a timer. */
        interface Itimer {

            /** timer total */
            total?: (number|null);

            /** timer remaining */
            remaining?: (number|null);
        }

        /** Represents a timer. */
        class timer implements Itimer {

            /**
             * Constructs a new timer.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.Itimer);

            /** timer total. */
            public total: number;

            /** timer remaining. */
            public remaining: number;

            /**
             * Creates a new timer instance using the specified properties.
             * @param [properties] Properties to set
             * @returns timer instance
             */
            public static create(properties?: pb.common.Itimer): pb.common.timer;

            /**
             * Encodes the specified timer message. Does not implicitly {@link pb.common.timer.verify|verify} messages.
             * @param message timer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.Itimer, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified timer message, length delimited. Does not implicitly {@link pb.common.timer.verify|verify} messages.
             * @param message timer message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.Itimer, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a timer message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns timer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.timer;

            /**
             * Decodes a timer message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns timer
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.timer;

            /**
             * Verifies a timer message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a timer message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns timer
             */
            public static fromObject(object: { [k: string]: any }): pb.common.timer;

            /**
             * Creates a plain object from a timer message. Also converts values to other types if specified.
             * @param message timer
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.timer, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this timer to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameMap. */
        interface IGameMap {

            /** GameMap id */
            id?: (Long|null);

            /** GameMap scenarios */
            scenarios?: (pb.common.GameMap.IScenario[]|null);
        }

        /** Represents a GameMap. */
        class GameMap implements IGameMap {

            /**
             * Constructs a new GameMap.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IGameMap);

            /** GameMap id. */
            public id: Long;

            /** GameMap scenarios. */
            public scenarios: pb.common.GameMap.IScenario[];

            /**
             * Creates a new GameMap instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameMap instance
             */
            public static create(properties?: pb.common.IGameMap): pb.common.GameMap;

            /**
             * Encodes the specified GameMap message. Does not implicitly {@link pb.common.GameMap.verify|verify} messages.
             * @param message GameMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IGameMap, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameMap message, length delimited. Does not implicitly {@link pb.common.GameMap.verify|verify} messages.
             * @param message GameMap message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IGameMap, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameMap message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameMap;

            /**
             * Decodes a GameMap message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameMap
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameMap;

            /**
             * Verifies a GameMap message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameMap message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameMap
             */
            public static fromObject(object: { [k: string]: any }): pb.common.GameMap;

            /**
             * Creates a plain object from a GameMap message. Also converts values to other types if specified.
             * @param message GameMap
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.GameMap, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameMap to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GameMap {

            /** Properties of a Scenario. */
            interface IScenario {

                /** Scenario type */
                type?: (pb.common.SCENARIO_TYPE|null);

                /** Scenario location */
                location?: (number|null);
            }

            /** Represents a Scenario. */
            class Scenario implements IScenario {

                /**
                 * Constructs a new Scenario.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.common.GameMap.IScenario);

                /** Scenario type. */
                public type: pb.common.SCENARIO_TYPE;

                /** Scenario location. */
                public location: number;

                /**
                 * Creates a new Scenario instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Scenario instance
                 */
                public static create(properties?: pb.common.GameMap.IScenario): pb.common.GameMap.Scenario;

                /**
                 * Encodes the specified Scenario message. Does not implicitly {@link pb.common.GameMap.Scenario.verify|verify} messages.
                 * @param message Scenario message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.common.GameMap.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Scenario message, length delimited. Does not implicitly {@link pb.common.GameMap.Scenario.verify|verify} messages.
                 * @param message Scenario message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.common.GameMap.IScenario, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Scenario message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Scenario
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.GameMap.Scenario;

                /**
                 * Decodes a Scenario message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Scenario
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.GameMap.Scenario;

                /**
                 * Verifies a Scenario message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Scenario message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Scenario
                 */
                public static fromObject(object: { [k: string]: any }): pb.common.GameMap.Scenario;

                /**
                 * Creates a plain object from a Scenario message. Also converts values to other types if specified.
                 * @param message Scenario
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.common.GameMap.Scenario, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Scenario to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a MapItem. */
        interface IMapItem {

            /** MapItem id */
            id?: (Long|null);

            /** MapItem name */
            name?: (string|null);
        }

        /** Represents a MapItem. */
        class MapItem implements IMapItem {

            /**
             * Constructs a new MapItem.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IMapItem);

            /** MapItem id. */
            public id: Long;

            /** MapItem name. */
            public name: string;

            /**
             * Creates a new MapItem instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MapItem instance
             */
            public static create(properties?: pb.common.IMapItem): pb.common.MapItem;

            /**
             * Encodes the specified MapItem message. Does not implicitly {@link pb.common.MapItem.verify|verify} messages.
             * @param message MapItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IMapItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MapItem message, length delimited. Does not implicitly {@link pb.common.MapItem.verify|verify} messages.
             * @param message MapItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IMapItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MapItem message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MapItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.MapItem;

            /**
             * Decodes a MapItem message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MapItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.MapItem;

            /**
             * Verifies a MapItem message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MapItem message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MapItem
             */
            public static fromObject(object: { [k: string]: any }): pb.common.MapItem;

            /**
             * Creates a plain object from a MapItem message. Also converts values to other types if specified.
             * @param message MapItem
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.MapItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MapItem to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an Error. */
        interface IError {

            /** Error code */
            code?: (number|null);

            /** Error message */
            message?: (string|null);

            /** Error stack */
            stack?: (string|null);
        }

        /** Represents an Error. */
        class Error implements IError {

            /**
             * Constructs a new Error.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IError);

            /** Error code. */
            public code: number;

            /** Error message. */
            public message: string;

            /** Error stack. */
            public stack: string;

            /**
             * Creates a new Error instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Error instance
             */
            public static create(properties?: pb.common.IError): pb.common.Error;

            /**
             * Encodes the specified Error message. Does not implicitly {@link pb.common.Error.verify|verify} messages.
             * @param message Error message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IError, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Error message, length delimited. Does not implicitly {@link pb.common.Error.verify|verify} messages.
             * @param message Error message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IError, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Error message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Error
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.Error;

            /**
             * Decodes an Error message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Error
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.Error;

            /**
             * Verifies an Error message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Error message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Error
             */
            public static fromObject(object: { [k: string]: any }): pb.common.Error;

            /**
             * Creates a plain object from an Error message. Also converts values to other types if specified.
             * @param message Error
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.Error, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Error to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StreamInitParam. */
        interface IStreamInitParam {

            /** StreamInitParam userId */
            userId?: (Long|null);
        }

        /** Represents a StreamInitParam. */
        class StreamInitParam implements IStreamInitParam {

            /**
             * Constructs a new StreamInitParam.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.common.IStreamInitParam);

            /** StreamInitParam userId. */
            public userId: Long;

            /**
             * Creates a new StreamInitParam instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StreamInitParam instance
             */
            public static create(properties?: pb.common.IStreamInitParam): pb.common.StreamInitParam;

            /**
             * Encodes the specified StreamInitParam message. Does not implicitly {@link pb.common.StreamInitParam.verify|verify} messages.
             * @param message StreamInitParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.common.IStreamInitParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StreamInitParam message, length delimited. Does not implicitly {@link pb.common.StreamInitParam.verify|verify} messages.
             * @param message StreamInitParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.common.IStreamInitParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StreamInitParam message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StreamInitParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.common.StreamInitParam;

            /**
             * Decodes a StreamInitParam message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StreamInitParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.common.StreamInitParam;

            /**
             * Verifies a StreamInitParam message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StreamInitParam message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StreamInitParam
             */
            public static fromObject(object: { [k: string]: any }): pb.common.StreamInitParam;

            /**
             * Creates a plain object from a StreamInitParam message. Also converts values to other types if specified.
             * @param message StreamInitParam
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.common.StreamInitParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StreamInitParam to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** behavior enum. */
        enum behavior {
            B_PB_FIRST_MUST_ZORE = 0,
            B_INIT = 1,
            B_CHOOSE_ROLE = 2,
            B_ROLL = 3,
            B_PAYDAY = 4,
            B_CHOICE_CHANCE = 5,
            B_BUY = 6,
            B_SELL = 7,
            B_TRADE = 8,
            B_LOAN = 9,
            B_REPAY_LOAN = 10,
            B_STOCK_TRANSACTION = 11,
            B_BABY = 12,
            B_RED_PACKET = 13,
            B_ACCIDENT = 14,
            B_UNEMPLOYMENT = 15,
            B_WAGE_HIKE = 16
        }

        /** CmdID enum. */
        enum CmdID {
            DEFAULT = 0,
            LOGIN = 1,
            PUSH = 3,
            HEARBEAT = 6,
            CHECK_PLAYING = 10,
            SIGNALLING = 20,
            AFK = 21,
            RE_CONNECT = 22,
            LOBBY_ACTION = 1000,
            MATCHING = 1005,
            EXIT_MATCH = 1006,
            PREPARE = 1015,
            ANYONE_TIMEOUT = 1016,
            ALL_READY = 1020,
            START_MATCHING = 1021,
            EXIT_ROOM = 1022,
            ROOM_INFO = 1023,
            CREATE_ROOM = 1024,
            GET_AVAILABLE_ROOM_SIZE = 1025,
            INVITE = 1026,
            ENTER_ROOM = 1027,
            GET_PLAYER_STATE = 1029,
            REMOVE_PLAYER_FROM_ROOM = 1030,
            UPDATE_ROOM_OPTION = 1031,
            GET_AVAILABLE_MAPS = 1032,
            GAME_ACTION = 2000,
            SYNC_STATE = 2001,
            GET_ROLES = 2002,
            SELECT_ROLE = 2003,
            PLAYER_OUT = 2004,
            GAME_OVER = 2005,
            QUIT = 2006,
            TEST_PUSH = 2007,
            PLAYER_BEGIN = 2008,
            PASS = 2009,
            NEXT_ROLL = 2010,
            ROLL = 2011,
            PLAYERS_ALL_SELECTED_ROLE = 2012,
            CHOOSE_CHANCE = 2111,
            BUY = 2112,
            GIVEUP_CHANCE = 2113,
            SELL_STOCK = 2114,
            START_AUCTION = 2115,
            GIVEUP_AUCTION = 2116,
            OFFER_AUCTION_BID = 2118,
            AUCTION_TRY_RAISE = 2119,
            AUCTION_RESULT = 2120,
            TRY_PAY = 2121,
            BORROW_MONEY_QUOTAS = 2130,
            BORROW_MONEY_CONFIRM = 2132,
            GET_CAN_SELL_PLAYER_ASSET = 2133,
            SELL = 2134,
            LOAN = 2135,
            REPAY_LOAN = 2136,
            LOAN_QUALIFICATION = 2137,
            REPAY_LIABILITIES = 2138,
            COMPLETE_SALARY = 2140,
            CONFIRM_BANKRUPT = 2141,
            PAY_ACCIDENT_CONSUME = 2150,
            CONFIRM_MARKET_CHANGE = 2151,
            PAY_CHILD_BORN_REDPACKET = 2160,
            IGNORE_CHILD_BORN = 2161,
            WAGE_HIKE_ROLL = 2170,
            UNEMPLOYMENT_ACK = 2180,
            COMPLETE_MARKET = 2190,
            GET_UNIQUE_SCENARIO_IMG_NAME = 2191,
            GET_FINANCIAL_REPORTS = 3000,
            GET_PLAYER_ASSET = 3001,
            GET_PLAYER_LOAN_ASSET = 3002,
            GET_STATEMENT = 3003,
            SELL_ASSETS = 3004,
            DISHONORABLE_PUNISH = 3005
        }
    }

    /** Namespace lobby. */
    namespace lobby {

        /** Properties of a GameNodeMessage. */
        interface IGameNodeMessage {

            /** GameNodeMessage uuid */
            uuid?: (string|null);

            /** GameNodeMessage address */
            address?: (string|null);
        }

        /** Represents a GameNodeMessage. */
        class GameNodeMessage implements IGameNodeMessage {

            /**
             * Constructs a new GameNodeMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.lobby.IGameNodeMessage);

            /** GameNodeMessage uuid. */
            public uuid: string;

            /** GameNodeMessage address. */
            public address: string;

            /**
             * Creates a new GameNodeMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameNodeMessage instance
             */
            public static create(properties?: pb.lobby.IGameNodeMessage): pb.lobby.GameNodeMessage;

            /**
             * Encodes the specified GameNodeMessage message. Does not implicitly {@link pb.lobby.GameNodeMessage.verify|verify} messages.
             * @param message GameNodeMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.lobby.IGameNodeMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameNodeMessage message, length delimited. Does not implicitly {@link pb.lobby.GameNodeMessage.verify|verify} messages.
             * @param message GameNodeMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.lobby.IGameNodeMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameNodeMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameNodeMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.GameNodeMessage;

            /**
             * Decodes a GameNodeMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameNodeMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.GameNodeMessage;

            /**
             * Verifies a GameNodeMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameNodeMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameNodeMessage
             */
            public static fromObject(object: { [k: string]: any }): pb.lobby.GameNodeMessage;

            /**
             * Creates a plain object from a GameNodeMessage message. Also converts values to other types if specified.
             * @param message GameNodeMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.lobby.GameNodeMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameNodeMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CheckGameRoomRequest. */
        interface ICheckGameRoomRequest {

            /** CheckGameRoomRequest userId */
            userId?: (Long|null);
        }

        /** Represents a CheckGameRoomRequest. */
        class CheckGameRoomRequest implements ICheckGameRoomRequest {

            /**
             * Constructs a new CheckGameRoomRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.lobby.ICheckGameRoomRequest);

            /** CheckGameRoomRequest userId. */
            public userId: Long;

            /**
             * Creates a new CheckGameRoomRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckGameRoomRequest instance
             */
            public static create(properties?: pb.lobby.ICheckGameRoomRequest): pb.lobby.CheckGameRoomRequest;

            /**
             * Encodes the specified CheckGameRoomRequest message. Does not implicitly {@link pb.lobby.CheckGameRoomRequest.verify|verify} messages.
             * @param message CheckGameRoomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.lobby.ICheckGameRoomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckGameRoomRequest message, length delimited. Does not implicitly {@link pb.lobby.CheckGameRoomRequest.verify|verify} messages.
             * @param message CheckGameRoomRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.lobby.ICheckGameRoomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckGameRoomRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckGameRoomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.CheckGameRoomRequest;

            /**
             * Decodes a CheckGameRoomRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckGameRoomRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.CheckGameRoomRequest;

            /**
             * Verifies a CheckGameRoomRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckGameRoomRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckGameRoomRequest
             */
            public static fromObject(object: { [k: string]: any }): pb.lobby.CheckGameRoomRequest;

            /**
             * Creates a plain object from a CheckGameRoomRequest message. Also converts values to other types if specified.
             * @param message CheckGameRoomRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.lobby.CheckGameRoomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckGameRoomRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CheckGameRoomResponse. */
        interface ICheckGameRoomResponse {

            /** CheckGameRoomResponse gameId */
            gameId?: (Long|null);

            /** CheckGameRoomResponse address */
            address?: (string|null);

            /** CheckGameRoomResponse state */
            state?: (pb.common.PlayerState|null);

            /** CheckGameRoomResponse userIds */
            userIds?: (Long[]|null);

            /** CheckGameRoomResponse room */
            room?: (pb.common.IRoomInfo|null);
        }

        /** Represents a CheckGameRoomResponse. */
        class CheckGameRoomResponse implements ICheckGameRoomResponse {

            /**
             * Constructs a new CheckGameRoomResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.lobby.ICheckGameRoomResponse);

            /** CheckGameRoomResponse gameId. */
            public gameId: Long;

            /** CheckGameRoomResponse address. */
            public address: string;

            /** CheckGameRoomResponse state. */
            public state: pb.common.PlayerState;

            /** CheckGameRoomResponse userIds. */
            public userIds: Long[];

            /** CheckGameRoomResponse room. */
            public room?: (pb.common.IRoomInfo|null);

            /**
             * Creates a new CheckGameRoomResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CheckGameRoomResponse instance
             */
            public static create(properties?: pb.lobby.ICheckGameRoomResponse): pb.lobby.CheckGameRoomResponse;

            /**
             * Encodes the specified CheckGameRoomResponse message. Does not implicitly {@link pb.lobby.CheckGameRoomResponse.verify|verify} messages.
             * @param message CheckGameRoomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.lobby.ICheckGameRoomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CheckGameRoomResponse message, length delimited. Does not implicitly {@link pb.lobby.CheckGameRoomResponse.verify|verify} messages.
             * @param message CheckGameRoomResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.lobby.ICheckGameRoomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CheckGameRoomResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CheckGameRoomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.CheckGameRoomResponse;

            /**
             * Decodes a CheckGameRoomResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CheckGameRoomResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.CheckGameRoomResponse;

            /**
             * Verifies a CheckGameRoomResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CheckGameRoomResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CheckGameRoomResponse
             */
            public static fromObject(object: { [k: string]: any }): pb.lobby.CheckGameRoomResponse;

            /**
             * Creates a plain object from a CheckGameRoomResponse message. Also converts values to other types if specified.
             * @param message CheckGameRoomResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.lobby.CheckGameRoomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CheckGameRoomResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ResetPlayerRequest. */
        interface IResetPlayerRequest {

            /** ResetPlayerRequest userId */
            userId?: (Long|null);
        }

        /** Represents a ResetPlayerRequest. */
        class ResetPlayerRequest implements IResetPlayerRequest {

            /**
             * Constructs a new ResetPlayerRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.lobby.IResetPlayerRequest);

            /** ResetPlayerRequest userId. */
            public userId: Long;

            /**
             * Creates a new ResetPlayerRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResetPlayerRequest instance
             */
            public static create(properties?: pb.lobby.IResetPlayerRequest): pb.lobby.ResetPlayerRequest;

            /**
             * Encodes the specified ResetPlayerRequest message. Does not implicitly {@link pb.lobby.ResetPlayerRequest.verify|verify} messages.
             * @param message ResetPlayerRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.lobby.IResetPlayerRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResetPlayerRequest message, length delimited. Does not implicitly {@link pb.lobby.ResetPlayerRequest.verify|verify} messages.
             * @param message ResetPlayerRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.lobby.IResetPlayerRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResetPlayerRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResetPlayerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.ResetPlayerRequest;

            /**
             * Decodes a ResetPlayerRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResetPlayerRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.ResetPlayerRequest;

            /**
             * Verifies a ResetPlayerRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResetPlayerRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResetPlayerRequest
             */
            public static fromObject(object: { [k: string]: any }): pb.lobby.ResetPlayerRequest;

            /**
             * Creates a plain object from a ResetPlayerRequest message. Also converts values to other types if specified.
             * @param message ResetPlayerRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.lobby.ResetPlayerRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResetPlayerRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EndGameRequest. */
        interface IEndGameRequest {

            /** EndGameRequest gameId */
            gameId?: (Long|null);

            /** EndGameRequest players */
            players?: (pb.lobby.EndGameRequest.IPlayer[]|null);
        }

        /** Represents an EndGameRequest. */
        class EndGameRequest implements IEndGameRequest {

            /**
             * Constructs a new EndGameRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.lobby.IEndGameRequest);

            /** EndGameRequest gameId. */
            public gameId: Long;

            /** EndGameRequest players. */
            public players: pb.lobby.EndGameRequest.IPlayer[];

            /**
             * Creates a new EndGameRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EndGameRequest instance
             */
            public static create(properties?: pb.lobby.IEndGameRequest): pb.lobby.EndGameRequest;

            /**
             * Encodes the specified EndGameRequest message. Does not implicitly {@link pb.lobby.EndGameRequest.verify|verify} messages.
             * @param message EndGameRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.lobby.IEndGameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EndGameRequest message, length delimited. Does not implicitly {@link pb.lobby.EndGameRequest.verify|verify} messages.
             * @param message EndGameRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.lobby.IEndGameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EndGameRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EndGameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.EndGameRequest;

            /**
             * Decodes an EndGameRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EndGameRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.EndGameRequest;

            /**
             * Verifies an EndGameRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EndGameRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EndGameRequest
             */
            public static fromObject(object: { [k: string]: any }): pb.lobby.EndGameRequest;

            /**
             * Creates a plain object from an EndGameRequest message. Also converts values to other types if specified.
             * @param message EndGameRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.lobby.EndGameRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EndGameRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace EndGameRequest {

            /** Properties of a Player. */
            interface IPlayer {

                /** Player userId */
                userId?: (Long|null);

                /** Player playerId */
                playerId?: (Long|null);

                /** Player playerXid */
                playerXid?: (string|null);
            }

            /** Represents a Player. */
            class Player implements IPlayer {

                /**
                 * Constructs a new Player.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: pb.lobby.EndGameRequest.IPlayer);

                /** Player userId. */
                public userId: Long;

                /** Player playerId. */
                public playerId: Long;

                /** Player playerXid. */
                public playerXid: string;

                /**
                 * Creates a new Player instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Player instance
                 */
                public static create(properties?: pb.lobby.EndGameRequest.IPlayer): pb.lobby.EndGameRequest.Player;

                /**
                 * Encodes the specified Player message. Does not implicitly {@link pb.lobby.EndGameRequest.Player.verify|verify} messages.
                 * @param message Player message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: pb.lobby.EndGameRequest.IPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Player message, length delimited. Does not implicitly {@link pb.lobby.EndGameRequest.Player.verify|verify} messages.
                 * @param message Player message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: pb.lobby.EndGameRequest.IPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Player message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Player
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.EndGameRequest.Player;

                /**
                 * Decodes a Player message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Player
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.EndGameRequest.Player;

                /**
                 * Verifies a Player message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Player message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Player
                 */
                public static fromObject(object: { [k: string]: any }): pb.lobby.EndGameRequest.Player;

                /**
                 * Creates a plain object from a Player message. Also converts values to other types if specified.
                 * @param message Player
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: pb.lobby.EndGameRequest.Player, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Player to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of an EndGameResponse. */
        interface IEndGameResponse {

            /** EndGameResponse gameID */
            gameID?: (Long|null);
        }

        /** Represents an EndGameResponse. */
        class EndGameResponse implements IEndGameResponse {

            /**
             * Constructs a new EndGameResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.lobby.IEndGameResponse);

            /** EndGameResponse gameID. */
            public gameID: Long;

            /**
             * Creates a new EndGameResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EndGameResponse instance
             */
            public static create(properties?: pb.lobby.IEndGameResponse): pb.lobby.EndGameResponse;

            /**
             * Encodes the specified EndGameResponse message. Does not implicitly {@link pb.lobby.EndGameResponse.verify|verify} messages.
             * @param message EndGameResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.lobby.IEndGameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EndGameResponse message, length delimited. Does not implicitly {@link pb.lobby.EndGameResponse.verify|verify} messages.
             * @param message EndGameResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.lobby.IEndGameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EndGameResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EndGameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.EndGameResponse;

            /**
             * Decodes an EndGameResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EndGameResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.EndGameResponse;

            /**
             * Verifies an EndGameResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EndGameResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EndGameResponse
             */
            public static fromObject(object: { [k: string]: any }): pb.lobby.EndGameResponse;

            /**
             * Creates a plain object from an EndGameResponse message. Also converts values to other types if specified.
             * @param message EndGameResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.lobby.EndGameResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EndGameResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StreamInitParam. */
        interface IStreamInitParam {

            /** StreamInitParam userId */
            userId?: (Long|null);

            /** StreamInitParam isBot */
            isBot?: (boolean|null);
        }

        /** Represents a StreamInitParam. */
        class StreamInitParam implements IStreamInitParam {

            /**
             * Constructs a new StreamInitParam.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.lobby.IStreamInitParam);

            /** StreamInitParam userId. */
            public userId: Long;

            /** StreamInitParam isBot. */
            public isBot: boolean;

            /**
             * Creates a new StreamInitParam instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StreamInitParam instance
             */
            public static create(properties?: pb.lobby.IStreamInitParam): pb.lobby.StreamInitParam;

            /**
             * Encodes the specified StreamInitParam message. Does not implicitly {@link pb.lobby.StreamInitParam.verify|verify} messages.
             * @param message StreamInitParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.lobby.IStreamInitParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StreamInitParam message, length delimited. Does not implicitly {@link pb.lobby.StreamInitParam.verify|verify} messages.
             * @param message StreamInitParam message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.lobby.IStreamInitParam, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StreamInitParam message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StreamInitParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.lobby.StreamInitParam;

            /**
             * Decodes a StreamInitParam message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StreamInitParam
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.lobby.StreamInitParam;

            /**
             * Verifies a StreamInitParam message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StreamInitParam message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StreamInitParam
             */
            public static fromObject(object: { [k: string]: any }): pb.lobby.StreamInitParam;

            /**
             * Creates a plain object from a StreamInitParam message. Also converts values to other types if specified.
             * @param message StreamInitParam
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.lobby.StreamInitParam, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StreamInitParam to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a LobbyService */
        class LobbyService extends $protobuf.rpc.Service {

            /**
             * Constructs a new LobbyService service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Creates new LobbyService service using the specified rpc implementation.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             * @returns RPC service. Useful where requests and/or responses are streamed.
             */
            public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): LobbyService;

            /**
             * Calls RegisterGameNode.
             * @param request GameNodeMessage message or plain object
             * @param callback Node-style callback called with the error, if any, and Error
             */
            public registerGameNode(request: pb.lobby.IGameNodeMessage, callback: pb.lobby.LobbyService.RegisterGameNodeCallback): void;

            /**
             * Calls RegisterGameNode.
             * @param request GameNodeMessage message or plain object
             * @returns Promise
             */
            public registerGameNode(request: pb.lobby.IGameNodeMessage): Promise<pb.common.Error>;

            /**
             * Calls CheckGameRoom.
             * @param request CheckGameRoomRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and CheckGameRoomResponse
             */
            public checkGameRoom(request: pb.lobby.ICheckGameRoomRequest, callback: pb.lobby.LobbyService.CheckGameRoomCallback): void;

            /**
             * Calls CheckGameRoom.
             * @param request CheckGameRoomRequest message or plain object
             * @returns Promise
             */
            public checkGameRoom(request: pb.lobby.ICheckGameRoomRequest): Promise<pb.lobby.CheckGameRoomResponse>;

            /**
             * Calls ResetPlayer.
             * @param request ResetPlayerRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and Error
             */
            public resetPlayer(request: pb.lobby.IResetPlayerRequest, callback: pb.lobby.LobbyService.ResetPlayerCallback): void;

            /**
             * Calls ResetPlayer.
             * @param request ResetPlayerRequest message or plain object
             * @returns Promise
             */
            public resetPlayer(request: pb.lobby.IResetPlayerRequest): Promise<pb.common.Error>;

            /**
             * Calls Handle.
             * @param request StreamInitParam message or plain object
             * @param callback Node-style callback called with the error, if any, and Payload
             */
            public handle(request: pb.lobby.IStreamInitParam, callback: pb.lobby.LobbyService.HandleCallback): void;

            /**
             * Calls Handle.
             * @param request StreamInitParam message or plain object
             * @returns Promise
             */
            public handle(request: pb.lobby.IStreamInitParam): Promise<pb.common.Payload>;

            /**
             * Calls Request.
             * @param request Payload message or plain object
             * @param callback Node-style callback called with the error, if any, and Payload
             */
            public request(request: pb.common.IPayload, callback: pb.lobby.LobbyService.RequestCallback): void;

            /**
             * Calls Request.
             * @param request Payload message or plain object
             * @returns Promise
             */
            public request(request: pb.common.IPayload): Promise<pb.common.Payload>;

            /**
             * Calls EndGame.
             * @param request EndGameRequest message or plain object
             * @param callback Node-style callback called with the error, if any, and EndGameResponse
             */
            public endGame(request: pb.lobby.IEndGameRequest, callback: pb.lobby.LobbyService.EndGameCallback): void;

            /**
             * Calls EndGame.
             * @param request EndGameRequest message or plain object
             * @returns Promise
             */
            public endGame(request: pb.lobby.IEndGameRequest): Promise<pb.lobby.EndGameResponse>;
        }

        namespace LobbyService {

            /**
             * Callback as used by {@link pb.lobby.LobbyService#registerGameNode}.
             * @param error Error, if any
             * @param [response] Error
             */
            type RegisterGameNodeCallback = (error: (Error|null), response?: pb.common.Error) => void;

            /**
             * Callback as used by {@link pb.lobby.LobbyService#checkGameRoom}.
             * @param error Error, if any
             * @param [response] CheckGameRoomResponse
             */
            type CheckGameRoomCallback = (error: (Error|null), response?: pb.lobby.CheckGameRoomResponse) => void;

            /**
             * Callback as used by {@link pb.lobby.LobbyService#resetPlayer}.
             * @param error Error, if any
             * @param [response] Error
             */
            type ResetPlayerCallback = (error: (Error|null), response?: pb.common.Error) => void;

            /**
             * Callback as used by {@link pb.lobby.LobbyService#handle}.
             * @param error Error, if any
             * @param [response] Payload
             */
            type HandleCallback = (error: (Error|null), response?: pb.common.Payload) => void;

            /**
             * Callback as used by {@link pb.lobby.LobbyService#request}.
             * @param error Error, if any
             * @param [response] Payload
             */
            type RequestCallback = (error: (Error|null), response?: pb.common.Payload) => void;

            /**
             * Callback as used by {@link pb.lobby.LobbyService#endGame}.
             * @param error Error, if any
             * @param [response] EndGameResponse
             */
            type EndGameCallback = (error: (Error|null), response?: pb.lobby.EndGameResponse) => void;
        }
    }

    /** Namespace game. */
    namespace game {

        /** Properties of a GameOption. */
        interface IGameOption {

            /** GameOption playDuration */
            playDuration?: (number|null);

            /** GameOption mapId */
            mapId?: (Long|null);
        }

        /** Represents a GameOption. */
        class GameOption implements IGameOption {

            /**
             * Constructs a new GameOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.game.IGameOption);

            /** GameOption playDuration. */
            public playDuration: number;

            /** GameOption mapId. */
            public mapId: Long;

            /**
             * Creates a new GameOption instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameOption instance
             */
            public static create(properties?: pb.game.IGameOption): pb.game.GameOption;

            /**
             * Encodes the specified GameOption message. Does not implicitly {@link pb.game.GameOption.verify|verify} messages.
             * @param message GameOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.game.IGameOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameOption message, length delimited. Does not implicitly {@link pb.game.GameOption.verify|verify} messages.
             * @param message GameOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.game.IGameOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.game.GameOption;

            /**
             * Decodes a GameOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.game.GameOption;

            /**
             * Verifies a GameOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameOption
             */
            public static fromObject(object: { [k: string]: any }): pb.game.GameOption;

            /**
             * Creates a plain object from a GameOption message. Also converts values to other types if specified.
             * @param message GameOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.game.GameOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartGameReq. */
        interface IStartGameReq {

            /** StartGameReq userId */
            userId?: (Long[]|null);

            /** StartGameReq matchType */
            matchType?: (pb.common.MatchType|null);

            /** StartGameReq trainerId */
            trainerId?: (Long|null);

            /** StartGameReq opt */
            opt?: (pb.game.IGameOption|null);
        }

        /** Represents a StartGameReq. */
        class StartGameReq implements IStartGameReq {

            /**
             * Constructs a new StartGameReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.game.IStartGameReq);

            /** StartGameReq userId. */
            public userId: Long[];

            /** StartGameReq matchType. */
            public matchType: pb.common.MatchType;

            /** StartGameReq trainerId. */
            public trainerId: Long;

            /** StartGameReq opt. */
            public opt?: (pb.game.IGameOption|null);

            /**
             * Creates a new StartGameReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartGameReq instance
             */
            public static create(properties?: pb.game.IStartGameReq): pb.game.StartGameReq;

            /**
             * Encodes the specified StartGameReq message. Does not implicitly {@link pb.game.StartGameReq.verify|verify} messages.
             * @param message StartGameReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.game.IStartGameReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartGameReq message, length delimited. Does not implicitly {@link pb.game.StartGameReq.verify|verify} messages.
             * @param message StartGameReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.game.IStartGameReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartGameReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartGameReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.game.StartGameReq;

            /**
             * Decodes a StartGameReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartGameReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.game.StartGameReq;

            /**
             * Verifies a StartGameReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartGameReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartGameReq
             */
            public static fromObject(object: { [k: string]: any }): pb.game.StartGameReq;

            /**
             * Creates a plain object from a StartGameReq message. Also converts values to other types if specified.
             * @param message StartGameReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.game.StartGameReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartGameReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a StartGameRsp. */
        interface IStartGameRsp {

            /** StartGameRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);

            /** StartGameRsp gameId */
            gameId?: (Long|null);

            /** StartGameRsp idMaps */
            idMaps?: ({ [k: string]: Long }|null);

            /** StartGameRsp timer */
            timer?: (pb.common.Itimer|null);

            /** StartGameRsp globalTimer */
            globalTimer?: (pb.common.Itimer|null);

            /** StartGameRsp matchType */
            matchType?: (pb.common.MatchType|null);
        }

        /** Represents a StartGameRsp. */
        class StartGameRsp implements IStartGameRsp {

            /**
             * Constructs a new StartGameRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.game.IStartGameRsp);

            /** StartGameRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /** StartGameRsp gameId. */
            public gameId: Long;

            /** StartGameRsp idMaps. */
            public idMaps: { [k: string]: Long };

            /** StartGameRsp timer. */
            public timer?: (pb.common.Itimer|null);

            /** StartGameRsp globalTimer. */
            public globalTimer?: (pb.common.Itimer|null);

            /** StartGameRsp matchType. */
            public matchType: pb.common.MatchType;

            /**
             * Creates a new StartGameRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns StartGameRsp instance
             */
            public static create(properties?: pb.game.IStartGameRsp): pb.game.StartGameRsp;

            /**
             * Encodes the specified StartGameRsp message. Does not implicitly {@link pb.game.StartGameRsp.verify|verify} messages.
             * @param message StartGameRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.game.IStartGameRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified StartGameRsp message, length delimited. Does not implicitly {@link pb.game.StartGameRsp.verify|verify} messages.
             * @param message StartGameRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.game.IStartGameRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a StartGameRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StartGameRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.game.StartGameRsp;

            /**
             * Decodes a StartGameRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns StartGameRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.game.StartGameRsp;

            /**
             * Verifies a StartGameRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a StartGameRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns StartGameRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.game.StartGameRsp;

            /**
             * Creates a plain object from a StartGameRsp message. Also converts values to other types if specified.
             * @param message StartGameRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.game.StartGameRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this StartGameRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerLeaveReq. */
        interface IPlayerLeaveReq {

            /** PlayerLeaveReq gameId */
            gameId?: (Long|null);

            /** PlayerLeaveReq userId */
            userId?: (Long|null);
        }

        /** Represents a PlayerLeaveReq. */
        class PlayerLeaveReq implements IPlayerLeaveReq {

            /**
             * Constructs a new PlayerLeaveReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.game.IPlayerLeaveReq);

            /** PlayerLeaveReq gameId. */
            public gameId: Long;

            /** PlayerLeaveReq userId. */
            public userId: Long;

            /**
             * Creates a new PlayerLeaveReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerLeaveReq instance
             */
            public static create(properties?: pb.game.IPlayerLeaveReq): pb.game.PlayerLeaveReq;

            /**
             * Encodes the specified PlayerLeaveReq message. Does not implicitly {@link pb.game.PlayerLeaveReq.verify|verify} messages.
             * @param message PlayerLeaveReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.game.IPlayerLeaveReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerLeaveReq message, length delimited. Does not implicitly {@link pb.game.PlayerLeaveReq.verify|verify} messages.
             * @param message PlayerLeaveReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.game.IPlayerLeaveReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerLeaveReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerLeaveReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.game.PlayerLeaveReq;

            /**
             * Decodes a PlayerLeaveReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerLeaveReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.game.PlayerLeaveReq;

            /**
             * Verifies a PlayerLeaveReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerLeaveReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerLeaveReq
             */
            public static fromObject(object: { [k: string]: any }): pb.game.PlayerLeaveReq;

            /**
             * Creates a plain object from a PlayerLeaveReq message. Also converts values to other types if specified.
             * @param message PlayerLeaveReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.game.PlayerLeaveReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerLeaveReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlayerLeaveRsp. */
        interface IPlayerLeaveRsp {

            /** PlayerLeaveRsp rsp */
            rsp?: (pb.common.IBaseRsp|null);
        }

        /** Represents a PlayerLeaveRsp. */
        class PlayerLeaveRsp implements IPlayerLeaveRsp {

            /**
             * Constructs a new PlayerLeaveRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.game.IPlayerLeaveRsp);

            /** PlayerLeaveRsp rsp. */
            public rsp?: (pb.common.IBaseRsp|null);

            /**
             * Creates a new PlayerLeaveRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlayerLeaveRsp instance
             */
            public static create(properties?: pb.game.IPlayerLeaveRsp): pb.game.PlayerLeaveRsp;

            /**
             * Encodes the specified PlayerLeaveRsp message. Does not implicitly {@link pb.game.PlayerLeaveRsp.verify|verify} messages.
             * @param message PlayerLeaveRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.game.IPlayerLeaveRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlayerLeaveRsp message, length delimited. Does not implicitly {@link pb.game.PlayerLeaveRsp.verify|verify} messages.
             * @param message PlayerLeaveRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.game.IPlayerLeaveRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlayerLeaveRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerLeaveRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.game.PlayerLeaveRsp;

            /**
             * Decodes a PlayerLeaveRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlayerLeaveRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.game.PlayerLeaveRsp;

            /**
             * Verifies a PlayerLeaveRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlayerLeaveRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlayerLeaveRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.game.PlayerLeaveRsp;

            /**
             * Creates a plain object from a PlayerLeaveRsp message. Also converts values to other types if specified.
             * @param message PlayerLeaveRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.game.PlayerLeaveRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlayerLeaveRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetAvailableMapsReq. */
        interface IGetAvailableMapsReq {
        }

        /** Represents a GetAvailableMapsReq. */
        class GetAvailableMapsReq implements IGetAvailableMapsReq {

            /**
             * Constructs a new GetAvailableMapsReq.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.game.IGetAvailableMapsReq);

            /**
             * Creates a new GetAvailableMapsReq instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetAvailableMapsReq instance
             */
            public static create(properties?: pb.game.IGetAvailableMapsReq): pb.game.GetAvailableMapsReq;

            /**
             * Encodes the specified GetAvailableMapsReq message. Does not implicitly {@link pb.game.GetAvailableMapsReq.verify|verify} messages.
             * @param message GetAvailableMapsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.game.IGetAvailableMapsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetAvailableMapsReq message, length delimited. Does not implicitly {@link pb.game.GetAvailableMapsReq.verify|verify} messages.
             * @param message GetAvailableMapsReq message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.game.IGetAvailableMapsReq, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetAvailableMapsReq message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetAvailableMapsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.game.GetAvailableMapsReq;

            /**
             * Decodes a GetAvailableMapsReq message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetAvailableMapsReq
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.game.GetAvailableMapsReq;

            /**
             * Verifies a GetAvailableMapsReq message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetAvailableMapsReq message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetAvailableMapsReq
             */
            public static fromObject(object: { [k: string]: any }): pb.game.GetAvailableMapsReq;

            /**
             * Creates a plain object from a GetAvailableMapsReq message. Also converts values to other types if specified.
             * @param message GetAvailableMapsReq
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.game.GetAvailableMapsReq, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetAvailableMapsReq to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GetAvailableMapsRsp. */
        interface IGetAvailableMapsRsp {

            /** GetAvailableMapsRsp maps */
            maps?: (pb.common.IMapItem[]|null);
        }

        /** Represents a GetAvailableMapsRsp. */
        class GetAvailableMapsRsp implements IGetAvailableMapsRsp {

            /**
             * Constructs a new GetAvailableMapsRsp.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.game.IGetAvailableMapsRsp);

            /** GetAvailableMapsRsp maps. */
            public maps: pb.common.IMapItem[];

            /**
             * Creates a new GetAvailableMapsRsp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GetAvailableMapsRsp instance
             */
            public static create(properties?: pb.game.IGetAvailableMapsRsp): pb.game.GetAvailableMapsRsp;

            /**
             * Encodes the specified GetAvailableMapsRsp message. Does not implicitly {@link pb.game.GetAvailableMapsRsp.verify|verify} messages.
             * @param message GetAvailableMapsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.game.IGetAvailableMapsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GetAvailableMapsRsp message, length delimited. Does not implicitly {@link pb.game.GetAvailableMapsRsp.verify|verify} messages.
             * @param message GetAvailableMapsRsp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.game.IGetAvailableMapsRsp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GetAvailableMapsRsp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GetAvailableMapsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.game.GetAvailableMapsRsp;

            /**
             * Decodes a GetAvailableMapsRsp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GetAvailableMapsRsp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.game.GetAvailableMapsRsp;

            /**
             * Verifies a GetAvailableMapsRsp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GetAvailableMapsRsp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GetAvailableMapsRsp
             */
            public static fromObject(object: { [k: string]: any }): pb.game.GetAvailableMapsRsp;

            /**
             * Creates a plain object from a GetAvailableMapsRsp message. Also converts values to other types if specified.
             * @param message GetAvailableMapsRsp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.game.GetAvailableMapsRsp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GetAvailableMapsRsp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Represents a GameService */
        class GameService extends $protobuf.rpc.Service {

            /**
             * Constructs a new GameService service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Creates new GameService service using the specified rpc implementation.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             * @returns RPC service. Useful where requests and/or responses are streamed.
             */
            public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): GameService;

            /**
             * Calls StartGame.
             * @param request StartGameReq message or plain object
             * @param callback Node-style callback called with the error, if any, and StartGameRsp
             */
            public startGame(request: pb.game.IStartGameReq, callback: pb.game.GameService.StartGameCallback): void;

            /**
             * Calls StartGame.
             * @param request StartGameReq message or plain object
             * @returns Promise
             */
            public startGame(request: pb.game.IStartGameReq): Promise<pb.game.StartGameRsp>;

            /**
             * Calls PlayerLeave.
             * @param request PlayerLeaveReq message or plain object
             * @param callback Node-style callback called with the error, if any, and PlayerLeaveRsp
             */
            public playerLeave(request: pb.game.IPlayerLeaveReq, callback: pb.game.GameService.PlayerLeaveCallback): void;

            /**
             * Calls PlayerLeave.
             * @param request PlayerLeaveReq message or plain object
             * @returns Promise
             */
            public playerLeave(request: pb.game.IPlayerLeaveReq): Promise<pb.game.PlayerLeaveRsp>;

            /**
             * Calls Handle.
             * @param request StreamInitParam message or plain object
             * @param callback Node-style callback called with the error, if any, and Payload
             */
            public handle(request: pb.common.IStreamInitParam, callback: pb.game.GameService.HandleCallback): void;

            /**
             * Calls Handle.
             * @param request StreamInitParam message or plain object
             * @returns Promise
             */
            public handle(request: pb.common.IStreamInitParam): Promise<pb.common.Payload>;

            /**
             * Calls Request.
             * @param request Payload message or plain object
             * @param callback Node-style callback called with the error, if any, and Payload
             */
            public request(request: pb.common.IPayload, callback: pb.game.GameService.RequestCallback): void;

            /**
             * Calls Request.
             * @param request Payload message or plain object
             * @returns Promise
             */
            public request(request: pb.common.IPayload): Promise<pb.common.Payload>;

            /**
             * Calls GetAvailableMaps.
             * @param request GetAvailableMapsReq message or plain object
             * @param callback Node-style callback called with the error, if any, and GetAvailableMapsRsp
             */
            public getAvailableMaps(request: pb.game.IGetAvailableMapsReq, callback: pb.game.GameService.GetAvailableMapsCallback): void;

            /**
             * Calls GetAvailableMaps.
             * @param request GetAvailableMapsReq message or plain object
             * @returns Promise
             */
            public getAvailableMaps(request: pb.game.IGetAvailableMapsReq): Promise<pb.game.GetAvailableMapsRsp>;
        }

        namespace GameService {

            /**
             * Callback as used by {@link pb.game.GameService#startGame}.
             * @param error Error, if any
             * @param [response] StartGameRsp
             */
            type StartGameCallback = (error: (Error|null), response?: pb.game.StartGameRsp) => void;

            /**
             * Callback as used by {@link pb.game.GameService#playerLeave}.
             * @param error Error, if any
             * @param [response] PlayerLeaveRsp
             */
            type PlayerLeaveCallback = (error: (Error|null), response?: pb.game.PlayerLeaveRsp) => void;

            /**
             * Callback as used by {@link pb.game.GameService#handle}.
             * @param error Error, if any
             * @param [response] Payload
             */
            type HandleCallback = (error: (Error|null), response?: pb.common.Payload) => void;

            /**
             * Callback as used by {@link pb.game.GameService#request}.
             * @param error Error, if any
             * @param [response] Payload
             */
            type RequestCallback = (error: (Error|null), response?: pb.common.Payload) => void;

            /**
             * Callback as used by {@link pb.game.GameService#getAvailableMaps}.
             * @param error Error, if any
             * @param [response] GetAvailableMapsRsp
             */
            type GetAvailableMapsCallback = (error: (Error|null), response?: pb.game.GetAvailableMapsRsp) => void;
        }
    }

    /** Namespace im. */
    namespace im {

        /** Properties of a IMMessage. */
        interface IIMMessage {

            /** IMMessage type */
            type?: (pb.im.IMMessageType.Enum|null);

            /** IMMessage content */
            content?: (google.protobuf.IAny|null);
        }

        /** Represents a IMMessage. */
        class IMMessage implements IIMMessage {

            /**
             * Constructs a new IMMessage.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IIMMessage);

            /** IMMessage type. */
            public type: pb.im.IMMessageType.Enum;

            /** IMMessage content. */
            public content?: (google.protobuf.IAny|null);

            /**
             * Creates a new IMMessage instance using the specified properties.
             * @param [properties] Properties to set
             * @returns IMMessage instance
             */
            public static create(properties?: pb.im.IIMMessage): pb.im.IMMessage;

            /**
             * Encodes the specified IMMessage message. Does not implicitly {@link pb.im.IMMessage.verify|verify} messages.
             * @param message IMMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IIMMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified IMMessage message, length delimited. Does not implicitly {@link pb.im.IMMessage.verify|verify} messages.
             * @param message IMMessage message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IIMMessage, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a IMMessage message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IMMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.IMMessage;

            /**
             * Decodes a IMMessage message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns IMMessage
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.IMMessage;

            /**
             * Verifies a IMMessage message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a IMMessage message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns IMMessage
             */
            public static fromObject(object: { [k: string]: any }): pb.im.IMMessage;

            /**
             * Creates a plain object from a IMMessage message. Also converts values to other types if specified.
             * @param message IMMessage
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.IMMessage, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this IMMessage to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a IMMessageType. */
        interface IIMMessageType {
        }

        /** Represents a IMMessageType. */
        class IMMessageType implements IIMMessageType {

            /**
             * Constructs a new IMMessageType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IIMMessageType);

            /**
             * Creates a new IMMessageType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns IMMessageType instance
             */
            public static create(properties?: pb.im.IIMMessageType): pb.im.IMMessageType;

            /**
             * Encodes the specified IMMessageType message. Does not implicitly {@link pb.im.IMMessageType.verify|verify} messages.
             * @param message IMMessageType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IIMMessageType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified IMMessageType message, length delimited. Does not implicitly {@link pb.im.IMMessageType.verify|verify} messages.
             * @param message IMMessageType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IIMMessageType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a IMMessageType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IMMessageType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.IMMessageType;

            /**
             * Decodes a IMMessageType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns IMMessageType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.IMMessageType;

            /**
             * Verifies a IMMessageType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a IMMessageType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns IMMessageType
             */
            public static fromObject(object: { [k: string]: any }): pb.im.IMMessageType;

            /**
             * Creates a plain object from a IMMessageType message. Also converts values to other types if specified.
             * @param message IMMessageType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.IMMessageType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this IMMessageType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace IMMessageType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                THUMB_UP = 1,
                COMMENT = 2,
                FRIEND_REQUEST = 3,
                FRIEND_REQUEST_RESPONSE = 4,
                MOMENT_POST = 5,
                ANNOUNCEMENT = 7,
                GAME_INVITATION = 8,
                FRIEND_RELATIONSHIP_CHANGE = 9,
                GROUP_INVITATION = 10,
                GROUP_JOIN_APPLY = 11,
                GROUP_JOIN_RESULT = 12,
                TRANSACTION_NOTIFICATION = 13,
                LINK_MESSAGE = 14,
                GROUP_MESSAGE_THUMB_UP = 15
            }
        }

        /** Properties of a UserInfo. */
        interface IUserInfo {

            /** UserInfo userId */
            userId?: (Long|null);

            /** UserInfo nickname */
            nickname?: (string|null);

            /** UserInfo avatar */
            avatar?: (string|null);
        }

        /** Represents a UserInfo. */
        class UserInfo implements IUserInfo {

            /**
             * Constructs a new UserInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IUserInfo);

            /** UserInfo userId. */
            public userId: Long;

            /** UserInfo nickname. */
            public nickname: string;

            /** UserInfo avatar. */
            public avatar: string;

            /**
             * Creates a new UserInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserInfo instance
             */
            public static create(properties?: pb.im.IUserInfo): pb.im.UserInfo;

            /**
             * Encodes the specified UserInfo message. Does not implicitly {@link pb.im.UserInfo.verify|verify} messages.
             * @param message UserInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UserInfo message, length delimited. Does not implicitly {@link pb.im.UserInfo.verify|verify} messages.
             * @param message UserInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IUserInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a UserInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.UserInfo;

            /**
             * Decodes a UserInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.UserInfo;

            /**
             * Verifies a UserInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserInfo
             */
            public static fromObject(object: { [k: string]: any }): pb.im.UserInfo;

            /**
             * Creates a plain object from a UserInfo message. Also converts values to other types if specified.
             * @param message UserInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.UserInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TargetSummary. */
        interface ITargetSummary {

            /** TargetSummary objectType */
            objectType?: (pb.consts.ObjectType.Enum|null);

            /** TargetSummary objectId */
            objectId?: (string|null);

            /** TargetSummary text */
            text?: (string|null);

            /** TargetSummary imageUrls */
            imageUrls?: (string[]|null);
        }

        /** Represents a TargetSummary. */
        class TargetSummary implements ITargetSummary {

            /**
             * Constructs a new TargetSummary.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.ITargetSummary);

            /** TargetSummary objectType. */
            public objectType: pb.consts.ObjectType.Enum;

            /** TargetSummary objectId. */
            public objectId: string;

            /** TargetSummary text. */
            public text: string;

            /** TargetSummary imageUrls. */
            public imageUrls: string[];

            /**
             * Creates a new TargetSummary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TargetSummary instance
             */
            public static create(properties?: pb.im.ITargetSummary): pb.im.TargetSummary;

            /**
             * Encodes the specified TargetSummary message. Does not implicitly {@link pb.im.TargetSummary.verify|verify} messages.
             * @param message TargetSummary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.ITargetSummary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TargetSummary message, length delimited. Does not implicitly {@link pb.im.TargetSummary.verify|verify} messages.
             * @param message TargetSummary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.ITargetSummary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TargetSummary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TargetSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.TargetSummary;

            /**
             * Decodes a TargetSummary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TargetSummary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.TargetSummary;

            /**
             * Verifies a TargetSummary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TargetSummary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TargetSummary
             */
            public static fromObject(object: { [k: string]: any }): pb.im.TargetSummary;

            /**
             * Creates a plain object from a TargetSummary message. Also converts values to other types if specified.
             * @param message TargetSummary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.TargetSummary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TargetSummary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ThumpUpMsg. */
        interface IThumpUpMsg {

            /** ThumpUpMsg sender */
            sender?: (pb.im.IUserInfo|null);

            /** ThumpUpMsg createdAt */
            createdAt?: (google.protobuf.ITimestamp|null);

            /** ThumpUpMsg objectType */
            objectType?: (pb.consts.ObjectType.Enum|null);

            /** ThumpUpMsg objectId */
            objectId?: (string|null);

            /** ThumpUpMsg summary */
            summary?: (pb.im.ITargetSummary|null);
        }

        /** Represents a ThumpUpMsg. */
        class ThumpUpMsg implements IThumpUpMsg {

            /**
             * Constructs a new ThumpUpMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IThumpUpMsg);

            /** ThumpUpMsg sender. */
            public sender?: (pb.im.IUserInfo|null);

            /** ThumpUpMsg createdAt. */
            public createdAt?: (google.protobuf.ITimestamp|null);

            /** ThumpUpMsg objectType. */
            public objectType: pb.consts.ObjectType.Enum;

            /** ThumpUpMsg objectId. */
            public objectId: string;

            /** ThumpUpMsg summary. */
            public summary?: (pb.im.ITargetSummary|null);

            /**
             * Creates a new ThumpUpMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ThumpUpMsg instance
             */
            public static create(properties?: pb.im.IThumpUpMsg): pb.im.ThumpUpMsg;

            /**
             * Encodes the specified ThumpUpMsg message. Does not implicitly {@link pb.im.ThumpUpMsg.verify|verify} messages.
             * @param message ThumpUpMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IThumpUpMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ThumpUpMsg message, length delimited. Does not implicitly {@link pb.im.ThumpUpMsg.verify|verify} messages.
             * @param message ThumpUpMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IThumpUpMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ThumpUpMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ThumpUpMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.ThumpUpMsg;

            /**
             * Decodes a ThumpUpMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ThumpUpMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.ThumpUpMsg;

            /**
             * Verifies a ThumpUpMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ThumpUpMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ThumpUpMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.ThumpUpMsg;

            /**
             * Creates a plain object from a ThumpUpMsg message. Also converts values to other types if specified.
             * @param message ThumpUpMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.ThumpUpMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ThumpUpMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CommentMsg. */
        interface ICommentMsg {

            /** CommentMsg sender */
            sender?: (pb.im.IUserInfo|null);

            /** CommentMsg createdAt */
            createdAt?: (google.protobuf.ITimestamp|null);

            /** CommentMsg content */
            content?: (string|null);

            /** CommentMsg objectType */
            objectType?: (pb.consts.ObjectType.Enum|null);

            /** CommentMsg objectId */
            objectId?: (string|null);

            /** CommentMsg summary */
            summary?: (pb.im.ITargetSummary|null);

            /** CommentMsg fee */
            fee?: (string|null);

            /** CommentMsg replyTo */
            replyTo?: (string|null);
        }

        /** Represents a CommentMsg. */
        class CommentMsg implements ICommentMsg {

            /**
             * Constructs a new CommentMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.ICommentMsg);

            /** CommentMsg sender. */
            public sender?: (pb.im.IUserInfo|null);

            /** CommentMsg createdAt. */
            public createdAt?: (google.protobuf.ITimestamp|null);

            /** CommentMsg content. */
            public content: string;

            /** CommentMsg objectType. */
            public objectType: pb.consts.ObjectType.Enum;

            /** CommentMsg objectId. */
            public objectId: string;

            /** CommentMsg summary. */
            public summary?: (pb.im.ITargetSummary|null);

            /** CommentMsg fee. */
            public fee: string;

            /** CommentMsg replyTo. */
            public replyTo: string;

            /**
             * Creates a new CommentMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CommentMsg instance
             */
            public static create(properties?: pb.im.ICommentMsg): pb.im.CommentMsg;

            /**
             * Encodes the specified CommentMsg message. Does not implicitly {@link pb.im.CommentMsg.verify|verify} messages.
             * @param message CommentMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.ICommentMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CommentMsg message, length delimited. Does not implicitly {@link pb.im.CommentMsg.verify|verify} messages.
             * @param message CommentMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.ICommentMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CommentMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CommentMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.CommentMsg;

            /**
             * Decodes a CommentMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CommentMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.CommentMsg;

            /**
             * Verifies a CommentMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CommentMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CommentMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.CommentMsg;

            /**
             * Creates a plain object from a CommentMsg message. Also converts values to other types if specified.
             * @param message CommentMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.CommentMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CommentMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FriendRequestMsg. */
        interface IFriendRequestMsg {

            /** FriendRequestMsg sender */
            sender?: (pb.im.IUserInfo|null);

            /** FriendRequestMsg reason */
            reason?: (string|null);
        }

        /** Represents a FriendRequestMsg. */
        class FriendRequestMsg implements IFriendRequestMsg {

            /**
             * Constructs a new FriendRequestMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IFriendRequestMsg);

            /** FriendRequestMsg sender. */
            public sender?: (pb.im.IUserInfo|null);

            /** FriendRequestMsg reason. */
            public reason: string;

            /**
             * Creates a new FriendRequestMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FriendRequestMsg instance
             */
            public static create(properties?: pb.im.IFriendRequestMsg): pb.im.FriendRequestMsg;

            /**
             * Encodes the specified FriendRequestMsg message. Does not implicitly {@link pb.im.FriendRequestMsg.verify|verify} messages.
             * @param message FriendRequestMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IFriendRequestMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FriendRequestMsg message, length delimited. Does not implicitly {@link pb.im.FriendRequestMsg.verify|verify} messages.
             * @param message FriendRequestMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IFriendRequestMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FriendRequestMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FriendRequestMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.FriendRequestMsg;

            /**
             * Decodes a FriendRequestMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FriendRequestMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.FriendRequestMsg;

            /**
             * Verifies a FriendRequestMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FriendRequestMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FriendRequestMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.FriendRequestMsg;

            /**
             * Creates a plain object from a FriendRequestMsg message. Also converts values to other types if specified.
             * @param message FriendRequestMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.FriendRequestMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FriendRequestMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FriendRequestResponseMsg. */
        interface IFriendRequestResponseMsg {

            /** FriendRequestResponseMsg sender */
            sender?: (pb.im.IUserInfo|null);

            /** FriendRequestResponseMsg accepted */
            accepted?: (boolean|null);
        }

        /** Represents a FriendRequestResponseMsg. */
        class FriendRequestResponseMsg implements IFriendRequestResponseMsg {

            /**
             * Constructs a new FriendRequestResponseMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IFriendRequestResponseMsg);

            /** FriendRequestResponseMsg sender. */
            public sender?: (pb.im.IUserInfo|null);

            /** FriendRequestResponseMsg accepted. */
            public accepted: boolean;

            /**
             * Creates a new FriendRequestResponseMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FriendRequestResponseMsg instance
             */
            public static create(properties?: pb.im.IFriendRequestResponseMsg): pb.im.FriendRequestResponseMsg;

            /**
             * Encodes the specified FriendRequestResponseMsg message. Does not implicitly {@link pb.im.FriendRequestResponseMsg.verify|verify} messages.
             * @param message FriendRequestResponseMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IFriendRequestResponseMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FriendRequestResponseMsg message, length delimited. Does not implicitly {@link pb.im.FriendRequestResponseMsg.verify|verify} messages.
             * @param message FriendRequestResponseMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IFriendRequestResponseMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FriendRequestResponseMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FriendRequestResponseMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.FriendRequestResponseMsg;

            /**
             * Decodes a FriendRequestResponseMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FriendRequestResponseMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.FriendRequestResponseMsg;

            /**
             * Verifies a FriendRequestResponseMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FriendRequestResponseMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FriendRequestResponseMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.FriendRequestResponseMsg;

            /**
             * Creates a plain object from a FriendRequestResponseMsg message. Also converts values to other types if specified.
             * @param message FriendRequestResponseMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.FriendRequestResponseMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FriendRequestResponseMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MomentPostMsg. */
        interface IMomentPostMsg {

            /** MomentPostMsg sender */
            sender?: (pb.im.IUserInfo|null);
        }

        /** Represents a MomentPostMsg. */
        class MomentPostMsg implements IMomentPostMsg {

            /**
             * Constructs a new MomentPostMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IMomentPostMsg);

            /** MomentPostMsg sender. */
            public sender?: (pb.im.IUserInfo|null);

            /**
             * Creates a new MomentPostMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MomentPostMsg instance
             */
            public static create(properties?: pb.im.IMomentPostMsg): pb.im.MomentPostMsg;

            /**
             * Encodes the specified MomentPostMsg message. Does not implicitly {@link pb.im.MomentPostMsg.verify|verify} messages.
             * @param message MomentPostMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IMomentPostMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MomentPostMsg message, length delimited. Does not implicitly {@link pb.im.MomentPostMsg.verify|verify} messages.
             * @param message MomentPostMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IMomentPostMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MomentPostMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MomentPostMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.MomentPostMsg;

            /**
             * Decodes a MomentPostMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MomentPostMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.MomentPostMsg;

            /**
             * Verifies a MomentPostMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MomentPostMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MomentPostMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.MomentPostMsg;

            /**
             * Creates a plain object from a MomentPostMsg message. Also converts values to other types if specified.
             * @param message MomentPostMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.MomentPostMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MomentPostMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an AnnouncementMsg. */
        interface IAnnouncementMsg {

            /** AnnouncementMsg content */
            content?: (string|null);
        }

        /** Represents an AnnouncementMsg. */
        class AnnouncementMsg implements IAnnouncementMsg {

            /**
             * Constructs a new AnnouncementMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IAnnouncementMsg);

            /** AnnouncementMsg content. */
            public content: string;

            /**
             * Creates a new AnnouncementMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AnnouncementMsg instance
             */
            public static create(properties?: pb.im.IAnnouncementMsg): pb.im.AnnouncementMsg;

            /**
             * Encodes the specified AnnouncementMsg message. Does not implicitly {@link pb.im.AnnouncementMsg.verify|verify} messages.
             * @param message AnnouncementMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IAnnouncementMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AnnouncementMsg message, length delimited. Does not implicitly {@link pb.im.AnnouncementMsg.verify|verify} messages.
             * @param message AnnouncementMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IAnnouncementMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AnnouncementMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AnnouncementMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.AnnouncementMsg;

            /**
             * Decodes an AnnouncementMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AnnouncementMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.AnnouncementMsg;

            /**
             * Verifies an AnnouncementMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AnnouncementMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AnnouncementMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.AnnouncementMsg;

            /**
             * Creates a plain object from an AnnouncementMsg message. Also converts values to other types if specified.
             * @param message AnnouncementMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.AnnouncementMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AnnouncementMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameInvitationMsg. */
        interface IGameInvitationMsg {

            /** GameInvitationMsg sender */
            sender?: (pb.im.IUserInfo|null);

            /** GameInvitationMsg roomId */
            roomId?: (string|null);

            /** GameInvitationMsg assetScore */
            assetScore?: (number|null);

            /** GameInvitationMsg assetLevel */
            assetLevel?: (string|null);
        }

        /** Represents a GameInvitationMsg. */
        class GameInvitationMsg implements IGameInvitationMsg {

            /**
             * Constructs a new GameInvitationMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IGameInvitationMsg);

            /** GameInvitationMsg sender. */
            public sender?: (pb.im.IUserInfo|null);

            /** GameInvitationMsg roomId. */
            public roomId: string;

            /** GameInvitationMsg assetScore. */
            public assetScore: number;

            /** GameInvitationMsg assetLevel. */
            public assetLevel: string;

            /**
             * Creates a new GameInvitationMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameInvitationMsg instance
             */
            public static create(properties?: pb.im.IGameInvitationMsg): pb.im.GameInvitationMsg;

            /**
             * Encodes the specified GameInvitationMsg message. Does not implicitly {@link pb.im.GameInvitationMsg.verify|verify} messages.
             * @param message GameInvitationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IGameInvitationMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameInvitationMsg message, length delimited. Does not implicitly {@link pb.im.GameInvitationMsg.verify|verify} messages.
             * @param message GameInvitationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IGameInvitationMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameInvitationMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameInvitationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.GameInvitationMsg;

            /**
             * Decodes a GameInvitationMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameInvitationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.GameInvitationMsg;

            /**
             * Verifies a GameInvitationMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameInvitationMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameInvitationMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.GameInvitationMsg;

            /**
             * Creates a plain object from a GameInvitationMsg message. Also converts values to other types if specified.
             * @param message GameInvitationMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.GameInvitationMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameInvitationMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FriendRelationshipChangeMsg. */
        interface IFriendRelationshipChangeMsg {

            /** FriendRelationshipChangeMsg type */
            type?: (pb.im.FriendRelationshipChangeMsg.ChangeType|null);

            /** FriendRelationshipChangeMsg userId */
            userId?: (Long|null);
        }

        /** Represents a FriendRelationshipChangeMsg. */
        class FriendRelationshipChangeMsg implements IFriendRelationshipChangeMsg {

            /**
             * Constructs a new FriendRelationshipChangeMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IFriendRelationshipChangeMsg);

            /** FriendRelationshipChangeMsg type. */
            public type: pb.im.FriendRelationshipChangeMsg.ChangeType;

            /** FriendRelationshipChangeMsg userId. */
            public userId: Long;

            /**
             * Creates a new FriendRelationshipChangeMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FriendRelationshipChangeMsg instance
             */
            public static create(properties?: pb.im.IFriendRelationshipChangeMsg): pb.im.FriendRelationshipChangeMsg;

            /**
             * Encodes the specified FriendRelationshipChangeMsg message. Does not implicitly {@link pb.im.FriendRelationshipChangeMsg.verify|verify} messages.
             * @param message FriendRelationshipChangeMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IFriendRelationshipChangeMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FriendRelationshipChangeMsg message, length delimited. Does not implicitly {@link pb.im.FriendRelationshipChangeMsg.verify|verify} messages.
             * @param message FriendRelationshipChangeMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IFriendRelationshipChangeMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FriendRelationshipChangeMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FriendRelationshipChangeMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.FriendRelationshipChangeMsg;

            /**
             * Decodes a FriendRelationshipChangeMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FriendRelationshipChangeMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.FriendRelationshipChangeMsg;

            /**
             * Verifies a FriendRelationshipChangeMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FriendRelationshipChangeMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FriendRelationshipChangeMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.FriendRelationshipChangeMsg;

            /**
             * Creates a plain object from a FriendRelationshipChangeMsg message. Also converts values to other types if specified.
             * @param message FriendRelationshipChangeMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.FriendRelationshipChangeMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FriendRelationshipChangeMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FriendRelationshipChangeMsg {

            /** ChangeType enum. */
            enum ChangeType {
                UNKNOWN = 0,
                ADD = 1,
                DELETE = 2
            }
        }

        /** Properties of a GroupInvitationMsg. */
        interface IGroupInvitationMsg {

            /** GroupInvitationMsg name */
            name?: (string|null);

            /** GroupInvitationMsg memberNum */
            memberNum?: (number|null);

            /** GroupInvitationMsg ranking */
            ranking?: (string|null);

            /** GroupInvitationMsg groupId */
            groupId?: (string|null);

            /** GroupInvitationMsg groupAvatarUrl */
            groupAvatarUrl?: (string|null);
        }

        /** Represents a GroupInvitationMsg. */
        class GroupInvitationMsg implements IGroupInvitationMsg {

            /**
             * Constructs a new GroupInvitationMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IGroupInvitationMsg);

            /** GroupInvitationMsg name. */
            public name: string;

            /** GroupInvitationMsg memberNum. */
            public memberNum: number;

            /** GroupInvitationMsg ranking. */
            public ranking: string;

            /** GroupInvitationMsg groupId. */
            public groupId: string;

            /** GroupInvitationMsg groupAvatarUrl. */
            public groupAvatarUrl: string;

            /**
             * Creates a new GroupInvitationMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GroupInvitationMsg instance
             */
            public static create(properties?: pb.im.IGroupInvitationMsg): pb.im.GroupInvitationMsg;

            /**
             * Encodes the specified GroupInvitationMsg message. Does not implicitly {@link pb.im.GroupInvitationMsg.verify|verify} messages.
             * @param message GroupInvitationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IGroupInvitationMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GroupInvitationMsg message, length delimited. Does not implicitly {@link pb.im.GroupInvitationMsg.verify|verify} messages.
             * @param message GroupInvitationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IGroupInvitationMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GroupInvitationMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GroupInvitationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.GroupInvitationMsg;

            /**
             * Decodes a GroupInvitationMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GroupInvitationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.GroupInvitationMsg;

            /**
             * Verifies a GroupInvitationMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GroupInvitationMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GroupInvitationMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.GroupInvitationMsg;

            /**
             * Creates a plain object from a GroupInvitationMsg message. Also converts values to other types if specified.
             * @param message GroupInvitationMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.GroupInvitationMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GroupInvitationMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GroupJoinApplyMsg. */
        interface IGroupJoinApplyMsg {

            /** GroupJoinApplyMsg applier */
            applier?: (pb.im.IUserInfo|null);

            /** GroupJoinApplyMsg groupInfo */
            groupInfo?: (pb.im.IGroupInfo|null);

            /** GroupJoinApplyMsg invitorNickName */
            invitorNickName?: (string|null);

            /** GroupJoinApplyMsg hasPaid */
            hasPaid?: (boolean|null);

            /** GroupJoinApplyMsg accAmountString */
            accAmountString?: (string|null);

            /** GroupJoinApplyMsg applicationId */
            applicationId?: (string|null);
        }

        /** Represents a GroupJoinApplyMsg. */
        class GroupJoinApplyMsg implements IGroupJoinApplyMsg {

            /**
             * Constructs a new GroupJoinApplyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IGroupJoinApplyMsg);

            /** GroupJoinApplyMsg applier. */
            public applier?: (pb.im.IUserInfo|null);

            /** GroupJoinApplyMsg groupInfo. */
            public groupInfo?: (pb.im.IGroupInfo|null);

            /** GroupJoinApplyMsg invitorNickName. */
            public invitorNickName: string;

            /** GroupJoinApplyMsg hasPaid. */
            public hasPaid: boolean;

            /** GroupJoinApplyMsg accAmountString. */
            public accAmountString: string;

            /** GroupJoinApplyMsg applicationId. */
            public applicationId: string;

            /**
             * Creates a new GroupJoinApplyMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GroupJoinApplyMsg instance
             */
            public static create(properties?: pb.im.IGroupJoinApplyMsg): pb.im.GroupJoinApplyMsg;

            /**
             * Encodes the specified GroupJoinApplyMsg message. Does not implicitly {@link pb.im.GroupJoinApplyMsg.verify|verify} messages.
             * @param message GroupJoinApplyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IGroupJoinApplyMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GroupJoinApplyMsg message, length delimited. Does not implicitly {@link pb.im.GroupJoinApplyMsg.verify|verify} messages.
             * @param message GroupJoinApplyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IGroupJoinApplyMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GroupJoinApplyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GroupJoinApplyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.GroupJoinApplyMsg;

            /**
             * Decodes a GroupJoinApplyMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GroupJoinApplyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.GroupJoinApplyMsg;

            /**
             * Verifies a GroupJoinApplyMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GroupJoinApplyMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GroupJoinApplyMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.GroupJoinApplyMsg;

            /**
             * Creates a plain object from a GroupJoinApplyMsg message. Also converts values to other types if specified.
             * @param message GroupJoinApplyMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.GroupJoinApplyMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GroupJoinApplyMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GroupInfo. */
        interface IGroupInfo {

            /** GroupInfo groupId */
            groupId?: (string|null);

            /** GroupInfo name */
            name?: (string|null);

            /** GroupInfo faceUrl */
            faceUrl?: (string|null);
        }

        /** Represents a GroupInfo. */
        class GroupInfo implements IGroupInfo {

            /**
             * Constructs a new GroupInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IGroupInfo);

            /** GroupInfo groupId. */
            public groupId: string;

            /** GroupInfo name. */
            public name: string;

            /** GroupInfo faceUrl. */
            public faceUrl: string;

            /**
             * Creates a new GroupInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GroupInfo instance
             */
            public static create(properties?: pb.im.IGroupInfo): pb.im.GroupInfo;

            /**
             * Encodes the specified GroupInfo message. Does not implicitly {@link pb.im.GroupInfo.verify|verify} messages.
             * @param message GroupInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IGroupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GroupInfo message, length delimited. Does not implicitly {@link pb.im.GroupInfo.verify|verify} messages.
             * @param message GroupInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IGroupInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GroupInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GroupInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.GroupInfo;

            /**
             * Decodes a GroupInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GroupInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.GroupInfo;

            /**
             * Verifies a GroupInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GroupInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GroupInfo
             */
            public static fromObject(object: { [k: string]: any }): pb.im.GroupInfo;

            /**
             * Creates a plain object from a GroupInfo message. Also converts values to other types if specified.
             * @param message GroupInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.GroupInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GroupInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GroupJoinResultMsg. */
        interface IGroupJoinResultMsg {

            /** GroupJoinResultMsg groupInfo */
            groupInfo?: (pb.im.IGroupInfo|null);

            /** GroupJoinResultMsg accepted */
            accepted?: (boolean|null);

            /** GroupJoinResultMsg hasPaid */
            hasPaid?: (boolean|null);

            /** GroupJoinResultMsg accAmountString */
            accAmountString?: (string|null);
        }

        /** Represents a GroupJoinResultMsg. */
        class GroupJoinResultMsg implements IGroupJoinResultMsg {

            /**
             * Constructs a new GroupJoinResultMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IGroupJoinResultMsg);

            /** GroupJoinResultMsg groupInfo. */
            public groupInfo?: (pb.im.IGroupInfo|null);

            /** GroupJoinResultMsg accepted. */
            public accepted: boolean;

            /** GroupJoinResultMsg hasPaid. */
            public hasPaid: boolean;

            /** GroupJoinResultMsg accAmountString. */
            public accAmountString: string;

            /**
             * Creates a new GroupJoinResultMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GroupJoinResultMsg instance
             */
            public static create(properties?: pb.im.IGroupJoinResultMsg): pb.im.GroupJoinResultMsg;

            /**
             * Encodes the specified GroupJoinResultMsg message. Does not implicitly {@link pb.im.GroupJoinResultMsg.verify|verify} messages.
             * @param message GroupJoinResultMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IGroupJoinResultMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GroupJoinResultMsg message, length delimited. Does not implicitly {@link pb.im.GroupJoinResultMsg.verify|verify} messages.
             * @param message GroupJoinResultMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IGroupJoinResultMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GroupJoinResultMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GroupJoinResultMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.GroupJoinResultMsg;

            /**
             * Decodes a GroupJoinResultMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GroupJoinResultMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.GroupJoinResultMsg;

            /**
             * Verifies a GroupJoinResultMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GroupJoinResultMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GroupJoinResultMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.GroupJoinResultMsg;

            /**
             * Creates a plain object from a GroupJoinResultMsg message. Also converts values to other types if specified.
             * @param message GroupJoinResultMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.GroupJoinResultMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GroupJoinResultMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a TransactionNotificationType. */
        interface ITransactionNotificationType {
        }

        /** Represents a TransactionNotificationType. */
        class TransactionNotificationType implements ITransactionNotificationType {

            /**
             * Constructs a new TransactionNotificationType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.ITransactionNotificationType);

            /**
             * Creates a new TransactionNotificationType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TransactionNotificationType instance
             */
            public static create(properties?: pb.im.ITransactionNotificationType): pb.im.TransactionNotificationType;

            /**
             * Encodes the specified TransactionNotificationType message. Does not implicitly {@link pb.im.TransactionNotificationType.verify|verify} messages.
             * @param message TransactionNotificationType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.ITransactionNotificationType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TransactionNotificationType message, length delimited. Does not implicitly {@link pb.im.TransactionNotificationType.verify|verify} messages.
             * @param message TransactionNotificationType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.ITransactionNotificationType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TransactionNotificationType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TransactionNotificationType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.TransactionNotificationType;

            /**
             * Decodes a TransactionNotificationType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TransactionNotificationType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.TransactionNotificationType;

            /**
             * Verifies a TransactionNotificationType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TransactionNotificationType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TransactionNotificationType
             */
            public static fromObject(object: { [k: string]: any }): pb.im.TransactionNotificationType;

            /**
             * Creates a plain object from a TransactionNotificationType message. Also converts values to other types if specified.
             * @param message TransactionNotificationType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.TransactionNotificationType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TransactionNotificationType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace TransactionNotificationType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                RECEIVE = 1,
                PAY = 2,
                REFUND = 3
            }
        }

        /** Properties of a TransactionNotificationMsg. */
        interface ITransactionNotificationMsg {

            /** TransactionNotificationMsg user */
            user?: (pb.im.IUserInfo|null);

            /** TransactionNotificationMsg comment */
            comment?: (string|null);

            /** TransactionNotificationMsg amount */
            amount?: (string|null);

            /** TransactionNotificationMsg tradeId */
            tradeId?: (string|null);

            /** TransactionNotificationMsg type */
            type?: (pb.im.TransactionNotificationType.Enum|null);
        }

        /** Represents a TransactionNotificationMsg. */
        class TransactionNotificationMsg implements ITransactionNotificationMsg {

            /**
             * Constructs a new TransactionNotificationMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.ITransactionNotificationMsg);

            /** TransactionNotificationMsg user. */
            public user?: (pb.im.IUserInfo|null);

            /** TransactionNotificationMsg comment. */
            public comment: string;

            /** TransactionNotificationMsg amount. */
            public amount: string;

            /** TransactionNotificationMsg tradeId. */
            public tradeId: string;

            /** TransactionNotificationMsg type. */
            public type: pb.im.TransactionNotificationType.Enum;

            /**
             * Creates a new TransactionNotificationMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TransactionNotificationMsg instance
             */
            public static create(properties?: pb.im.ITransactionNotificationMsg): pb.im.TransactionNotificationMsg;

            /**
             * Encodes the specified TransactionNotificationMsg message. Does not implicitly {@link pb.im.TransactionNotificationMsg.verify|verify} messages.
             * @param message TransactionNotificationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.ITransactionNotificationMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TransactionNotificationMsg message, length delimited. Does not implicitly {@link pb.im.TransactionNotificationMsg.verify|verify} messages.
             * @param message TransactionNotificationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.ITransactionNotificationMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TransactionNotificationMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TransactionNotificationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.TransactionNotificationMsg;

            /**
             * Decodes a TransactionNotificationMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TransactionNotificationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.TransactionNotificationMsg;

            /**
             * Verifies a TransactionNotificationMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TransactionNotificationMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TransactionNotificationMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.TransactionNotificationMsg;

            /**
             * Creates a plain object from a TransactionNotificationMsg message. Also converts values to other types if specified.
             * @param message TransactionNotificationMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.TransactionNotificationMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TransactionNotificationMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LinkMsg. */
        interface ILinkMsg {

            /** LinkMsg title */
            title?: (string|null);

            /** LinkMsg desc */
            desc?: (string|null);

            /** LinkMsg url */
            url?: (string|null);

            /** LinkMsg faviconUrl */
            faviconUrl?: (string|null);
        }

        /** Represents a LinkMsg. */
        class LinkMsg implements ILinkMsg {

            /**
             * Constructs a new LinkMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.ILinkMsg);

            /** LinkMsg title. */
            public title: string;

            /** LinkMsg desc. */
            public desc: string;

            /** LinkMsg url. */
            public url: string;

            /** LinkMsg faviconUrl. */
            public faviconUrl: string;

            /**
             * Creates a new LinkMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LinkMsg instance
             */
            public static create(properties?: pb.im.ILinkMsg): pb.im.LinkMsg;

            /**
             * Encodes the specified LinkMsg message. Does not implicitly {@link pb.im.LinkMsg.verify|verify} messages.
             * @param message LinkMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.ILinkMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LinkMsg message, length delimited. Does not implicitly {@link pb.im.LinkMsg.verify|verify} messages.
             * @param message LinkMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.ILinkMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LinkMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LinkMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.LinkMsg;

            /**
             * Decodes a LinkMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LinkMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.LinkMsg;

            /**
             * Verifies a LinkMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LinkMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LinkMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.LinkMsg;

            /**
             * Creates a plain object from a LinkMsg message. Also converts values to other types if specified.
             * @param message LinkMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.LinkMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LinkMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GroupMessageThumbUpMsg. */
        interface IGroupMessageThumbUpMsg {

            /** GroupMessageThumbUpMsg groupID */
            groupID?: (string|null);

            /** GroupMessageThumbUpMsg msgID */
            msgID?: (string|null);

            /** GroupMessageThumbUpMsg count */
            count?: (number|null);
        }

        /** Represents a GroupMessageThumbUpMsg. */
        class GroupMessageThumbUpMsg implements IGroupMessageThumbUpMsg {

            /**
             * Constructs a new GroupMessageThumbUpMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.im.IGroupMessageThumbUpMsg);

            /** GroupMessageThumbUpMsg groupID. */
            public groupID: string;

            /** GroupMessageThumbUpMsg msgID. */
            public msgID: string;

            /** GroupMessageThumbUpMsg count. */
            public count: number;

            /**
             * Creates a new GroupMessageThumbUpMsg instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GroupMessageThumbUpMsg instance
             */
            public static create(properties?: pb.im.IGroupMessageThumbUpMsg): pb.im.GroupMessageThumbUpMsg;

            /**
             * Encodes the specified GroupMessageThumbUpMsg message. Does not implicitly {@link pb.im.GroupMessageThumbUpMsg.verify|verify} messages.
             * @param message GroupMessageThumbUpMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.im.IGroupMessageThumbUpMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GroupMessageThumbUpMsg message, length delimited. Does not implicitly {@link pb.im.GroupMessageThumbUpMsg.verify|verify} messages.
             * @param message GroupMessageThumbUpMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.im.IGroupMessageThumbUpMsg, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GroupMessageThumbUpMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GroupMessageThumbUpMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.im.GroupMessageThumbUpMsg;

            /**
             * Decodes a GroupMessageThumbUpMsg message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GroupMessageThumbUpMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.im.GroupMessageThumbUpMsg;

            /**
             * Verifies a GroupMessageThumbUpMsg message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GroupMessageThumbUpMsg message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GroupMessageThumbUpMsg
             */
            public static fromObject(object: { [k: string]: any }): pb.im.GroupMessageThumbUpMsg;

            /**
             * Creates a plain object from a GroupMessageThumbUpMsg message. Also converts values to other types if specified.
             * @param message GroupMessageThumbUpMsg
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.im.GroupMessageThumbUpMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GroupMessageThumbUpMsg to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace consts. */
    namespace consts {

        /** Properties of a MomentPostType. */
        interface IMomentPostType {
        }

        /** Represents a MomentPostType. */
        class MomentPostType implements IMomentPostType {

            /**
             * Constructs a new MomentPostType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.consts.IMomentPostType);

            /**
             * Creates a new MomentPostType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MomentPostType instance
             */
            public static create(properties?: pb.consts.IMomentPostType): pb.consts.MomentPostType;

            /**
             * Encodes the specified MomentPostType message. Does not implicitly {@link pb.consts.MomentPostType.verify|verify} messages.
             * @param message MomentPostType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.consts.IMomentPostType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MomentPostType message, length delimited. Does not implicitly {@link pb.consts.MomentPostType.verify|verify} messages.
             * @param message MomentPostType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.consts.IMomentPostType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MomentPostType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MomentPostType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.consts.MomentPostType;

            /**
             * Decodes a MomentPostType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MomentPostType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.consts.MomentPostType;

            /**
             * Verifies a MomentPostType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MomentPostType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MomentPostType
             */
            public static fromObject(object: { [k: string]: any }): pb.consts.MomentPostType;

            /**
             * Creates a plain object from a MomentPostType message. Also converts values to other types if specified.
             * @param message MomentPostType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.consts.MomentPostType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MomentPostType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MomentPostType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                TEXT = 1,
                SUMMARY = 2,
                LINK = 3
            }
        }

        /** Properties of an ObjectType. */
        interface IObjectType {
        }

        /** Represents an ObjectType. */
        class ObjectType implements IObjectType {

            /**
             * Constructs a new ObjectType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.consts.IObjectType);

            /**
             * Creates a new ObjectType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ObjectType instance
             */
            public static create(properties?: pb.consts.IObjectType): pb.consts.ObjectType;

            /**
             * Encodes the specified ObjectType message. Does not implicitly {@link pb.consts.ObjectType.verify|verify} messages.
             * @param message ObjectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.consts.IObjectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ObjectType message, length delimited. Does not implicitly {@link pb.consts.ObjectType.verify|verify} messages.
             * @param message ObjectType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.consts.IObjectType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ObjectType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ObjectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.consts.ObjectType;

            /**
             * Decodes an ObjectType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ObjectType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.consts.ObjectType;

            /**
             * Verifies an ObjectType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ObjectType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ObjectType
             */
            public static fromObject(object: { [k: string]: any }): pb.consts.ObjectType;

            /**
             * Creates a plain object from an ObjectType message. Also converts values to other types if specified.
             * @param message ObjectType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.consts.ObjectType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ObjectType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace ObjectType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                MOMENT = 1,
                SUMMARY = 2,
                GROUP_MESSAGE = 3,
                COMMENT = 4,
                LINK = 5
            }
        }

        /** Properties of a MissionTargetType. */
        interface IMissionTargetType {
        }

        /** Represents a MissionTargetType. */
        class MissionTargetType implements IMissionTargetType {

            /**
             * Constructs a new MissionTargetType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.consts.IMissionTargetType);

            /**
             * Creates a new MissionTargetType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MissionTargetType instance
             */
            public static create(properties?: pb.consts.IMissionTargetType): pb.consts.MissionTargetType;

            /**
             * Encodes the specified MissionTargetType message. Does not implicitly {@link pb.consts.MissionTargetType.verify|verify} messages.
             * @param message MissionTargetType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.consts.IMissionTargetType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MissionTargetType message, length delimited. Does not implicitly {@link pb.consts.MissionTargetType.verify|verify} messages.
             * @param message MissionTargetType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.consts.IMissionTargetType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MissionTargetType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MissionTargetType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.consts.MissionTargetType;

            /**
             * Decodes a MissionTargetType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MissionTargetType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.consts.MissionTargetType;

            /**
             * Verifies a MissionTargetType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MissionTargetType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MissionTargetType
             */
            public static fromObject(object: { [k: string]: any }): pb.consts.MissionTargetType;

            /**
             * Creates a plain object from a MissionTargetType message. Also converts values to other types if specified.
             * @param message MissionTargetType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.consts.MissionTargetType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MissionTargetType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace MissionTargetType {

            /** Enum enum. */
            enum Enum {
                Unknown = 0,
                Login = 1,
                ShareGame = 2,
                PlayGame = 3,
                PlayStandardMatch = 4,
                PlayRankMatch = 5,
                WealthFree = 6,
                WealthFreeInRankMatch = 7,
                NetAsset = 8,
                NetAssetInRankMatch = 9,
                TeamWithFriendAndPlayStandGame = 10,
                RankGameWealthFreeSpendNYear = 11,
                RankGameUseDiffRoleWealthFree = 12
            }
        }
    }

    /** Namespace events. */
    namespace events {

        /** Properties of a HireBot. */
        interface IHireBot {

            /** HireBot timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** HireBot matchType */
            matchType?: (pb.common.MatchType|null);

            /** HireBot roomSize */
            roomSize?: (number|null);

            /** HireBot num */
            num?: (number|null);

            /** HireBot roomNumber */
            roomNumber?: (number|null);
        }

        /** Represents a HireBot. */
        class HireBot implements IHireBot {

            /**
             * Constructs a new HireBot.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IHireBot);

            /** HireBot timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** HireBot matchType. */
            public matchType: pb.common.MatchType;

            /** HireBot roomSize. */
            public roomSize: number;

            /** HireBot num. */
            public num: number;

            /** HireBot roomNumber. */
            public roomNumber: number;

            /**
             * Creates a new HireBot instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HireBot instance
             */
            public static create(properties?: pb.events.IHireBot): pb.events.HireBot;

            /**
             * Encodes the specified HireBot message. Does not implicitly {@link pb.events.HireBot.verify|verify} messages.
             * @param message HireBot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IHireBot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HireBot message, length delimited. Does not implicitly {@link pb.events.HireBot.verify|verify} messages.
             * @param message HireBot message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IHireBot, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HireBot message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HireBot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.HireBot;

            /**
             * Decodes a HireBot message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HireBot
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.HireBot;

            /**
             * Verifies a HireBot message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HireBot message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HireBot
             */
            public static fromObject(object: { [k: string]: any }): pb.events.HireBot;

            /**
             * Creates a plain object from a HireBot message. Also converts values to other types if specified.
             * @param message HireBot
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.HireBot, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HireBot to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LobbyEventType. */
        interface ILobbyEventType {
        }

        /** Represents a LobbyEventType. */
        class LobbyEventType implements ILobbyEventType {

            /**
             * Constructs a new LobbyEventType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.ILobbyEventType);

            /**
             * Creates a new LobbyEventType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LobbyEventType instance
             */
            public static create(properties?: pb.events.ILobbyEventType): pb.events.LobbyEventType;

            /**
             * Encodes the specified LobbyEventType message. Does not implicitly {@link pb.events.LobbyEventType.verify|verify} messages.
             * @param message LobbyEventType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.ILobbyEventType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LobbyEventType message, length delimited. Does not implicitly {@link pb.events.LobbyEventType.verify|verify} messages.
             * @param message LobbyEventType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.ILobbyEventType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LobbyEventType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LobbyEventType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.LobbyEventType;

            /**
             * Decodes a LobbyEventType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LobbyEventType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.LobbyEventType;

            /**
             * Verifies a LobbyEventType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LobbyEventType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LobbyEventType
             */
            public static fromObject(object: { [k: string]: any }): pb.events.LobbyEventType;

            /**
             * Creates a plain object from a LobbyEventType message. Also converts values to other types if specified.
             * @param message LobbyEventType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.LobbyEventType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LobbyEventType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace LobbyEventType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                START_GAME = 1
            }
        }

        /** Properties of a LobbyEventStartGame. */
        interface ILobbyEventStartGame {

            /** LobbyEventStartGame ownerID */
            ownerID?: (Long|null);

            /** LobbyEventStartGame roomID */
            roomID?: (string|null);

            /** LobbyEventStartGame roomNumber */
            roomNumber?: (number|null);

            /** LobbyEventStartGame roommates */
            roommates?: (Long[]|null);

            /** LobbyEventStartGame matchType */
            matchType?: (pb.common.MatchType|null);
        }

        /** Represents a LobbyEventStartGame. */
        class LobbyEventStartGame implements ILobbyEventStartGame {

            /**
             * Constructs a new LobbyEventStartGame.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.ILobbyEventStartGame);

            /** LobbyEventStartGame ownerID. */
            public ownerID: Long;

            /** LobbyEventStartGame roomID. */
            public roomID: string;

            /** LobbyEventStartGame roomNumber. */
            public roomNumber: number;

            /** LobbyEventStartGame roommates. */
            public roommates: Long[];

            /** LobbyEventStartGame matchType. */
            public matchType: pb.common.MatchType;

            /**
             * Creates a new LobbyEventStartGame instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LobbyEventStartGame instance
             */
            public static create(properties?: pb.events.ILobbyEventStartGame): pb.events.LobbyEventStartGame;

            /**
             * Encodes the specified LobbyEventStartGame message. Does not implicitly {@link pb.events.LobbyEventStartGame.verify|verify} messages.
             * @param message LobbyEventStartGame message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.ILobbyEventStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LobbyEventStartGame message, length delimited. Does not implicitly {@link pb.events.LobbyEventStartGame.verify|verify} messages.
             * @param message LobbyEventStartGame message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.ILobbyEventStartGame, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LobbyEventStartGame message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LobbyEventStartGame
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.LobbyEventStartGame;

            /**
             * Decodes a LobbyEventStartGame message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LobbyEventStartGame
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.LobbyEventStartGame;

            /**
             * Verifies a LobbyEventStartGame message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LobbyEventStartGame message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LobbyEventStartGame
             */
            public static fromObject(object: { [k: string]: any }): pb.events.LobbyEventStartGame;

            /**
             * Creates a plain object from a LobbyEventStartGame message. Also converts values to other types if specified.
             * @param message LobbyEventStartGame
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.LobbyEventStartGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LobbyEventStartGame to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a LobbyEvent. */
        interface ILobbyEvent {

            /** LobbyEvent timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** LobbyEvent typ */
            typ?: (pb.events.LobbyEventType.Enum|null);

            /** LobbyEvent detail */
            detail?: (google.protobuf.IAny|null);
        }

        /** Represents a LobbyEvent. */
        class LobbyEvent implements ILobbyEvent {

            /**
             * Constructs a new LobbyEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.ILobbyEvent);

            /** LobbyEvent timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** LobbyEvent typ. */
            public typ: pb.events.LobbyEventType.Enum;

            /** LobbyEvent detail. */
            public detail?: (google.protobuf.IAny|null);

            /**
             * Creates a new LobbyEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LobbyEvent instance
             */
            public static create(properties?: pb.events.ILobbyEvent): pb.events.LobbyEvent;

            /**
             * Encodes the specified LobbyEvent message. Does not implicitly {@link pb.events.LobbyEvent.verify|verify} messages.
             * @param message LobbyEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.ILobbyEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LobbyEvent message, length delimited. Does not implicitly {@link pb.events.LobbyEvent.verify|verify} messages.
             * @param message LobbyEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.ILobbyEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LobbyEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LobbyEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.LobbyEvent;

            /**
             * Decodes a LobbyEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LobbyEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.LobbyEvent;

            /**
             * Verifies a LobbyEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LobbyEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LobbyEvent
             */
            public static fromObject(object: { [k: string]: any }): pb.events.LobbyEvent;

            /**
             * Creates a plain object from a LobbyEvent message. Also converts values to other types if specified.
             * @param message LobbyEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.LobbyEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LobbyEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GeneralEventType. */
        interface IGeneralEventType {
        }

        /** Represents a GeneralEventType. */
        class GeneralEventType implements IGeneralEventType {

            /**
             * Constructs a new GeneralEventType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IGeneralEventType);

            /**
             * Creates a new GeneralEventType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GeneralEventType instance
             */
            public static create(properties?: pb.events.IGeneralEventType): pb.events.GeneralEventType;

            /**
             * Encodes the specified GeneralEventType message. Does not implicitly {@link pb.events.GeneralEventType.verify|verify} messages.
             * @param message GeneralEventType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IGeneralEventType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GeneralEventType message, length delimited. Does not implicitly {@link pb.events.GeneralEventType.verify|verify} messages.
             * @param message GeneralEventType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IGeneralEventType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneralEventType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GeneralEventType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.GeneralEventType;

            /**
             * Decodes a GeneralEventType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GeneralEventType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.GeneralEventType;

            /**
             * Verifies a GeneralEventType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneralEventType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneralEventType
             */
            public static fromObject(object: { [k: string]: any }): pb.events.GeneralEventType;

            /**
             * Creates a plain object from a GeneralEventType message. Also converts values to other types if specified.
             * @param message GeneralEventType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.GeneralEventType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneralEventType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GeneralEventType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                USER_ONLINE = 1
            }
        }

        /** Properties of a UserOnlineEvent. */
        interface IUserOnlineEvent {

            /** UserOnlineEvent userId */
            userId?: (Long|null);

            /** UserOnlineEvent clientAddr */
            clientAddr?: (string|null);

            /** UserOnlineEvent clientPort */
            clientPort?: (number|null);

            /** UserOnlineEvent loginId */
            loginId?: (string|null);
        }

        /** Represents a UserOnlineEvent. */
        class UserOnlineEvent implements IUserOnlineEvent {

            /**
             * Constructs a new UserOnlineEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IUserOnlineEvent);

            /** UserOnlineEvent userId. */
            public userId: Long;

            /** UserOnlineEvent clientAddr. */
            public clientAddr: string;

            /** UserOnlineEvent clientPort. */
            public clientPort: number;

            /** UserOnlineEvent loginId. */
            public loginId: string;

            /**
             * Creates a new UserOnlineEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UserOnlineEvent instance
             */
            public static create(properties?: pb.events.IUserOnlineEvent): pb.events.UserOnlineEvent;

            /**
             * Encodes the specified UserOnlineEvent message. Does not implicitly {@link pb.events.UserOnlineEvent.verify|verify} messages.
             * @param message UserOnlineEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IUserOnlineEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UserOnlineEvent message, length delimited. Does not implicitly {@link pb.events.UserOnlineEvent.verify|verify} messages.
             * @param message UserOnlineEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IUserOnlineEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a UserOnlineEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UserOnlineEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.UserOnlineEvent;

            /**
             * Decodes a UserOnlineEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UserOnlineEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.UserOnlineEvent;

            /**
             * Verifies a UserOnlineEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a UserOnlineEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UserOnlineEvent
             */
            public static fromObject(object: { [k: string]: any }): pb.events.UserOnlineEvent;

            /**
             * Creates a plain object from a UserOnlineEvent message. Also converts values to other types if specified.
             * @param message UserOnlineEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.UserOnlineEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UserOnlineEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GeneralEvent. */
        interface IGeneralEvent {

            /** GeneralEvent type */
            type?: (pb.events.GeneralEventType.Enum|null);

            /** GeneralEvent timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** GeneralEvent content */
            content?: (google.protobuf.IAny|null);
        }

        /** Represents a GeneralEvent. */
        class GeneralEvent implements IGeneralEvent {

            /**
             * Constructs a new GeneralEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IGeneralEvent);

            /** GeneralEvent type. */
            public type: pb.events.GeneralEventType.Enum;

            /** GeneralEvent timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** GeneralEvent content. */
            public content?: (google.protobuf.IAny|null);

            /**
             * Creates a new GeneralEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GeneralEvent instance
             */
            public static create(properties?: pb.events.IGeneralEvent): pb.events.GeneralEvent;

            /**
             * Encodes the specified GeneralEvent message. Does not implicitly {@link pb.events.GeneralEvent.verify|verify} messages.
             * @param message GeneralEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IGeneralEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GeneralEvent message, length delimited. Does not implicitly {@link pb.events.GeneralEvent.verify|verify} messages.
             * @param message GeneralEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IGeneralEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneralEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GeneralEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.GeneralEvent;

            /**
             * Decodes a GeneralEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GeneralEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.GeneralEvent;

            /**
             * Verifies a GeneralEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneralEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneralEvent
             */
            public static fromObject(object: { [k: string]: any }): pb.events.GeneralEvent;

            /**
             * Creates a plain object from a GeneralEvent message. Also converts values to other types if specified.
             * @param message GeneralEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.GeneralEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneralEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameEventType. */
        interface IGameEventType {
        }

        /** Represents a GameEventType. */
        class GameEventType implements IGameEventType {

            /**
             * Constructs a new GameEventType.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IGameEventType);

            /**
             * Creates a new GameEventType instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameEventType instance
             */
            public static create(properties?: pb.events.IGameEventType): pb.events.GameEventType;

            /**
             * Encodes the specified GameEventType message. Does not implicitly {@link pb.events.GameEventType.verify|verify} messages.
             * @param message GameEventType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IGameEventType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameEventType message, length delimited. Does not implicitly {@link pb.events.GameEventType.verify|verify} messages.
             * @param message GameEventType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IGameEventType, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameEventType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameEventType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.GameEventType;

            /**
             * Decodes a GameEventType message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameEventType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.GameEventType;

            /**
             * Verifies a GameEventType message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameEventType message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameEventType
             */
            public static fromObject(object: { [k: string]: any }): pb.events.GameEventType;

            /**
             * Creates a plain object from a GameEventType message. Also converts values to other types if specified.
             * @param message GameEventType
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.GameEventType, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameEventType to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GameEventType {

            /** Enum enum. */
            enum Enum {
                UNKNOWN = 0,
                GAME_START = 1,
                SELECT_ROLE = 2,
                BUY = 3,
                SELL = 4,
                UNEMPLOYMENT = 5,
                WAGE_HIKE = 6,
                AUCTION = 7,
                PAY_DAY = 8,
                BABY = 9,
                BROKE = 10,
                FREEDOM = 11,
                GAME_END = 12,
                GAME_TIMEOUT = 13,
                ACCIDENT = 14,
                MARKET_CHANGE = 15,
                DISHONORABLE_PUNISH = 16
            }
        }

        /** Properties of an EventGameStart. */
        interface IEventGameStart {

            /** EventGameStart age */
            age?: (number|null);
        }

        /** Represents an EventGameStart. */
        class EventGameStart implements IEventGameStart {

            /**
             * Constructs a new EventGameStart.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IEventGameStart);

            /** EventGameStart age. */
            public age: number;

            /**
             * Creates a new EventGameStart instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EventGameStart instance
             */
            public static create(properties?: pb.events.IEventGameStart): pb.events.EventGameStart;

            /**
             * Encodes the specified EventGameStart message. Does not implicitly {@link pb.events.EventGameStart.verify|verify} messages.
             * @param message EventGameStart message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IEventGameStart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EventGameStart message, length delimited. Does not implicitly {@link pb.events.EventGameStart.verify|verify} messages.
             * @param message EventGameStart message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IEventGameStart, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventGameStart message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EventGameStart
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.EventGameStart;

            /**
             * Decodes an EventGameStart message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EventGameStart
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.EventGameStart;

            /**
             * Verifies an EventGameStart message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EventGameStart message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EventGameStart
             */
            public static fromObject(object: { [k: string]: any }): pb.events.EventGameStart;

            /**
             * Creates a plain object from an EventGameStart message. Also converts values to other types if specified.
             * @param message EventGameStart
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.EventGameStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EventGameStart to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Role. */
        interface IRole {

            /** Role id */
            id?: (Long|null);

            /** Role flag */
            flag?: (string|null);

            /** Role name */
            name?: (string|null);
        }

        /** Represents a Role. */
        class Role implements IRole {

            /**
             * Constructs a new Role.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IRole);

            /** Role id. */
            public id: Long;

            /** Role flag. */
            public flag: string;

            /** Role name. */
            public name: string;

            /**
             * Creates a new Role instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Role instance
             */
            public static create(properties?: pb.events.IRole): pb.events.Role;

            /**
             * Encodes the specified Role message. Does not implicitly {@link pb.events.Role.verify|verify} messages.
             * @param message Role message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Role message, length delimited. Does not implicitly {@link pb.events.Role.verify|verify} messages.
             * @param message Role message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Role message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Role
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.Role;

            /**
             * Decodes a Role message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Role
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.Role;

            /**
             * Verifies a Role message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Role message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Role
             */
            public static fromObject(object: { [k: string]: any }): pb.events.Role;

            /**
             * Creates a plain object from a Role message. Also converts values to other types if specified.
             * @param message Role
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.Role, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Role to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EventSelectRole. */
        interface IEventSelectRole {

            /** EventSelectRole role */
            role?: (pb.events.IRole|null);
        }

        /** Represents an EventSelectRole. */
        class EventSelectRole implements IEventSelectRole {

            /**
             * Constructs a new EventSelectRole.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IEventSelectRole);

            /** EventSelectRole role. */
            public role?: (pb.events.IRole|null);

            /**
             * Creates a new EventSelectRole instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EventSelectRole instance
             */
            public static create(properties?: pb.events.IEventSelectRole): pb.events.EventSelectRole;

            /**
             * Encodes the specified EventSelectRole message. Does not implicitly {@link pb.events.EventSelectRole.verify|verify} messages.
             * @param message EventSelectRole message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IEventSelectRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EventSelectRole message, length delimited. Does not implicitly {@link pb.events.EventSelectRole.verify|verify} messages.
             * @param message EventSelectRole message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IEventSelectRole, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventSelectRole message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EventSelectRole
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.EventSelectRole;

            /**
             * Decodes an EventSelectRole message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EventSelectRole
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.EventSelectRole;

            /**
             * Verifies an EventSelectRole message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EventSelectRole message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EventSelectRole
             */
            public static fromObject(object: { [k: string]: any }): pb.events.EventSelectRole;

            /**
             * Creates a plain object from an EventSelectRole message. Also converts values to other types if specified.
             * @param message EventSelectRole
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.EventSelectRole, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EventSelectRole to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EventAssets. */
        interface IEventAssets {

            /** EventAssets code */
            code?: (string|null);

            /** EventAssets quantity */
            quantity?: (number|null);

            /** EventAssets income */
            income?: (number|null);

            /** EventAssets expense */
            expense?: (number|null);

            /** EventAssets profit */
            profit?: (number|null);

            /** EventAssets remark */
            remark?: (string|null);

            /** EventAssets totalPrice */
            totalPrice?: (number|null);

            /** EventAssets scenario */
            scenario?: (pb.common.IScenario|null);

            /** EventAssets asset */
            asset?: (pb.common.IPlayerAsset|null);

            /** EventAssets monthCashFlow */
            monthCashFlow?: (number|null);
        }

        /** Represents an EventAssets. */
        class EventAssets implements IEventAssets {

            /**
             * Constructs a new EventAssets.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IEventAssets);

            /** EventAssets code. */
            public code: string;

            /** EventAssets quantity. */
            public quantity: number;

            /** EventAssets income. */
            public income: number;

            /** EventAssets expense. */
            public expense: number;

            /** EventAssets profit. */
            public profit: number;

            /** EventAssets remark. */
            public remark: string;

            /** EventAssets totalPrice. */
            public totalPrice: number;

            /** EventAssets scenario. */
            public scenario?: (pb.common.IScenario|null);

            /** EventAssets asset. */
            public asset?: (pb.common.IPlayerAsset|null);

            /** EventAssets monthCashFlow. */
            public monthCashFlow: number;

            /**
             * Creates a new EventAssets instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EventAssets instance
             */
            public static create(properties?: pb.events.IEventAssets): pb.events.EventAssets;

            /**
             * Encodes the specified EventAssets message. Does not implicitly {@link pb.events.EventAssets.verify|verify} messages.
             * @param message EventAssets message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IEventAssets, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EventAssets message, length delimited. Does not implicitly {@link pb.events.EventAssets.verify|verify} messages.
             * @param message EventAssets message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IEventAssets, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventAssets message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EventAssets
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.EventAssets;

            /**
             * Decodes an EventAssets message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EventAssets
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.EventAssets;

            /**
             * Verifies an EventAssets message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EventAssets message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EventAssets
             */
            public static fromObject(object: { [k: string]: any }): pb.events.EventAssets;

            /**
             * Creates a plain object from an EventAssets message. Also converts values to other types if specified.
             * @param message EventAssets
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.EventAssets, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EventAssets to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EventSalary. */
        interface IEventSalary {

            /** EventSalary code */
            code?: (string|null);

            /** EventSalary salary */
            salary?: (number|null);

            /** EventSalary cashFlow */
            cashFlow?: (number|null);

            /** EventSalary age */
            age?: (number|null);
        }

        /** Represents an EventSalary. */
        class EventSalary implements IEventSalary {

            /**
             * Constructs a new EventSalary.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IEventSalary);

            /** EventSalary code. */
            public code: string;

            /** EventSalary salary. */
            public salary: number;

            /** EventSalary cashFlow. */
            public cashFlow: number;

            /** EventSalary age. */
            public age: number;

            /**
             * Creates a new EventSalary instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EventSalary instance
             */
            public static create(properties?: pb.events.IEventSalary): pb.events.EventSalary;

            /**
             * Encodes the specified EventSalary message. Does not implicitly {@link pb.events.EventSalary.verify|verify} messages.
             * @param message EventSalary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IEventSalary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EventSalary message, length delimited. Does not implicitly {@link pb.events.EventSalary.verify|verify} messages.
             * @param message EventSalary message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IEventSalary, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventSalary message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EventSalary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.EventSalary;

            /**
             * Decodes an EventSalary message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EventSalary
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.EventSalary;

            /**
             * Verifies an EventSalary message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EventSalary message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EventSalary
             */
            public static fromObject(object: { [k: string]: any }): pb.events.EventSalary;

            /**
             * Creates a plain object from an EventSalary message. Also converts values to other types if specified.
             * @param message EventSalary
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.EventSalary, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EventSalary to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EventWageHike. */
        interface IEventWageHike {

            /** EventWageHike increment */
            increment?: (number|null);

            /** EventWageHike role */
            role?: (pb.events.IRole|null);
        }

        /** Represents an EventWageHike. */
        class EventWageHike implements IEventWageHike {

            /**
             * Constructs a new EventWageHike.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IEventWageHike);

            /** EventWageHike increment. */
            public increment: number;

            /** EventWageHike role. */
            public role?: (pb.events.IRole|null);

            /**
             * Creates a new EventWageHike instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EventWageHike instance
             */
            public static create(properties?: pb.events.IEventWageHike): pb.events.EventWageHike;

            /**
             * Encodes the specified EventWageHike message. Does not implicitly {@link pb.events.EventWageHike.verify|verify} messages.
             * @param message EventWageHike message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IEventWageHike, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EventWageHike message, length delimited. Does not implicitly {@link pb.events.EventWageHike.verify|verify} messages.
             * @param message EventWageHike message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IEventWageHike, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventWageHike message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EventWageHike
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.EventWageHike;

            /**
             * Decodes an EventWageHike message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EventWageHike
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.EventWageHike;

            /**
             * Verifies an EventWageHike message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EventWageHike message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EventWageHike
             */
            public static fromObject(object: { [k: string]: any }): pb.events.EventWageHike;

            /**
             * Creates a plain object from an EventWageHike message. Also converts values to other types if specified.
             * @param message EventWageHike
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.EventWageHike, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EventWageHike to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a GameEvent. */
        interface IGameEvent {

            /** GameEvent gameID */
            gameID?: (Long|null);

            /** GameEvent timestamp */
            timestamp?: (google.protobuf.ITimestamp|null);

            /** GameEvent Type */
            Type?: (pb.events.GameEventType.Enum|null);

            /** GameEvent userID */
            userID?: (Long|null);

            /** GameEvent details */
            details?: (google.protobuf.IAny[]|null);
        }

        /** Represents a GameEvent. */
        class GameEvent implements IGameEvent {

            /**
             * Constructs a new GameEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IGameEvent);

            /** GameEvent gameID. */
            public gameID: Long;

            /** GameEvent timestamp. */
            public timestamp?: (google.protobuf.ITimestamp|null);

            /** GameEvent Type. */
            public Type: pb.events.GameEventType.Enum;

            /** GameEvent userID. */
            public userID: Long;

            /** GameEvent details. */
            public details: google.protobuf.IAny[];

            /**
             * Creates a new GameEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GameEvent instance
             */
            public static create(properties?: pb.events.IGameEvent): pb.events.GameEvent;

            /**
             * Encodes the specified GameEvent message. Does not implicitly {@link pb.events.GameEvent.verify|verify} messages.
             * @param message GameEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IGameEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GameEvent message, length delimited. Does not implicitly {@link pb.events.GameEvent.verify|verify} messages.
             * @param message GameEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IGameEvent, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GameEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GameEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.GameEvent;

            /**
             * Decodes a GameEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GameEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.GameEvent;

            /**
             * Verifies a GameEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GameEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GameEvent
             */
            public static fromObject(object: { [k: string]: any }): pb.events.GameEvent;

            /**
             * Creates a plain object from a GameEvent message. Also converts values to other types if specified.
             * @param message GameEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.GameEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GameEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EventMarketChange. */
        interface IEventMarketChange {

            /** EventMarketChange changeType */
            changeType?: (pb.common.MarketChangeType.Enum|null);

            /** EventMarketChange incomeChange */
            incomeChange?: (number|null);

            /** EventMarketChange assetChange */
            assetChange?: (number|null);
        }

        /** Represents an EventMarketChange. */
        class EventMarketChange implements IEventMarketChange {

            /**
             * Constructs a new EventMarketChange.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IEventMarketChange);

            /** EventMarketChange changeType. */
            public changeType: pb.common.MarketChangeType.Enum;

            /** EventMarketChange incomeChange. */
            public incomeChange: number;

            /** EventMarketChange assetChange. */
            public assetChange: number;

            /**
             * Creates a new EventMarketChange instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EventMarketChange instance
             */
            public static create(properties?: pb.events.IEventMarketChange): pb.events.EventMarketChange;

            /**
             * Encodes the specified EventMarketChange message. Does not implicitly {@link pb.events.EventMarketChange.verify|verify} messages.
             * @param message EventMarketChange message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IEventMarketChange, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EventMarketChange message, length delimited. Does not implicitly {@link pb.events.EventMarketChange.verify|verify} messages.
             * @param message EventMarketChange message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IEventMarketChange, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EventMarketChange message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EventMarketChange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.EventMarketChange;

            /**
             * Decodes an EventMarketChange message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EventMarketChange
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.EventMarketChange;

            /**
             * Verifies an EventMarketChange message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EventMarketChange message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EventMarketChange
             */
            public static fromObject(object: { [k: string]: any }): pb.events.EventMarketChange;

            /**
             * Creates a plain object from an EventMarketChange message. Also converts values to other types if specified.
             * @param message EventMarketChange
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.EventMarketChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EventMarketChange to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Dishonorable. */
        interface IDishonorable {

            /** Dishonorable Reason */
            Reason?: (pb.common.DishonorablePunishReason.Enum|null);
        }

        /** Represents a Dishonorable. */
        class Dishonorable implements IDishonorable {

            /**
             * Constructs a new Dishonorable.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.events.IDishonorable);

            /** Dishonorable Reason. */
            public Reason: pb.common.DishonorablePunishReason.Enum;

            /**
             * Creates a new Dishonorable instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Dishonorable instance
             */
            public static create(properties?: pb.events.IDishonorable): pb.events.Dishonorable;

            /**
             * Encodes the specified Dishonorable message. Does not implicitly {@link pb.events.Dishonorable.verify|verify} messages.
             * @param message Dishonorable message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.events.IDishonorable, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Dishonorable message, length delimited. Does not implicitly {@link pb.events.Dishonorable.verify|verify} messages.
             * @param message Dishonorable message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.events.IDishonorable, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Dishonorable message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Dishonorable
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.events.Dishonorable;

            /**
             * Decodes a Dishonorable message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Dishonorable
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.events.Dishonorable;

            /**
             * Verifies a Dishonorable message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Dishonorable message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Dishonorable
             */
            public static fromObject(object: { [k: string]: any }): pb.events.Dishonorable;

            /**
             * Creates a plain object from a Dishonorable message. Also converts values to other types if specified.
             * @param message Dishonorable
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.events.Dishonorable, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Dishonorable to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of an Empty. */
        interface IEmpty {
        }

        /** Represents an Empty. */
        class Empty implements IEmpty {

            /**
             * Constructs a new Empty.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEmpty);

            /**
             * Creates a new Empty instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Empty instance
             */
            public static create(properties?: google.protobuf.IEmpty): google.protobuf.Empty;

            /**
             * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
             * @param message Empty message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEmpty, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
             * @param message Empty message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEmpty, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Empty message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Empty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Empty;

            /**
             * Decodes an Empty message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Empty
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Empty;

            /**
             * Verifies an Empty message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Empty message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Empty
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Empty;

            /**
             * Creates a plain object from an Empty message. Also converts values to other types if specified.
             * @param message Empty
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Empty, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Empty to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Timestamp. */
        interface ITimestamp {

            /** Timestamp seconds */
            seconds?: (Long|null);

            /** Timestamp nanos */
            nanos?: (number|null);
        }

        /** Represents a Timestamp. */
        class Timestamp implements ITimestamp {

            /**
             * Constructs a new Timestamp.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ITimestamp);

            /** Timestamp seconds. */
            public seconds: Long;

            /** Timestamp nanos. */
            public nanos: number;

            /**
             * Creates a new Timestamp instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Timestamp instance
             */
            public static create(properties?: google.protobuf.ITimestamp): google.protobuf.Timestamp;

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @param message Timestamp message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ITimestamp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Timestamp;

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Timestamp;

            /**
             * Verifies a Timestamp message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Timestamp
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Timestamp;

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @param message Timestamp
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Timestamp, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Timestamp to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Creates a new Any instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Any instance
             */
            public static create(properties?: google.protobuf.IAny): google.protobuf.Any;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
