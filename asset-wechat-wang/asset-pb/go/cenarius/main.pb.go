// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cenarius/main.proto

package cenarius

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	common "gitlab.com/vectorup/asset-pb/go/common"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoleAssetType_Enum int32

const (
	RoleAssetType_UNKNOWN RoleAssetType_Enum = 0
	RoleAssetType_SALARY  RoleAssetType_Enum = 1
	RoleAssetType_CASH    RoleAssetType_Enum = 2
)

var RoleAssetType_Enum_name = map[int32]string{
	0: "UNKNOWN",
	1: "SALARY",
	2: "CASH",
}

var RoleAssetType_Enum_value = map[string]int32{
	"UNKNOWN": 0,
	"SALARY":  1,
	"CASH":    2,
}

func (x RoleAssetType_Enum) String() string {
	return proto.EnumName(RoleAssetType_Enum_name, int32(x))
}

func (RoleAssetType_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{22, 0}
}

// NOTE(QuantumGhost): 响应的 PlayerInfo 顺序与请求的 UserIds 顺序一样
type GetPlayerInfoReq struct {
	UserIds              []int64  `protobuf:"varint,1,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlayerInfoReq) Reset()         { *m = GetPlayerInfoReq{} }
func (m *GetPlayerInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetPlayerInfoReq) ProtoMessage()    {}
func (*GetPlayerInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{0}
}

func (m *GetPlayerInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayerInfoReq.Unmarshal(m, b)
}
func (m *GetPlayerInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayerInfoReq.Marshal(b, m, deterministic)
}
func (m *GetPlayerInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayerInfoReq.Merge(m, src)
}
func (m *GetPlayerInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetPlayerInfoReq.Size(m)
}
func (m *GetPlayerInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayerInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayerInfoReq proto.InternalMessageInfo

func (m *GetPlayerInfoReq) GetUserIds() []int64 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type GetPlayerInfoRsp struct {
	Players              []*common.PlayerInfo `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetPlayerInfoRsp) Reset()         { *m = GetPlayerInfoRsp{} }
func (m *GetPlayerInfoRsp) String() string { return proto.CompactTextString(m) }
func (*GetPlayerInfoRsp) ProtoMessage()    {}
func (*GetPlayerInfoRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{1}
}

func (m *GetPlayerInfoRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayerInfoRsp.Unmarshal(m, b)
}
func (m *GetPlayerInfoRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayerInfoRsp.Marshal(b, m, deterministic)
}
func (m *GetPlayerInfoRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayerInfoRsp.Merge(m, src)
}
func (m *GetPlayerInfoRsp) XXX_Size() int {
	return xxx_messageInfo_GetPlayerInfoRsp.Size(m)
}
func (m *GetPlayerInfoRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayerInfoRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayerInfoRsp proto.InternalMessageInfo

func (m *GetPlayerInfoRsp) GetPlayers() []*common.PlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

type UpdateUserCoinReq struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	// +100 增加, -100 减少
	Coin int64 `protobuf:"varint,2,opt,name=Coin,proto3" json:"Coin,omitempty"`
	// 更新请求的备注信息, 不能为空, eg. 游戏奖励:1000
	Comment              string   `protobuf:"bytes,3,opt,name=Comment,proto3" json:"Comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserCoinReq) Reset()         { *m = UpdateUserCoinReq{} }
func (m *UpdateUserCoinReq) String() string { return proto.CompactTextString(m) }
func (*UpdateUserCoinReq) ProtoMessage()    {}
func (*UpdateUserCoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{2}
}

func (m *UpdateUserCoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserCoinReq.Unmarshal(m, b)
}
func (m *UpdateUserCoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserCoinReq.Marshal(b, m, deterministic)
}
func (m *UpdateUserCoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserCoinReq.Merge(m, src)
}
func (m *UpdateUserCoinReq) XXX_Size() int {
	return xxx_messageInfo_UpdateUserCoinReq.Size(m)
}
func (m *UpdateUserCoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserCoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserCoinReq proto.InternalMessageInfo

func (m *UpdateUserCoinReq) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UpdateUserCoinReq) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *UpdateUserCoinReq) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type UpdateUserCoinResp struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	// 更新后的金币值
	Coin                 int64    `protobuf:"varint,2,opt,name=Coin,proto3" json:"Coin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserCoinResp) Reset()         { *m = UpdateUserCoinResp{} }
func (m *UpdateUserCoinResp) String() string { return proto.CompactTextString(m) }
func (*UpdateUserCoinResp) ProtoMessage()    {}
func (*UpdateUserCoinResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{3}
}

func (m *UpdateUserCoinResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserCoinResp.Unmarshal(m, b)
}
func (m *UpdateUserCoinResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserCoinResp.Marshal(b, m, deterministic)
}
func (m *UpdateUserCoinResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserCoinResp.Merge(m, src)
}
func (m *UpdateUserCoinResp) XXX_Size() int {
	return xxx_messageInfo_UpdateUserCoinResp.Size(m)
}
func (m *UpdateUserCoinResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserCoinResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserCoinResp proto.InternalMessageInfo

func (m *UpdateUserCoinResp) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UpdateUserCoinResp) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

type BatchUpdateCoinReq struct {
	Rows                 []*UpdateUserCoinReq `protobuf:"bytes,1,rep,name=Rows,proto3" json:"Rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BatchUpdateCoinReq) Reset()         { *m = BatchUpdateCoinReq{} }
func (m *BatchUpdateCoinReq) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateCoinReq) ProtoMessage()    {}
func (*BatchUpdateCoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{4}
}

func (m *BatchUpdateCoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateCoinReq.Unmarshal(m, b)
}
func (m *BatchUpdateCoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateCoinReq.Marshal(b, m, deterministic)
}
func (m *BatchUpdateCoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateCoinReq.Merge(m, src)
}
func (m *BatchUpdateCoinReq) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateCoinReq.Size(m)
}
func (m *BatchUpdateCoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateCoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateCoinReq proto.InternalMessageInfo

func (m *BatchUpdateCoinReq) GetRows() []*UpdateUserCoinReq {
	if m != nil {
		return m.Rows
	}
	return nil
}

type BatchUpdateCoinResp struct {
	SuccessUsers         []int64                       `protobuf:"varint,1,rep,packed,name=SuccessUsers,proto3" json:"SuccessUsers,omitempty"`
	FaliedUsers          []int64                       `protobuf:"varint,2,rep,packed,name=FaliedUsers,proto3" json:"FaliedUsers,omitempty"`
	Results              map[int64]*UpdateUserCoinResp `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BatchUpdateCoinResp) Reset()         { *m = BatchUpdateCoinResp{} }
func (m *BatchUpdateCoinResp) String() string { return proto.CompactTextString(m) }
func (*BatchUpdateCoinResp) ProtoMessage()    {}
func (*BatchUpdateCoinResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{5}
}

func (m *BatchUpdateCoinResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchUpdateCoinResp.Unmarshal(m, b)
}
func (m *BatchUpdateCoinResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchUpdateCoinResp.Marshal(b, m, deterministic)
}
func (m *BatchUpdateCoinResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchUpdateCoinResp.Merge(m, src)
}
func (m *BatchUpdateCoinResp) XXX_Size() int {
	return xxx_messageInfo_BatchUpdateCoinResp.Size(m)
}
func (m *BatchUpdateCoinResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchUpdateCoinResp.DiscardUnknown(m)
}

var xxx_messageInfo_BatchUpdateCoinResp proto.InternalMessageInfo

func (m *BatchUpdateCoinResp) GetSuccessUsers() []int64 {
	if m != nil {
		return m.SuccessUsers
	}
	return nil
}

func (m *BatchUpdateCoinResp) GetFaliedUsers() []int64 {
	if m != nil {
		return m.FaliedUsers
	}
	return nil
}

func (m *BatchUpdateCoinResp) GetResults() map[int64]*UpdateUserCoinResp {
	if m != nil {
		return m.Results
	}
	return nil
}

type AuthenticationReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticationReq) Reset()         { *m = AuthenticationReq{} }
func (m *AuthenticationReq) String() string { return proto.CompactTextString(m) }
func (*AuthenticationReq) ProtoMessage()    {}
func (*AuthenticationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{6}
}

func (m *AuthenticationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticationReq.Unmarshal(m, b)
}
func (m *AuthenticationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticationReq.Marshal(b, m, deterministic)
}
func (m *AuthenticationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationReq.Merge(m, src)
}
func (m *AuthenticationReq) XXX_Size() int {
	return xxx_messageInfo_AuthenticationReq.Size(m)
}
func (m *AuthenticationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationReq.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationReq proto.InternalMessageInfo

func (m *AuthenticationReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ListBotsReq struct {
	Pagination           *common.PaginationReq `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListBotsReq) Reset()         { *m = ListBotsReq{} }
func (m *ListBotsReq) String() string { return proto.CompactTextString(m) }
func (*ListBotsReq) ProtoMessage()    {}
func (*ListBotsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{7}
}

func (m *ListBotsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBotsReq.Unmarshal(m, b)
}
func (m *ListBotsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBotsReq.Marshal(b, m, deterministic)
}
func (m *ListBotsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBotsReq.Merge(m, src)
}
func (m *ListBotsReq) XXX_Size() int {
	return xxx_messageInfo_ListBotsReq.Size(m)
}
func (m *ListBotsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBotsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListBotsReq proto.InternalMessageInfo

func (m *ListBotsReq) GetPagination() *common.PaginationReq {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type BotInfo struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	HideId               int64    `protobuf:"varint,2,opt,name=hideId,proto3" json:"hideId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BotInfo) Reset()         { *m = BotInfo{} }
func (m *BotInfo) String() string { return proto.CompactTextString(m) }
func (*BotInfo) ProtoMessage()    {}
func (*BotInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{8}
}

func (m *BotInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BotInfo.Unmarshal(m, b)
}
func (m *BotInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BotInfo.Marshal(b, m, deterministic)
}
func (m *BotInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotInfo.Merge(m, src)
}
func (m *BotInfo) XXX_Size() int {
	return xxx_messageInfo_BotInfo.Size(m)
}
func (m *BotInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BotInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BotInfo proto.InternalMessageInfo

func (m *BotInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *BotInfo) GetHideId() int64 {
	if m != nil {
		return m.HideId
	}
	return 0
}

type ListBotsRsp struct {
	Bots                 []*BotInfo            `protobuf:"bytes,1,rep,name=bots,proto3" json:"bots,omitempty"`
	Pagination           *common.PaginationRsp `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListBotsRsp) Reset()         { *m = ListBotsRsp{} }
func (m *ListBotsRsp) String() string { return proto.CompactTextString(m) }
func (*ListBotsRsp) ProtoMessage()    {}
func (*ListBotsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{9}
}

func (m *ListBotsRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBotsRsp.Unmarshal(m, b)
}
func (m *ListBotsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBotsRsp.Marshal(b, m, deterministic)
}
func (m *ListBotsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBotsRsp.Merge(m, src)
}
func (m *ListBotsRsp) XXX_Size() int {
	return xxx_messageInfo_ListBotsRsp.Size(m)
}
func (m *ListBotsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBotsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ListBotsRsp proto.InternalMessageInfo

func (m *ListBotsRsp) GetBots() []*BotInfo {
	if m != nil {
		return m.Bots
	}
	return nil
}

func (m *ListBotsRsp) GetPagination() *common.PaginationRsp {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type Role struct {
	ID   int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 行业
	Industry string `protobuf:"bytes,3,opt,name=industry,proto3" json:"industry,omitempty"`
	// 月工资
	Salary int64 `protobuf:"varint,4,opt,name=salary,proto3" json:"salary,omitempty"`
	// 月固定开支
	Expense int64 `protobuf:"varint,5,opt,name=expense,proto3" json:"expense,omitempty"`
	// 房屋贷款
	HouseLoan int64 `protobuf:"varint,6,opt,name=houseLoan,proto3" json:"houseLoan,omitempty"`
	// 汽车贷款
	CarLoan int64 `protobuf:"varint,7,opt,name=carLoan,proto3" json:"carLoan,omitempty"`
	// 信用卡
	CreditCard int64 `protobuf:"varint,8,opt,name=creditCard,proto3" json:"creditCard,omitempty"`
	// 借款
	BorrowMoney int64 `protobuf:"varint,9,opt,name=borrowMoney,proto3" json:"borrowMoney,omitempty"`
	// 银行贷款
	BankLoan int64 `protobuf:"varint,10,opt,name=bankLoan,proto3" json:"bankLoan,omitempty"`
	// NOTE(QuantumGhost): 下面这些百分比是原来准备用来动态计算对应开支的，
	// 不过因为浮点数舍入误差，计算出来的值和产品的设计值会有很小的区别
	// 因此这些字段被废弃掉了，产品给出的数值表格中直接包含计算好的数值，
	// 避免代码中计算导致的舍入误差。
	// 税率百分比
	TaxTatePCT float32 `protobuf:"fixed32,11,opt,name=taxTatePCT,proto3" json:"taxTatePCT,omitempty"` // Deprecated: Do not use.
	//房贷利率百分比
	HouseRatePCT float32 `protobuf:"fixed32,12,opt,name=houseRatePCT,proto3" json:"houseRatePCT,omitempty"` // Deprecated: Do not use.
	//车贷利率百分比
	CarRatePCT float32 `protobuf:"fixed32,13,opt,name=carRatePCT,proto3" json:"carRatePCT,omitempty"` // Deprecated: Do not use.
	//信用卡利率百分比
	CreditCardRatePCT float32 `protobuf:"fixed32,14,opt,name=creditCardRatePCT,proto3" json:"creditCardRatePCT,omitempty"` // Deprecated: Do not use.
	//借贷利率百分比
	BorrowMoneyRatePCT float32 `protobuf:"fixed32,15,opt,name=borrowMoneyRatePCT,proto3" json:"borrowMoneyRatePCT,omitempty"` // Deprecated: Do not use.
	//银行贷款利率百分比
	BankLoanRatePCT float32 `protobuf:"fixed32,16,opt,name=bankLoanRatePCT,proto3" json:"bankLoanRatePCT,omitempty"` // Deprecated: Do not use.
	// 收支百分比
	TaxAndSpendPCT float32 `protobuf:"fixed32,17,opt,name=taxAndSpendPCT,proto3" json:"taxAndSpendPCT,omitempty"` // Deprecated: Do not use.
	// 孩子百分比
	BabySpendPCT float32 `protobuf:"fixed32,18,opt,name=babySpendPCT,proto3" json:"babySpendPCT,omitempty"` // Deprecated: Do not use.
	// NOTE(QuantumGhost): 升值加薪的百分比，这个字段还是需要的
	// 财务报表玩游戏的时候这里固定 20%
	WageHikePCT float32 `protobuf:"fixed32,19,opt,name=wageHikePCT,proto3" json:"wageHikePCT,omitempty"`
	// 职业唯一标志，财务报表玩游戏时这里是 ROLE:USER_DEFINED
	Flag string `protobuf:"bytes,20,opt,name=flag,proto3" json:"flag,omitempty"`
	// 是否可用
	Available bool `protobuf:"varint,21,opt,name=available,proto3" json:"available,omitempty"`
	// 是否可以免费使用
	Free bool `protobuf:"varint,22,opt,name=free,proto3" json:"free,omitempty"`
	// 职业头像
	// 财务报表玩游戏功能里面，这里传的是用户的头像
	Avatar string `protobuf:"bytes,23,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 职业晋升机会, eg: [教师, 年级主任, 副校长, 校长]
	// 财务报表玩游戏功能里面，这里是空
	Promotions []string `protobuf:"bytes,24,rep,name=promotions,proto3" json:"promotions,omitempty"`
	// NOTE(QuantumGhost): 补充的各种支出字段，对应上面的 各种 PCT
	// 加 `_` 前缀是为了避免跟已经存在的方法名产生冲突
	XInsuranceAndHousingFund int64 `protobuf:"varint,25,opt,name=_insuranceAndHousingFund,json=InsuranceAndHousingFund,proto3" json:"_insuranceAndHousingFund,omitempty"`
	XHouseExpense            int64 `protobuf:"varint,26,opt,name=_houseExpense,json=HouseExpense,proto3" json:"_houseExpense,omitempty"`
	XCarExpense              int64 `protobuf:"varint,27,opt,name=_carExpense,json=CarExpense,proto3" json:"_carExpense,omitempty"`
	XCreditCardExpense       int64 `protobuf:"varint,28,opt,name=_creditCardExpense,json=CreditCardExpense,proto3" json:"_creditCardExpense,omitempty"`
	XBorrowMoneyExpense      int64 `protobuf:"varint,29,opt,name=_borrowMoneyExpense,json=BorrowMoneyExpense,proto3" json:"_borrowMoneyExpense,omitempty"`
	// NOTE(QuantumGhost): 财务报表玩游戏时，_babyExpense 要 cenarius 计算好了返回给 Game
	// 计算规则如下：
	// 1. 如果用户加入了类型为孩子的支出项，使用该支出项的值；（NOTE(QuantumGhost): 目前 （2018-11-20）没有这个支出类型）
	// 2. 如果用户的工资总和 > 0，孩子支出为总和的 20%
	// 3. 如果用户的工资总和 < 0，孩子支出为总和的 20% 1000
	// 工资总和定义为用户财务报表里所有类型的所有收入减去同类型的所有支出的值
	XBabyExpense         int64        `protobuf:"varint,30,opt,name=_babyExpense,json=BabyExpense,proto3" json:"_babyExpense,omitempty"`
	XBankLoanExpense     int64        `protobuf:"varint,31,opt,name=_bankLoanExpense,json=BankLoanExpense,proto3" json:"_bankLoanExpense,omitempty"`
	Assets               []*RoleAsset `protobuf:"bytes,32,rep,name=assets,proto3" json:"assets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{10}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetIndustry() string {
	if m != nil {
		return m.Industry
	}
	return ""
}

func (m *Role) GetSalary() int64 {
	if m != nil {
		return m.Salary
	}
	return 0
}

func (m *Role) GetExpense() int64 {
	if m != nil {
		return m.Expense
	}
	return 0
}

func (m *Role) GetHouseLoan() int64 {
	if m != nil {
		return m.HouseLoan
	}
	return 0
}

func (m *Role) GetCarLoan() int64 {
	if m != nil {
		return m.CarLoan
	}
	return 0
}

func (m *Role) GetCreditCard() int64 {
	if m != nil {
		return m.CreditCard
	}
	return 0
}

func (m *Role) GetBorrowMoney() int64 {
	if m != nil {
		return m.BorrowMoney
	}
	return 0
}

func (m *Role) GetBankLoan() int64 {
	if m != nil {
		return m.BankLoan
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetTaxTatePCT() float32 {
	if m != nil {
		return m.TaxTatePCT
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetHouseRatePCT() float32 {
	if m != nil {
		return m.HouseRatePCT
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetCarRatePCT() float32 {
	if m != nil {
		return m.CarRatePCT
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetCreditCardRatePCT() float32 {
	if m != nil {
		return m.CreditCardRatePCT
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetBorrowMoneyRatePCT() float32 {
	if m != nil {
		return m.BorrowMoneyRatePCT
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetBankLoanRatePCT() float32 {
	if m != nil {
		return m.BankLoanRatePCT
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetTaxAndSpendPCT() float32 {
	if m != nil {
		return m.TaxAndSpendPCT
	}
	return 0
}

// Deprecated: Do not use.
func (m *Role) GetBabySpendPCT() float32 {
	if m != nil {
		return m.BabySpendPCT
	}
	return 0
}

func (m *Role) GetWageHikePCT() float32 {
	if m != nil {
		return m.WageHikePCT
	}
	return 0
}

func (m *Role) GetFlag() string {
	if m != nil {
		return m.Flag
	}
	return ""
}

func (m *Role) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Role) GetFree() bool {
	if m != nil {
		return m.Free
	}
	return false
}

func (m *Role) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Role) GetPromotions() []string {
	if m != nil {
		return m.Promotions
	}
	return nil
}

func (m *Role) GetXInsuranceAndHousingFund() int64 {
	if m != nil {
		return m.XInsuranceAndHousingFund
	}
	return 0
}

func (m *Role) GetXHouseExpense() int64 {
	if m != nil {
		return m.XHouseExpense
	}
	return 0
}

func (m *Role) GetXCarExpense() int64 {
	if m != nil {
		return m.XCarExpense
	}
	return 0
}

func (m *Role) GetXCreditCardExpense() int64 {
	if m != nil {
		return m.XCreditCardExpense
	}
	return 0
}

func (m *Role) GetXBorrowMoneyExpense() int64 {
	if m != nil {
		return m.XBorrowMoneyExpense
	}
	return 0
}

func (m *Role) GetXBabyExpense() int64 {
	if m != nil {
		return m.XBabyExpense
	}
	return 0
}

func (m *Role) GetXBankLoanExpense() int64 {
	if m != nil {
		return m.XBankLoanExpense
	}
	return 0
}

func (m *Role) GetAssets() []*RoleAsset {
	if m != nil {
		return m.Assets
	}
	return nil
}

// 获取所有可用的职业
type PullRolesRsp struct {
	Roles                []*Role  `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRolesRsp) Reset()         { *m = PullRolesRsp{} }
func (m *PullRolesRsp) String() string { return proto.CompactTextString(m) }
func (*PullRolesRsp) ProtoMessage()    {}
func (*PullRolesRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{11}
}

func (m *PullRolesRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRolesRsp.Unmarshal(m, b)
}
func (m *PullRolesRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRolesRsp.Marshal(b, m, deterministic)
}
func (m *PullRolesRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRolesRsp.Merge(m, src)
}
func (m *PullRolesRsp) XXX_Size() int {
	return xxx_messageInfo_PullRolesRsp.Size(m)
}
func (m *PullRolesRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRolesRsp.DiscardUnknown(m)
}

var xxx_messageInfo_PullRolesRsp proto.InternalMessageInfo

func (m *PullRolesRsp) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 用户可以使用的职业
type UserAvailableRole struct {
	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// 已购买
	Purchased bool `protobuf:"varint,2,opt,name=purchased,proto3" json:"purchased,omitempty"`
	// 免费使用
	Free                 bool     `protobuf:"varint,3,opt,name=free,proto3" json:"free,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAvailableRole) Reset()         { *m = UserAvailableRole{} }
func (m *UserAvailableRole) String() string { return proto.CompactTextString(m) }
func (*UserAvailableRole) ProtoMessage()    {}
func (*UserAvailableRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{12}
}

func (m *UserAvailableRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAvailableRole.Unmarshal(m, b)
}
func (m *UserAvailableRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAvailableRole.Marshal(b, m, deterministic)
}
func (m *UserAvailableRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAvailableRole.Merge(m, src)
}
func (m *UserAvailableRole) XXX_Size() int {
	return xxx_messageInfo_UserAvailableRole.Size(m)
}
func (m *UserAvailableRole) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAvailableRole.DiscardUnknown(m)
}

var xxx_messageInfo_UserAvailableRole proto.InternalMessageInfo

func (m *UserAvailableRole) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *UserAvailableRole) GetPurchased() bool {
	if m != nil {
		return m.Purchased
	}
	return false
}

func (m *UserAvailableRole) GetFree() bool {
	if m != nil {
		return m.Free
	}
	return false
}

// 获取用户可用职业列表 req
type FetchUserRolesReq struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchUserRolesReq) Reset()         { *m = FetchUserRolesReq{} }
func (m *FetchUserRolesReq) String() string { return proto.CompactTextString(m) }
func (*FetchUserRolesReq) ProtoMessage()    {}
func (*FetchUserRolesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{13}
}

func (m *FetchUserRolesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchUserRolesReq.Unmarshal(m, b)
}
func (m *FetchUserRolesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchUserRolesReq.Marshal(b, m, deterministic)
}
func (m *FetchUserRolesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchUserRolesReq.Merge(m, src)
}
func (m *FetchUserRolesReq) XXX_Size() int {
	return xxx_messageInfo_FetchUserRolesReq.Size(m)
}
func (m *FetchUserRolesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchUserRolesReq.DiscardUnknown(m)
}

var xxx_messageInfo_FetchUserRolesReq proto.InternalMessageInfo

func (m *FetchUserRolesReq) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

// 获取用户可以职业列表 resp
type FetchUserRolesRsp struct {
	Roles                []*UserAvailableRole `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FetchUserRolesRsp) Reset()         { *m = FetchUserRolesRsp{} }
func (m *FetchUserRolesRsp) String() string { return proto.CompactTextString(m) }
func (*FetchUserRolesRsp) ProtoMessage()    {}
func (*FetchUserRolesRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{14}
}

func (m *FetchUserRolesRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchUserRolesRsp.Unmarshal(m, b)
}
func (m *FetchUserRolesRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchUserRolesRsp.Marshal(b, m, deterministic)
}
func (m *FetchUserRolesRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchUserRolesRsp.Merge(m, src)
}
func (m *FetchUserRolesRsp) XXX_Size() int {
	return xxx_messageInfo_FetchUserRolesRsp.Size(m)
}
func (m *FetchUserRolesRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchUserRolesRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FetchUserRolesRsp proto.InternalMessageInfo

func (m *FetchUserRolesRsp) GetRoles() []*UserAvailableRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 批量获取用户可用职业列表
type BatchFetchUserRolesReq struct {
	Users                []int64  `protobuf:"varint,1,rep,packed,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchFetchUserRolesReq) Reset()         { *m = BatchFetchUserRolesReq{} }
func (m *BatchFetchUserRolesReq) String() string { return proto.CompactTextString(m) }
func (*BatchFetchUserRolesReq) ProtoMessage()    {}
func (*BatchFetchUserRolesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{15}
}

func (m *BatchFetchUserRolesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchFetchUserRolesReq.Unmarshal(m, b)
}
func (m *BatchFetchUserRolesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchFetchUserRolesReq.Marshal(b, m, deterministic)
}
func (m *BatchFetchUserRolesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchFetchUserRolesReq.Merge(m, src)
}
func (m *BatchFetchUserRolesReq) XXX_Size() int {
	return xxx_messageInfo_BatchFetchUserRolesReq.Size(m)
}
func (m *BatchFetchUserRolesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchFetchUserRolesReq.DiscardUnknown(m)
}

var xxx_messageInfo_BatchFetchUserRolesReq proto.InternalMessageInfo

func (m *BatchFetchUserRolesReq) GetUsers() []int64 {
	if m != nil {
		return m.Users
	}
	return nil
}

type BatchFetchUserRolesRsp struct {
	Records              map[int64]*FetchUserRolesRsp `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BatchFetchUserRolesRsp) Reset()         { *m = BatchFetchUserRolesRsp{} }
func (m *BatchFetchUserRolesRsp) String() string { return proto.CompactTextString(m) }
func (*BatchFetchUserRolesRsp) ProtoMessage()    {}
func (*BatchFetchUserRolesRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{16}
}

func (m *BatchFetchUserRolesRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchFetchUserRolesRsp.Unmarshal(m, b)
}
func (m *BatchFetchUserRolesRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchFetchUserRolesRsp.Marshal(b, m, deterministic)
}
func (m *BatchFetchUserRolesRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchFetchUserRolesRsp.Merge(m, src)
}
func (m *BatchFetchUserRolesRsp) XXX_Size() int {
	return xxx_messageInfo_BatchFetchUserRolesRsp.Size(m)
}
func (m *BatchFetchUserRolesRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchFetchUserRolesRsp.DiscardUnknown(m)
}

var xxx_messageInfo_BatchFetchUserRolesRsp proto.InternalMessageInfo

func (m *BatchFetchUserRolesRsp) GetRecords() map[int64]*FetchUserRolesRsp {
	if m != nil {
		return m.Records
	}
	return nil
}

type PlayerStatus struct {
	UserId   int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PlayerId int64 `protobuf:"varint,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	// 游戏基本信息
	IsWinner bool `protobuf:"varint,3,opt,name=isWinner,proto3" json:"isWinner,omitempty"`
	// 财富自由度，这里存的是百分数，80% 就是 80
	FreedomDegree float32 `protobuf:"fixed32,4,opt,name=freedomDegree,proto3" json:"freedomDegree,omitempty"`
	// 游戏记录数据
	Role                    *PlayerStatus_Role `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	MonthlyInvestmentIncome int64              `protobuf:"varint,6,opt,name=monthlyInvestmentIncome,proto3" json:"monthlyInvestmentIncome,omitempty"`
	MonthlyExpense          int64              `protobuf:"varint,7,opt,name=monthlyExpense,proto3" json:"monthlyExpense,omitempty"`
	MonthlyCashflow         int64              `protobuf:"varint,8,opt,name=monthlyCashflow,proto3" json:"monthlyCashflow,omitempty"`
	// 结束游戏时使用 JSON 序列化过的财务报表数据，
	// dump 一份放到 cenarius，这样游戏外的展示就不用再去请求 game 了
	FinancialReport []byte                 `protobuf:"bytes,9,opt,name=financialReport,proto3" json:"financialReport,omitempty"`
	AssetStatment   *common.AssetStatement `protobuf:"bytes,10,opt,name=assetStatment,proto3" json:"assetStatment,omitempty"`
	// 玩家是否破产, 破产的玩家没有游戏奖励
	IsOut                bool     `protobuf:"varint,11,opt,name=isOut,proto3" json:"isOut,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerStatus) Reset()         { *m = PlayerStatus{} }
func (m *PlayerStatus) String() string { return proto.CompactTextString(m) }
func (*PlayerStatus) ProtoMessage()    {}
func (*PlayerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{17}
}

func (m *PlayerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerStatus.Unmarshal(m, b)
}
func (m *PlayerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerStatus.Marshal(b, m, deterministic)
}
func (m *PlayerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStatus.Merge(m, src)
}
func (m *PlayerStatus) XXX_Size() int {
	return xxx_messageInfo_PlayerStatus.Size(m)
}
func (m *PlayerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStatus proto.InternalMessageInfo

func (m *PlayerStatus) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PlayerStatus) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *PlayerStatus) GetIsWinner() bool {
	if m != nil {
		return m.IsWinner
	}
	return false
}

func (m *PlayerStatus) GetFreedomDegree() float32 {
	if m != nil {
		return m.FreedomDegree
	}
	return 0
}

func (m *PlayerStatus) GetRole() *PlayerStatus_Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *PlayerStatus) GetMonthlyInvestmentIncome() int64 {
	if m != nil {
		return m.MonthlyInvestmentIncome
	}
	return 0
}

func (m *PlayerStatus) GetMonthlyExpense() int64 {
	if m != nil {
		return m.MonthlyExpense
	}
	return 0
}

func (m *PlayerStatus) GetMonthlyCashflow() int64 {
	if m != nil {
		return m.MonthlyCashflow
	}
	return 0
}

func (m *PlayerStatus) GetFinancialReport() []byte {
	if m != nil {
		return m.FinancialReport
	}
	return nil
}

func (m *PlayerStatus) GetAssetStatment() *common.AssetStatement {
	if m != nil {
		return m.AssetStatment
	}
	return nil
}

func (m *PlayerStatus) GetIsOut() bool {
	if m != nil {
		return m.IsOut
	}
	return false
}

type PlayerStatus_Role struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Flag                 string   `protobuf:"bytes,3,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerStatus_Role) Reset()         { *m = PlayerStatus_Role{} }
func (m *PlayerStatus_Role) String() string { return proto.CompactTextString(m) }
func (*PlayerStatus_Role) ProtoMessage()    {}
func (*PlayerStatus_Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{17, 0}
}

func (m *PlayerStatus_Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerStatus_Role.Unmarshal(m, b)
}
func (m *PlayerStatus_Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerStatus_Role.Marshal(b, m, deterministic)
}
func (m *PlayerStatus_Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerStatus_Role.Merge(m, src)
}
func (m *PlayerStatus_Role) XXX_Size() int {
	return xxx_messageInfo_PlayerStatus_Role.Size(m)
}
func (m *PlayerStatus_Role) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerStatus_Role.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerStatus_Role proto.InternalMessageInfo

func (m *PlayerStatus_Role) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerStatus_Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlayerStatus_Role) GetFlag() string {
	if m != nil {
		return m.Flag
	}
	return ""
}

type EndGameRequest struct {
	GameId    int64                `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Status    []*PlayerStatus      `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	StartedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	EndedAt   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=endedAt,proto3" json:"endedAt,omitempty"`
	// 匹配模式, 如果是排位赛, 会计算排位奖励
	MatchType            common.MatchType          `protobuf:"varint,5,opt,name=matchType,proto3,enum=pb.common.MatchType" json:"matchType,omitempty"`
	EndType              common.GameOverMsgEndType `protobuf:"varint,6,opt,name=endType,proto3,enum=pb.common.GameOverMsgEndType" json:"endType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EndGameRequest) Reset()         { *m = EndGameRequest{} }
func (m *EndGameRequest) String() string { return proto.CompactTextString(m) }
func (*EndGameRequest) ProtoMessage()    {}
func (*EndGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{18}
}

func (m *EndGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGameRequest.Unmarshal(m, b)
}
func (m *EndGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGameRequest.Marshal(b, m, deterministic)
}
func (m *EndGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGameRequest.Merge(m, src)
}
func (m *EndGameRequest) XXX_Size() int {
	return xxx_messageInfo_EndGameRequest.Size(m)
}
func (m *EndGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndGameRequest proto.InternalMessageInfo

func (m *EndGameRequest) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *EndGameRequest) GetStatus() []*PlayerStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *EndGameRequest) GetStartedAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *EndGameRequest) GetEndedAt() *timestamp.Timestamp {
	if m != nil {
		return m.EndedAt
	}
	return nil
}

func (m *EndGameRequest) GetMatchType() common.MatchType {
	if m != nil {
		return m.MatchType
	}
	return common.MatchType_UNKNOWN
}

func (m *EndGameRequest) GetEndType() common.GameOverMsgEndType {
	if m != nil {
		return m.EndType
	}
	return common.GameOverMsg_normal
}

type EndGameResponse struct {
	GameID               int64                       `protobuf:"varint,1,opt,name=gameID,proto3" json:"gameID,omitempty"`
	Bonus                map[int64]*common.GameBonus `protobuf:"bytes,2,rep,name=bonus,proto3" json:"bonus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EndGameResponse) Reset()         { *m = EndGameResponse{} }
func (m *EndGameResponse) String() string { return proto.CompactTextString(m) }
func (*EndGameResponse) ProtoMessage()    {}
func (*EndGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{19}
}

func (m *EndGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGameResponse.Unmarshal(m, b)
}
func (m *EndGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGameResponse.Marshal(b, m, deterministic)
}
func (m *EndGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGameResponse.Merge(m, src)
}
func (m *EndGameResponse) XXX_Size() int {
	return xxx_messageInfo_EndGameResponse.Size(m)
}
func (m *EndGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EndGameResponse proto.InternalMessageInfo

func (m *EndGameResponse) GetGameID() int64 {
	if m != nil {
		return m.GameID
	}
	return 0
}

func (m *EndGameResponse) GetBonus() map[int64]*common.GameBonus {
	if m != nil {
		return m.Bonus
	}
	return nil
}

type SendTextMessageReq struct {
	Receiver             []string `protobuf:"bytes,1,rep,name=receiver,proto3" json:"receiver,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTextMessageReq) Reset()         { *m = SendTextMessageReq{} }
func (m *SendTextMessageReq) String() string { return proto.CompactTextString(m) }
func (*SendTextMessageReq) ProtoMessage()    {}
func (*SendTextMessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{20}
}

func (m *SendTextMessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTextMessageReq.Unmarshal(m, b)
}
func (m *SendTextMessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTextMessageReq.Marshal(b, m, deterministic)
}
func (m *SendTextMessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTextMessageReq.Merge(m, src)
}
func (m *SendTextMessageReq) XXX_Size() int {
	return xxx_messageInfo_SendTextMessageReq.Size(m)
}
func (m *SendTextMessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTextMessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendTextMessageReq proto.InternalMessageInfo

func (m *SendTextMessageReq) GetReceiver() []string {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *SendTextMessageReq) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type SendGameInvitationReq struct {
	// 邀请者用户 id
	InvitorId int64 `protobuf:"varint,1,opt,name=invitorId,proto3" json:"invitorId,omitempty"`
	// 被邀请者用户 id
	InviteeId int64  `protobuf:"varint,2,opt,name=inviteeId,proto3" json:"inviteeId,omitempty"`
	RoomId    string `protobuf:"bytes,3,opt,name=roomId,proto3" json:"roomId,omitempty"`
	// 如果发送到群组需要提供 group id
	GroupId              string   `protobuf:"bytes,4,opt,name=groupId,proto3" json:"groupId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendGameInvitationReq) Reset()         { *m = SendGameInvitationReq{} }
func (m *SendGameInvitationReq) String() string { return proto.CompactTextString(m) }
func (*SendGameInvitationReq) ProtoMessage()    {}
func (*SendGameInvitationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{21}
}

func (m *SendGameInvitationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendGameInvitationReq.Unmarshal(m, b)
}
func (m *SendGameInvitationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendGameInvitationReq.Marshal(b, m, deterministic)
}
func (m *SendGameInvitationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendGameInvitationReq.Merge(m, src)
}
func (m *SendGameInvitationReq) XXX_Size() int {
	return xxx_messageInfo_SendGameInvitationReq.Size(m)
}
func (m *SendGameInvitationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendGameInvitationReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendGameInvitationReq proto.InternalMessageInfo

func (m *SendGameInvitationReq) GetInvitorId() int64 {
	if m != nil {
		return m.InvitorId
	}
	return 0
}

func (m *SendGameInvitationReq) GetInviteeId() int64 {
	if m != nil {
		return m.InviteeId
	}
	return 0
}

func (m *SendGameInvitationReq) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *SendGameInvitationReq) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

type RoleAssetType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleAssetType) Reset()         { *m = RoleAssetType{} }
func (m *RoleAssetType) String() string { return proto.CompactTextString(m) }
func (*RoleAssetType) ProtoMessage()    {}
func (*RoleAssetType) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{22}
}

func (m *RoleAssetType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleAssetType.Unmarshal(m, b)
}
func (m *RoleAssetType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleAssetType.Marshal(b, m, deterministic)
}
func (m *RoleAssetType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleAssetType.Merge(m, src)
}
func (m *RoleAssetType) XXX_Size() int {
	return xxx_messageInfo_RoleAssetType.Size(m)
}
func (m *RoleAssetType) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleAssetType.DiscardUnknown(m)
}

var xxx_messageInfo_RoleAssetType proto.InternalMessageInfo

// 财务报表玩游戏功能的角色资产信息
// 这个主要来自于 cenarius 的 Asset
type RoleAsset struct {
	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 资产类型，程序需要逻辑上区别不同类别的资产时用这个字段来判断
	// 目前只有工资需要特殊处理
	Code RoleAssetType_Enum `protobuf:"varint,3,opt,name=code,proto3,enum=pb.cenarius.RoleAssetType_Enum" json:"code,omitempty"`
	// 资产类型名称，这个是用来
	TypeName string `protobuf:"bytes,4,opt,name=typeName,proto3" json:"typeName,omitempty"`
	// 资产或负债的名字
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// 总额, 表示资产的总价
	TotalAmount int64 `protobuf:"varint,6,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	// 负债金额, AssetsType 如果是房产, 表示银行贷款, 如果是负债则表示负债总额
	LiabilityAmount int64 `protobuf:"varint,7,opt,name=liabilityAmount,proto3" json:"liabilityAmount,omitempty"`
	// 每月收入, 资产带来的月收入
	MonthIncome int64 `protobuf:"varint,8,opt,name=monthIncome,proto3" json:"monthIncome,omitempty"`
	// 每月还款金额
	MonthPayment         int64    `protobuf:"varint,9,opt,name=monthPayment,proto3" json:"monthPayment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleAsset) Reset()         { *m = RoleAsset{} }
func (m *RoleAsset) String() string { return proto.CompactTextString(m) }
func (*RoleAsset) ProtoMessage()    {}
func (*RoleAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{23}
}

func (m *RoleAsset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleAsset.Unmarshal(m, b)
}
func (m *RoleAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleAsset.Marshal(b, m, deterministic)
}
func (m *RoleAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleAsset.Merge(m, src)
}
func (m *RoleAsset) XXX_Size() int {
	return xxx_messageInfo_RoleAsset.Size(m)
}
func (m *RoleAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleAsset.DiscardUnknown(m)
}

var xxx_messageInfo_RoleAsset proto.InternalMessageInfo

func (m *RoleAsset) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoleAsset) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RoleAsset) GetCode() RoleAssetType_Enum {
	if m != nil {
		return m.Code
	}
	return RoleAssetType_UNKNOWN
}

func (m *RoleAsset) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *RoleAsset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoleAsset) GetTotalAmount() int64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *RoleAsset) GetLiabilityAmount() int64 {
	if m != nil {
		return m.LiabilityAmount
	}
	return 0
}

func (m *RoleAsset) GetMonthIncome() int64 {
	if m != nil {
		return m.MonthIncome
	}
	return 0
}

func (m *RoleAsset) GetMonthPayment() int64 {
	if m != nil {
		return m.MonthPayment
	}
	return 0
}

type GetUserDefinedRoleReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserDefinedRoleReq) Reset()         { *m = GetUserDefinedRoleReq{} }
func (m *GetUserDefinedRoleReq) String() string { return proto.CompactTextString(m) }
func (*GetUserDefinedRoleReq) ProtoMessage()    {}
func (*GetUserDefinedRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{24}
}

func (m *GetUserDefinedRoleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserDefinedRoleReq.Unmarshal(m, b)
}
func (m *GetUserDefinedRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserDefinedRoleReq.Marshal(b, m, deterministic)
}
func (m *GetUserDefinedRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserDefinedRoleReq.Merge(m, src)
}
func (m *GetUserDefinedRoleReq) XXX_Size() int {
	return xxx_messageInfo_GetUserDefinedRoleReq.Size(m)
}
func (m *GetUserDefinedRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserDefinedRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserDefinedRoleReq proto.InternalMessageInfo

func (m *GetUserDefinedRoleReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 查询已购买财务训练次数
type TrainingGameBalanceReq struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrainingGameBalanceReq) Reset()         { *m = TrainingGameBalanceReq{} }
func (m *TrainingGameBalanceReq) String() string { return proto.CompactTextString(m) }
func (*TrainingGameBalanceReq) ProtoMessage()    {}
func (*TrainingGameBalanceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{25}
}

func (m *TrainingGameBalanceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainingGameBalanceReq.Unmarshal(m, b)
}
func (m *TrainingGameBalanceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainingGameBalanceReq.Marshal(b, m, deterministic)
}
func (m *TrainingGameBalanceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainingGameBalanceReq.Merge(m, src)
}
func (m *TrainingGameBalanceReq) XXX_Size() int {
	return xxx_messageInfo_TrainingGameBalanceReq.Size(m)
}
func (m *TrainingGameBalanceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainingGameBalanceReq.DiscardUnknown(m)
}

var xxx_messageInfo_TrainingGameBalanceReq proto.InternalMessageInfo

func (m *TrainingGameBalanceReq) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

// 查询已购买财务训练次数
type TrainingGameBalanceRsp struct {
	// 总数
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 已使用
	Consumed int32 `protobuf:"varint,2,opt,name=consumed,proto3" json:"consumed,omitempty"`
	// 表示可以免费使用的次数, 有时候进行限免活动或者免费赠送的余额都可以使用这个属性, 并且应该优先消耗免费次数
	Free                 int32    `protobuf:"varint,3,opt,name=free,proto3" json:"free,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrainingGameBalanceRsp) Reset()         { *m = TrainingGameBalanceRsp{} }
func (m *TrainingGameBalanceRsp) String() string { return proto.CompactTextString(m) }
func (*TrainingGameBalanceRsp) ProtoMessage()    {}
func (*TrainingGameBalanceRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{26}
}

func (m *TrainingGameBalanceRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainingGameBalanceRsp.Unmarshal(m, b)
}
func (m *TrainingGameBalanceRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainingGameBalanceRsp.Marshal(b, m, deterministic)
}
func (m *TrainingGameBalanceRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainingGameBalanceRsp.Merge(m, src)
}
func (m *TrainingGameBalanceRsp) XXX_Size() int {
	return xxx_messageInfo_TrainingGameBalanceRsp.Size(m)
}
func (m *TrainingGameBalanceRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainingGameBalanceRsp.DiscardUnknown(m)
}

var xxx_messageInfo_TrainingGameBalanceRsp proto.InternalMessageInfo

func (m *TrainingGameBalanceRsp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *TrainingGameBalanceRsp) GetConsumed() int32 {
	if m != nil {
		return m.Consumed
	}
	return 0
}

func (m *TrainingGameBalanceRsp) GetFree() int32 {
	if m != nil {
		return m.Free
	}
	return 0
}

// 消费财务训练次数
type ConsumeTrainingReq struct {
	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	// 消费的游戏 ID, 现在是在游戏开始以后才调用消费, 增加参数方便数据关联
	GameID               int64    `protobuf:"varint,2,opt,name=gameID,proto3" json:"gameID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumeTrainingReq) Reset()         { *m = ConsumeTrainingReq{} }
func (m *ConsumeTrainingReq) String() string { return proto.CompactTextString(m) }
func (*ConsumeTrainingReq) ProtoMessage()    {}
func (*ConsumeTrainingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{27}
}

func (m *ConsumeTrainingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeTrainingReq.Unmarshal(m, b)
}
func (m *ConsumeTrainingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeTrainingReq.Marshal(b, m, deterministic)
}
func (m *ConsumeTrainingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeTrainingReq.Merge(m, src)
}
func (m *ConsumeTrainingReq) XXX_Size() int {
	return xxx_messageInfo_ConsumeTrainingReq.Size(m)
}
func (m *ConsumeTrainingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeTrainingReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeTrainingReq proto.InternalMessageInfo

func (m *ConsumeTrainingReq) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ConsumeTrainingReq) GetGameID() int64 {
	if m != nil {
		return m.GameID
	}
	return 0
}

type ConsumeTrainingRsp struct {
	UserID               int64    `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumeTrainingRsp) Reset()         { *m = ConsumeTrainingRsp{} }
func (m *ConsumeTrainingRsp) String() string { return proto.CompactTextString(m) }
func (*ConsumeTrainingRsp) ProtoMessage()    {}
func (*ConsumeTrainingRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02c31cdac48b14ae, []int{28}
}

func (m *ConsumeTrainingRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeTrainingRsp.Unmarshal(m, b)
}
func (m *ConsumeTrainingRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeTrainingRsp.Marshal(b, m, deterministic)
}
func (m *ConsumeTrainingRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeTrainingRsp.Merge(m, src)
}
func (m *ConsumeTrainingRsp) XXX_Size() int {
	return xxx_messageInfo_ConsumeTrainingRsp.Size(m)
}
func (m *ConsumeTrainingRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeTrainingRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeTrainingRsp proto.InternalMessageInfo

func (m *ConsumeTrainingRsp) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.cenarius.RoleAssetType_Enum", RoleAssetType_Enum_name, RoleAssetType_Enum_value)
	proto.RegisterType((*GetPlayerInfoReq)(nil), "pb.cenarius.GetPlayerInfoReq")
	proto.RegisterType((*GetPlayerInfoRsp)(nil), "pb.cenarius.GetPlayerInfoRsp")
	proto.RegisterType((*UpdateUserCoinReq)(nil), "pb.cenarius.UpdateUserCoinReq")
	proto.RegisterType((*UpdateUserCoinResp)(nil), "pb.cenarius.UpdateUserCoinResp")
	proto.RegisterType((*BatchUpdateCoinReq)(nil), "pb.cenarius.BatchUpdateCoinReq")
	proto.RegisterType((*BatchUpdateCoinResp)(nil), "pb.cenarius.BatchUpdateCoinResp")
	proto.RegisterMapType((map[int64]*UpdateUserCoinResp)(nil), "pb.cenarius.BatchUpdateCoinResp.ResultsEntry")
	proto.RegisterType((*AuthenticationReq)(nil), "pb.cenarius.AuthenticationReq")
	proto.RegisterType((*ListBotsReq)(nil), "pb.cenarius.ListBotsReq")
	proto.RegisterType((*BotInfo)(nil), "pb.cenarius.BotInfo")
	proto.RegisterType((*ListBotsRsp)(nil), "pb.cenarius.ListBotsRsp")
	proto.RegisterType((*Role)(nil), "pb.cenarius.Role")
	proto.RegisterType((*PullRolesRsp)(nil), "pb.cenarius.PullRolesRsp")
	proto.RegisterType((*UserAvailableRole)(nil), "pb.cenarius.UserAvailableRole")
	proto.RegisterType((*FetchUserRolesReq)(nil), "pb.cenarius.FetchUserRolesReq")
	proto.RegisterType((*FetchUserRolesRsp)(nil), "pb.cenarius.FetchUserRolesRsp")
	proto.RegisterType((*BatchFetchUserRolesReq)(nil), "pb.cenarius.BatchFetchUserRolesReq")
	proto.RegisterType((*BatchFetchUserRolesRsp)(nil), "pb.cenarius.BatchFetchUserRolesRsp")
	proto.RegisterMapType((map[int64]*FetchUserRolesRsp)(nil), "pb.cenarius.BatchFetchUserRolesRsp.RecordsEntry")
	proto.RegisterType((*PlayerStatus)(nil), "pb.cenarius.PlayerStatus")
	proto.RegisterType((*PlayerStatus_Role)(nil), "pb.cenarius.PlayerStatus.Role")
	proto.RegisterType((*EndGameRequest)(nil), "pb.cenarius.EndGameRequest")
	proto.RegisterType((*EndGameResponse)(nil), "pb.cenarius.EndGameResponse")
	proto.RegisterMapType((map[int64]*common.GameBonus)(nil), "pb.cenarius.EndGameResponse.BonusEntry")
	proto.RegisterType((*SendTextMessageReq)(nil), "pb.cenarius.SendTextMessageReq")
	proto.RegisterType((*SendGameInvitationReq)(nil), "pb.cenarius.SendGameInvitationReq")
	proto.RegisterType((*RoleAssetType)(nil), "pb.cenarius.RoleAssetType")
	proto.RegisterType((*RoleAsset)(nil), "pb.cenarius.RoleAsset")
	proto.RegisterType((*GetUserDefinedRoleReq)(nil), "pb.cenarius.GetUserDefinedRoleReq")
	proto.RegisterType((*TrainingGameBalanceReq)(nil), "pb.cenarius.TrainingGameBalanceReq")
	proto.RegisterType((*TrainingGameBalanceRsp)(nil), "pb.cenarius.TrainingGameBalanceRsp")
	proto.RegisterType((*ConsumeTrainingReq)(nil), "pb.cenarius.ConsumeTrainingReq")
	proto.RegisterType((*ConsumeTrainingRsp)(nil), "pb.cenarius.ConsumeTrainingRsp")
}

func init() { proto.RegisterFile("cenarius/main.proto", fileDescriptor_02c31cdac48b14ae) }

var fileDescriptor_02c31cdac48b14ae = []byte{
	// 2088 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x6d, 0x73, 0xdb, 0xb8,
	0xf1, 0xff, 0x4b, 0x96, 0x6c, 0x6b, 0xe5, 0x47, 0xd8, 0x71, 0x78, 0x4c, 0x2e, 0xf1, 0x9f, 0x69,
	0xef, 0x9c, 0x34, 0x91, 0x52, 0x5f, 0x3a, 0x97, 0xde, 0x4c, 0xd3, 0xca, 0xb2, 0x93, 0xe8, 0x2e,
	0x71, 0x3c, 0x74, 0x32, 0x37, 0x77, 0x9d, 0xa9, 0x07, 0x22, 0x61, 0x99, 0x13, 0x12, 0xa0, 0x09,
	0xd0, 0x89, 0x5e, 0xf6, 0xc5, 0x7d, 0x9a, 0x7e, 0x81, 0xf6, 0x5d, 0xfb, 0x61, 0xfa, 0x3d, 0x3a,
	0x00, 0x08, 0x3e, 0x49, 0x71, 0xda, 0x77, 0xdc, 0xdd, 0xdf, 0xe2, 0x61, 0xb1, 0xf8, 0xed, 0x82,
	0xb0, 0xe5, 0x11, 0x8a, 0x93, 0x20, 0xe5, 0xfd, 0x08, 0x07, 0xb4, 0x17, 0x27, 0x4c, 0x30, 0xd4,
	0x8d, 0xc7, 0x3d, 0xa3, 0xb7, 0xef, 0x4e, 0x18, 0x9b, 0x84, 0xa4, 0xaf, 0x4c, 0xe3, 0xf4, 0xbc,
	0x2f, 0x82, 0x88, 0x70, 0x81, 0xa3, 0x58, 0xa3, 0xed, 0x5b, 0x75, 0x00, 0x89, 0x62, 0x31, 0xcd,
	0x8c, 0x5b, 0x1e, 0x8b, 0x22, 0x46, 0xfb, 0x1e, 0xa3, 0x5c, 0xf0, 0x4c, 0x89, 0x32, 0xa5, 0x98,
	0xc6, 0xc4, 0xe8, 0xb6, 0x33, 0x5d, 0x44, 0x38, 0xc7, 0x13, 0xa2, 0xb5, 0xce, 0x43, 0xd8, 0x78,
	0x41, 0xc4, 0x49, 0x88, 0xa7, 0x24, 0x19, 0xd1, 0x73, 0xe6, 0x92, 0x4b, 0x64, 0xc1, 0x52, 0xca,
	0x49, 0x32, 0xf2, 0xb9, 0xd5, 0xd8, 0x5d, 0xd8, 0x5b, 0x70, 0x8d, 0xe8, 0x0c, 0xeb, 0x68, 0x1e,
	0xa3, 0x3e, 0x2c, 0xc5, 0x4a, 0xa1, 0xd1, 0xdd, 0xfd, 0x1b, 0x3d, 0xb9, 0x3b, 0x35, 0x59, 0xaf,
	0x04, 0x35, 0x28, 0xe7, 0x27, 0xd8, 0x7c, 0x17, 0xfb, 0x58, 0x90, 0x77, 0x9c, 0x24, 0x43, 0x16,
	0x50, 0x39, 0xe7, 0x0e, 0x2c, 0x4a, 0x71, 0x74, 0x68, 0x35, 0x76, 0x1b, 0x7b, 0x0b, 0x6e, 0x26,
	0x21, 0x04, 0x2d, 0x09, 0xb1, 0x9a, 0x4a, 0xab, 0xbe, 0xe5, 0xfa, 0x86, 0x2c, 0x8a, 0x08, 0x15,
	0xd6, 0xc2, 0x6e, 0x63, 0xaf, 0xe3, 0x1a, 0xd1, 0xf9, 0x13, 0xa0, 0xfa, 0xd0, 0x3c, 0xfe, 0x5f,
	0xc6, 0x76, 0x5e, 0x02, 0x3a, 0xc0, 0xc2, 0xbb, 0xd0, 0xc3, 0x98, 0xd5, 0xed, 0x43, 0xcb, 0x65,
	0x1f, 0xcc, 0x06, 0xef, 0xf4, 0x4a, 0xc7, 0xd7, 0x9b, 0xd9, 0x8b, 0xab, 0xb0, 0xce, 0x5f, 0x9b,
	0xb0, 0x35, 0x33, 0x14, 0x8f, 0x91, 0x03, 0x2b, 0xa7, 0xa9, 0xe7, 0x11, 0xce, 0xa5, 0x8f, 0x09,
	0x71, 0x45, 0x87, 0x76, 0xa1, 0xfb, 0x1c, 0x87, 0x01, 0xf1, 0x35, 0xa4, 0xa9, 0x20, 0x65, 0x15,
	0x7a, 0x01, 0x4b, 0x09, 0xe1, 0x69, 0x28, 0xb8, 0xb5, 0xa0, 0x16, 0xf5, 0xa8, 0xb2, 0xa8, 0x39,
	0x13, 0xf7, 0x5c, 0x8d, 0x3f, 0xa2, 0x22, 0x99, 0xba, 0xc6, 0xdb, 0xfe, 0x33, 0xac, 0x94, 0x0d,
	0x68, 0x03, 0x16, 0xde, 0x93, 0x69, 0x16, 0x29, 0xf9, 0x89, 0x7e, 0x07, 0xed, 0x2b, 0x1c, 0xa6,
	0x44, 0xc5, 0xa9, 0xbb, 0x7f, 0xf7, 0xda, 0xdd, 0xf3, 0xd8, 0xd5, 0xe8, 0xef, 0x9a, 0x4f, 0x1b,
	0xce, 0x7d, 0xd8, 0x1c, 0xa4, 0xe2, 0x82, 0x50, 0x11, 0x78, 0x58, 0x04, 0x4c, 0x05, 0x73, 0x1b,
	0xda, 0x82, 0xbd, 0x27, 0x54, 0xcd, 0xd1, 0x71, 0xb5, 0xe0, 0xbc, 0x80, 0xee, 0xab, 0x80, 0x8b,
	0x03, 0x26, 0xb8, 0x04, 0x3d, 0x05, 0x88, 0xf1, 0x24, 0xa0, 0xca, 0x4b, 0x21, 0xbb, 0xfb, 0x56,
	0x39, 0xb1, 0x72, 0xa3, 0x8c, 0x78, 0x09, 0xeb, 0x7c, 0x0b, 0x4b, 0x07, 0x4c, 0xc8, 0x94, 0x9b,
	0x3f, 0x93, 0x4c, 0x87, 0x8b, 0xc0, 0x27, 0x23, 0x3f, 0x3b, 0xf8, 0x4c, 0x72, 0x2e, 0x4b, 0x2b,
	0xe0, 0x31, 0xda, 0x83, 0xd6, 0x98, 0x09, 0x73, 0xe6, 0xdb, 0xd5, 0xf0, 0xea, 0x09, 0x5c, 0x85,
	0xa8, 0xad, 0xb5, 0x79, 0xdd, 0x5a, 0x79, 0x5c, 0x59, 0xeb, 0xbf, 0x97, 0x65, 0x62, 0x85, 0x04,
	0xad, 0x41, 0x33, 0x4f, 0xcf, 0xa6, 0x4e, 0x4d, 0x8a, 0x23, 0x1d, 0xf2, 0x8e, 0xab, 0xbe, 0x91,
	0x0d, 0xcb, 0x01, 0xf5, 0x53, 0x2e, 0x92, 0x69, 0x96, 0xf7, 0xb9, 0x2c, 0xf7, 0xc4, 0x71, 0x88,
	0x93, 0xa9, 0xd5, 0xd2, 0x7b, 0xd2, 0x92, 0xbc, 0x2a, 0xe4, 0x63, 0x4c, 0x28, 0x27, 0x56, 0x5b,
	0x19, 0x8c, 0x88, 0x6e, 0x43, 0xe7, 0x82, 0xa5, 0x9c, 0xbc, 0x62, 0x98, 0x5a, 0x8b, 0xca, 0x56,
	0x28, 0xa4, 0x9f, 0x87, 0x13, 0x65, 0x5b, 0xd2, 0x7e, 0x99, 0x88, 0xee, 0x00, 0x78, 0x09, 0xf1,
	0x03, 0x31, 0xc4, 0x89, 0x6f, 0x2d, 0x2b, 0x63, 0x49, 0x23, 0x53, 0x77, 0xcc, 0x92, 0x84, 0x7d,
	0x78, 0xcd, 0x28, 0x99, 0x5a, 0x1d, 0x05, 0x28, 0xab, 0xe4, 0x3e, 0xc6, 0x98, 0xbe, 0x57, 0x83,
	0x83, 0x32, 0xe7, 0x32, 0x72, 0x00, 0x04, 0xfe, 0xf8, 0x16, 0x0b, 0x72, 0x32, 0x7c, 0x6b, 0x75,
	0x77, 0x1b, 0x7b, 0xcd, 0x83, 0xa6, 0xd5, 0x70, 0x4b, 0x5a, 0xf4, 0x15, 0xac, 0xa8, 0x85, 0xba,
	0x19, 0x6a, 0x25, 0x47, 0x55, 0xf4, 0x72, 0x2c, 0x0f, 0x27, 0x06, 0xb5, 0x5a, 0x8c, 0x55, 0x68,
	0xd1, 0x63, 0xd8, 0x2c, 0xd6, 0x6e, 0xa0, 0x6b, 0x39, 0x74, 0xd6, 0x88, 0xf6, 0x01, 0x95, 0x36,
	0x63, 0x5c, 0xd6, 0x73, 0x97, 0x39, 0x56, 0xf4, 0x10, 0xd6, 0xcd, 0x0e, 0x8d, 0xc3, 0x46, 0xee,
	0x50, 0x37, 0xa1, 0x07, 0xb0, 0x26, 0xf0, 0xc7, 0x01, 0xf5, 0x4f, 0x63, 0x42, 0x7d, 0x09, 0xde,
	0xcc, 0xc1, 0x35, 0x8b, 0x8c, 0xc5, 0x18, 0x8f, 0xa7, 0x39, 0x12, 0x15, 0xb1, 0x28, 0xeb, 0xe5,
	0xa9, 0x7c, 0xc0, 0x13, 0xf2, 0x32, 0x78, 0xaf, 0x66, 0xdf, 0x92, 0x30, 0xb7, 0xac, 0x92, 0x19,
	0x77, 0x1e, 0xe2, 0x89, 0xb5, 0xad, 0x33, 0x4e, 0x7e, 0xcb, 0x1c, 0xc1, 0x57, 0x38, 0x08, 0xf1,
	0x38, 0x24, 0xd6, 0x8d, 0xdd, 0xc6, 0xde, 0xb2, 0x5b, 0x28, 0x94, 0x47, 0x42, 0x88, 0xb5, 0xa3,
	0x0c, 0xea, 0x5b, 0xe6, 0x21, 0xbe, 0xc2, 0x02, 0x27, 0xd6, 0x4d, 0x35, 0x4e, 0x26, 0xc9, 0xac,
	0x89, 0x13, 0x16, 0x31, 0x99, 0xf5, 0xdc, 0xb2, 0x76, 0x17, 0xf6, 0x3a, 0x6e, 0x49, 0x83, 0x7e,
	0x0f, 0xd6, 0x59, 0x40, 0x79, 0x9a, 0x60, 0xea, 0x91, 0x01, 0xf5, 0x5f, 0xb2, 0x94, 0x07, 0x74,
	0xf2, 0x3c, 0xa5, 0xbe, 0xf5, 0x85, 0xca, 0x91, 0x9b, 0xa3, 0xf9, 0x66, 0x74, 0x0f, 0x56, 0xcf,
	0xd4, 0xb9, 0x1f, 0x65, 0x89, 0x6e, 0x2b, 0xfc, 0xca, 0xcb, 0x92, 0x0e, 0xdd, 0x85, 0xee, 0x99,
	0x87, 0x13, 0x03, 0xb9, 0xa5, 0xd3, 0x76, 0x98, 0x6b, 0xd0, 0x23, 0x40, 0x67, 0xc5, 0x61, 0x1b,
	0xdc, 0x6d, 0x85, 0xdb, 0x1c, 0xd6, 0x0d, 0xa8, 0x0f, 0x5b, 0x67, 0xa5, 0x83, 0x36, 0xf8, 0x2f,
	0x15, 0x1e, 0x1d, 0xcc, 0x58, 0xd0, 0xff, 0xc3, 0xca, 0x99, 0x3c, 0x11, 0x83, 0xbc, 0xa3, 0xef,
	0xc5, 0x41, 0xa1, 0x42, 0xf7, 0x61, 0xe3, 0xcc, 0xe4, 0x82, 0x81, 0xdd, 0x55, 0xb0, 0xf5, 0x83,
	0xaa, 0x1a, 0xf5, 0x60, 0x11, 0x73, 0x4e, 0x04, 0xb7, 0x76, 0x15, 0x3b, 0xed, 0x54, 0xd8, 0x49,
	0x32, 0xca, 0x40, 0x9a, 0xdd, 0x0c, 0xe5, 0x7c, 0x0b, 0x2b, 0x27, 0x69, 0x18, 0x4a, 0x83, 0xe2,
	0xb6, 0xaf, 0xa1, 0x9d, 0xc8, 0xef, 0x8c, 0xdc, 0x36, 0x67, 0xdc, 0x5d, 0x6d, 0x77, 0x42, 0xd8,
	0x94, 0xdc, 0x3e, 0x30, 0x87, 0xae, 0xc8, 0xea, 0xd7, 0xd0, 0x92, 0xd6, 0x8c, 0x95, 0xe7, 0x38,
	0x2b, 0xb3, 0xcc, 0x9e, 0x38, 0x4d, 0xbc, 0x0b, 0xcc, 0x89, 0xa6, 0xda, 0x65, 0xb7, 0x50, 0xe4,
	0xd9, 0xb3, 0x50, 0x64, 0x8f, 0xf3, 0x1b, 0xd8, 0x7c, 0x4e, 0x64, 0xe1, 0xe2, 0x24, 0xd1, 0x6b,
	0xd5, 0x9d, 0x41, 0x5a, 0xa9, 0xde, 0x5a, 0x72, 0x46, 0x33, 0x60, 0x1e, 0xa3, 0x27, 0xd5, 0x8d,
	0xd5, 0x2a, 0x75, 0x7d, 0x27, 0x66, 0x97, 0x3d, 0xd8, 0x51, 0x05, 0x73, 0x76, 0xf2, 0x6d, 0x68,
	0xa7, 0xa5, 0x2a, 0xad, 0x05, 0xe7, 0x9f, 0x8d, 0xf9, 0x0e, 0x3c, 0x46, 0xdf, 0xcb, 0xba, 0xec,
	0xb1, 0xc4, 0x37, 0x4b, 0x78, 0x3c, 0x5b, 0x97, 0x67, 0xbc, 0x7a, 0xae, 0x76, 0xc9, 0x4b, 0xb3,
	0x92, 0xec, 0x9f, 0x65, 0x69, 0x2e, 0x0c, 0x73, 0x4a, 0xf3, 0x93, 0x6a, 0x69, 0xae, 0x6e, 0x77,
	0x66, 0x9a, 0x72, 0x65, 0xfe, 0xa5, 0x05, 0x2b, 0xba, 0x39, 0x3b, 0x15, 0x58, 0xa4, 0x3c, 0x0f,
	0xb3, 0x5f, 0x09, 0xb3, 0x2f, 0xd9, 0x5a, 0x37, 0x6e, 0x79, 0xbd, 0xcc, 0x65, 0x55, 0x91, 0xf8,
	0x8f, 0x01, 0xa5, 0x24, 0xc9, 0xce, 0x31, 0x97, 0xd1, 0xaf, 0x60, 0x55, 0x9e, 0xa9, 0xcf, 0xa2,
	0x43, 0x32, 0x91, 0x07, 0xdd, 0x52, 0x9c, 0x53, 0x55, 0xca, 0xc6, 0x4a, 0xa5, 0x52, 0x7b, 0xce,
	0xfa, 0xcb, 0xcb, 0x2b, 0xe7, 0xd5, 0x53, 0xb8, 0x19, 0x31, 0x2a, 0x2e, 0xc2, 0xe9, 0x88, 0x5e,
	0x11, 0x2e, 0x64, 0xe7, 0x37, 0xa2, 0x1e, 0x8b, 0x48, 0x56, 0xc7, 0x3e, 0x65, 0x46, 0x5f, 0xc1,
	0x5a, 0x66, 0x32, 0xf7, 0x4b, 0x17, 0xb7, 0x9a, 0x16, 0xed, 0xc1, 0x7a, 0xa6, 0x19, 0x62, 0x7e,
	0x71, 0x1e, 0xb2, 0x0f, 0x59, 0xa1, 0xab, 0xab, 0x25, 0xf2, 0x3c, 0xa0, 0x98, 0x7a, 0x01, 0x0e,
	0x5d, 0x12, 0xb3, 0x44, 0xa8, 0x8a, 0xb7, 0xe2, 0xd6, 0xd5, 0xe8, 0x8f, 0xb0, 0xaa, 0x2e, 0xa3,
	0xdc, 0x8f, 0x6a, 0x5d, 0x41, 0x6d, 0xf9, 0x8b, 0x52, 0x9f, 0x30, 0x30, 0x76, 0x22, 0x01, 0x6e,
	0x15, 0x2f, 0x53, 0x31, 0xe0, 0x6f, 0x52, 0xa1, 0xaa, 0xe2, 0xb2, 0xab, 0x05, 0xfb, 0x59, 0xd1,
	0x40, 0x04, 0xe6, 0xe8, 0x9a, 0x81, 0x3f, 0xb7, 0x81, 0x30, 0x14, 0xbf, 0x50, 0x50, 0xbc, 0xf3,
	0x8f, 0x26, 0xac, 0x1d, 0x51, 0xff, 0x05, 0x8e, 0x88, 0x4b, 0x2e, 0x53, 0xc2, 0x85, 0xcc, 0x84,
	0x09, 0x8e, 0x48, 0x91, 0x09, 0x5a, 0x42, 0xbf, 0x85, 0x45, 0xae, 0x0e, 0x43, 0xf5, 0xa3, 0x66,
	0xe9, 0xf3, 0x4e, 0xcb, 0xcd, 0x80, 0xe8, 0x29, 0x74, 0xb8, 0xc0, 0x89, 0x20, 0xfe, 0x40, 0xf7,
	0xea, 0xdd, 0x7d, 0xbb, 0xa7, 0x5f, 0x33, 0x3d, 0xf3, 0x9a, 0xe9, 0xbd, 0x35, 0xcf, 0x1d, 0xb7,
	0x00, 0xa3, 0x27, 0xb0, 0x44, 0xa8, 0xaf, 0xfc, 0x5a, 0x9f, 0xf5, 0x33, 0x50, 0xb4, 0x0f, 0x9d,
	0x48, 0xde, 0xb0, 0xb7, 0xd3, 0x58, 0xe7, 0xd4, 0x5a, 0xd6, 0xb8, 0xe9, 0x00, 0xbf, 0x36, 0x36,
	0xb7, 0x80, 0xa1, 0xa7, 0x6a, 0x26, 0xe5, 0xb1, 0xa8, 0x3c, 0xee, 0x94, 0x3c, 0x64, 0x5c, 0xde,
	0x5c, 0x91, 0xe4, 0x35, 0x9f, 0xf4, 0x32, 0x94, 0x6b, 0xe0, 0xce, 0xdf, 0x1b, 0xb0, 0x9e, 0xc7,
	0x8e, 0xc7, 0x4c, 0xa6, 0x8e, 0x09, 0xde, 0x61, 0x25, 0x78, 0x87, 0xe8, 0x0f, 0xd0, 0x1e, 0x33,
	0x9a, 0xc7, 0xee, 0xeb, 0x4a, 0xec, 0x6a, 0x83, 0xf4, 0x0e, 0x24, 0x52, 0x93, 0x81, 0xf6, 0xb2,
	0x8f, 0x01, 0x0a, 0xe5, 0x1c, 0x22, 0x78, 0x50, 0x25, 0x82, 0xed, 0xda, 0x16, 0x94, 0x6f, 0xf9,
	0xfa, 0x1f, 0x02, 0x3a, 0x95, 0xdb, 0x20, 0x1f, 0xc5, 0x6b, 0xfd, 0x1e, 0x94, 0x6c, 0x67, 0xc3,
	0x72, 0x42, 0x3c, 0x12, 0x5c, 0x91, 0x44, 0xb1, 0x57, 0xc7, 0xcd, 0x65, 0x99, 0x3c, 0x82, 0x7c,
	0x14, 0x26, 0xa1, 0xe4, 0xb7, 0xf3, 0x4b, 0x03, 0x6e, 0xc8, 0x61, 0xe4, 0x14, 0x23, 0x7a, 0x15,
	0x88, 0xbc, 0xc7, 0xbf, 0x0d, 0x9d, 0x40, 0x2a, 0x58, 0x41, 0x28, 0x85, 0x22, 0xb7, 0x92, 0xa2,
	0x09, 0x2f, 0x14, 0x32, 0x84, 0x09, 0x63, 0xd1, 0xc8, 0xcf, 0x12, 0x35, 0x93, 0x64, 0x4f, 0x3a,
	0x49, 0x58, 0x1a, 0x8f, 0x7c, 0x95, 0x12, 0x1d, 0xd7, 0x88, 0xce, 0x77, 0xb0, 0x9a, 0xd7, 0x3c,
	0x75, 0x32, 0xf7, 0xa1, 0x75, 0x44, 0xd3, 0x08, 0x75, 0x61, 0xe9, 0xdd, 0xf1, 0x0f, 0xc7, 0x6f,
	0x7e, 0x3c, 0xde, 0xf8, 0x3f, 0x04, 0xb0, 0x78, 0x3a, 0x78, 0x35, 0x70, 0x7f, 0xda, 0x68, 0xa0,
	0x65, 0x68, 0x0d, 0x07, 0xa7, 0x2f, 0x37, 0x9a, 0xce, 0xdf, 0x9a, 0xd0, 0xc9, 0x9d, 0x4b, 0xd7,
	0xa8, 0xa3, 0xae, 0xd1, 0x4d, 0xfd, 0x14, 0x3e, 0x0b, 0xf2, 0xc7, 0x42, 0x46, 0x8b, 0xdf, 0x40,
	0xcb, 0x63, 0xbe, 0x2e, 0x5f, 0x6b, 0xb5, 0x37, 0x51, 0x65, 0x2d, 0x3d, 0xb9, 0x10, 0x57, 0x81,
	0x65, 0x7c, 0xe5, 0x8b, 0xfc, 0x58, 0x5e, 0x4c, 0xbd, 0x85, 0x5c, 0xce, 0x2f, 0x6c, 0xbb, 0x74,
	0x61, 0x77, 0xa1, 0x2b, 0x98, 0xc0, 0xe1, 0x20, 0x62, 0x29, 0x15, 0x19, 0xbb, 0x95, 0x55, 0x92,
	0x7f, 0xc2, 0x00, 0x8f, 0x83, 0x30, 0x10, 0xd3, 0x0c, 0xa5, 0x29, 0xad, 0xae, 0x96, 0x63, 0x29,
	0xf2, 0xca, 0x98, 0x52, 0xf3, 0x59, 0x59, 0x25, 0x1f, 0xa6, 0x4a, 0x3c, 0xc1, 0x53, 0x45, 0x50,
	0xba, 0x75, 0xaf, 0xe8, 0x9c, 0xc7, 0x70, 0xe3, 0x05, 0x11, 0xb2, 0xa8, 0x1c, 0x92, 0xf3, 0x80,
	0x12, 0x5f, 0xf1, 0x32, 0xb9, 0x2c, 0x07, 0xaa, 0x52, 0x3f, 0x9c, 0xc7, 0xb0, 0xf3, 0x36, 0xc1,
	0x01, 0x0d, 0xe8, 0x44, 0x65, 0x22, 0x0e, 0x65, 0x0f, 0x77, 0x5d, 0x61, 0xff, 0xcb, 0x7c, 0x0f,
	0x1e, 0xeb, 0xf7, 0x9c, 0xc0, 0xa1, 0x72, 0x68, 0xbb, 0x5a, 0x90, 0x51, 0xf5, 0x18, 0xe5, 0x69,
	0x94, 0xb5, 0x19, 0x6d, 0x37, 0x97, 0x2b, 0x5d, 0x46, 0x3b, 0xeb, 0x32, 0x0e, 0x01, 0x0d, 0xb5,
	0xdd, 0x4c, 0x73, 0xcd, 0x6a, 0x4a, 0x17, 0xba, 0x59, 0xbe, 0xd0, 0xce, 0xc3, 0xd9, 0x51, 0xf4,
	0xaf, 0x86, 0x6c, 0x94, 0x72, 0xba, 0x1c, 0xee, 0xff, 0x6b, 0x09, 0xd6, 0x87, 0x59, 0x7e, 0x9c,
	0x92, 0xe4, 0x2a, 0xf0, 0x08, 0x3a, 0x82, 0x95, 0xd2, 0xe3, 0x98, 0xa0, 0x6a, 0xf5, 0x9b, 0x79,
	0x37, 0xdb, 0xf3, 0xff, 0xab, 0xa0, 0xd7, 0xb0, 0x5a, 0xf9, 0x27, 0x83, 0xbe, 0xac, 0x8c, 0x53,
	0xff, 0xbb, 0x63, 0x5f, 0x67, 0xe6, 0x31, 0x7a, 0x06, 0x9d, 0xbc, 0x55, 0x44, 0x3b, 0x33, 0xa4,
	0x7b, 0x14, 0xc5, 0x62, 0x6a, 0xd7, 0xa8, 0xbf, 0xdc, 0x5a, 0x9e, 0xc0, 0x5a, 0xb5, 0xf1, 0x40,
	0xd7, 0x76, 0x25, 0xe4, 0xd2, 0xfe, 0x4c, 0xd7, 0x82, 0xce, 0xb2, 0xff, 0x28, 0xb5, 0x61, 0xef,
	0x7d, 0xb6, 0xb1, 0x22, 0x97, 0xf6, 0xbd, 0xff, 0xa2, 0xfb, 0x42, 0xcf, 0x60, 0xd9, 0x3c, 0xfc,
	0x91, 0x55, 0x71, 0x28, 0xfd, 0x91, 0xb0, 0x3f, 0x61, 0xe1, 0x31, 0x3a, 0x84, 0xa5, 0x8c, 0xc1,
	0xd1, 0xad, 0xf9, 0xbc, 0xae, 0x0a, 0xab, 0x7d, 0xfb, 0x3a, 0xd2, 0x47, 0xdf, 0xc3, 0x7a, 0x8d,
	0x92, 0x51, 0x95, 0x56, 0x66, 0x09, 0xdb, 0xfe, 0xc4, 0xf9, 0xa0, 0x1f, 0x00, 0xcd, 0x5e, 0x53,
	0xe4, 0xd4, 0x4f, 0x7e, 0xf6, 0x1e, 0xdb, 0xb3, 0xdd, 0x3c, 0x3a, 0xd1, 0xb5, 0xa2, 0x4a, 0xf2,
	0xb5, 0xc1, 0xe6, 0x56, 0x81, 0x4f, 0x2e, 0xef, 0x18, 0xb6, 0x6a, 0x77, 0x47, 0x05, 0xaf, 0xba,
	0xdd, 0xd9, 0x3b, 0xfa, 0xc9, 0xf1, 0x7c, 0xb0, 0x86, 0x17, 0xc4, 0x7b, 0x3f, 0x87, 0x36, 0x6a,
	0x69, 0x32, 0x9f, 0x8a, 0xec, 0xcf, 0x83, 0x78, 0x7c, 0xf0, 0xe0, 0xe7, 0xbd, 0x49, 0x20, 0x42,
	0xac, 0x2e, 0x61, 0xff, 0x8a, 0x78, 0x82, 0x25, 0x69, 0xdc, 0x57, 0x5d, 0xda, 0xa3, 0x78, 0xdc,
	0x9f, 0xb0, 0xbe, 0x19, 0x62, 0xbc, 0xa8, 0x56, 0xf8, 0xcd, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x88, 0x64, 0x8c, 0xdf, 0xfe, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CenariusServiceClient is the client API for CenariusService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CenariusServiceClient interface {
	Authenticate(ctx context.Context, in *AuthenticationReq, opts ...grpc.CallOption) (*common.PlayerInfo, error)
	GetPlayerInfo(ctx context.Context, in *GetPlayerInfoReq, opts ...grpc.CallOption) (*GetPlayerInfoRsp, error)
	// 获取所有可以使用的职业列表, 游戏开始前或者游戏服务器启动时加载
	PullRoles(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PullRolesRsp, error)
	// 获取用户可以使用的职业列表(已经购买或者免费)
	FetchUserRoles(ctx context.Context, in *FetchUserRolesReq, opts ...grpc.CallOption) (*FetchUserRolesRsp, error)
	// 同时获取多个用户的可用职业列表
	BatchFetchUserRoles(ctx context.Context, in *BatchFetchUserRolesReq, opts ...grpc.CallOption) (*BatchFetchUserRolesRsp, error)
	//    rpc UpdateUserCoin (UpdateUserCoinReq) returns (UpdateUserCoinResp){
	//        option deprecated = true;
	//    };
	//    rpc BatchUpdateUserCoin (BatchUpdateCoinReq) returns (BatchUpdateCoinResp){
	//        option deprecated = true;
	//    };
	// 注意，这个接口目前是按 id 升序返回的
	ListBots(ctx context.Context, in *ListBotsReq, opts ...grpc.CallOption) (*ListBotsRsp, error)
	EndGame(ctx context.Context, in *EndGameRequest, opts ...grpc.CallOption) (*EndGameResponse, error)
	SendTextMessage(ctx context.Context, in *SendTextMessageReq, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUserDefinedRole(ctx context.Context, in *GetUserDefinedRoleReq, opts ...grpc.CallOption) (*Role, error)
	// NOTE(QuantumGhost): 这个只是临时解决方案，上了云信 IM 之后可以客户端自己发送，就不需要服务器参与了
	SendGameInvitation(ctx context.Context, in *SendGameInvitationReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 财务训练, 应该在游戏开始的时候再去消费,
	// 或者在游戏结束的时候 canaries 自动消费, 这样就不再需要这个接口了
	ConsumeTrainingGame(ctx context.Context, in *ConsumeTrainingReq, opts ...grpc.CallOption) (*empty.Empty, error)
	// 获取财务训练余额, 创建训练模式的房间或者开始训练模式匹配的时候都可以去调用
	CheckTrainingGameBalance(ctx context.Context, in *TrainingGameBalanceReq, opts ...grpc.CallOption) (*TrainingGameBalanceRsp, error)
}

type cenariusServiceClient struct {
	cc *grpc.ClientConn
}

func NewCenariusServiceClient(cc *grpc.ClientConn) CenariusServiceClient {
	return &cenariusServiceClient{cc}
}

func (c *cenariusServiceClient) Authenticate(ctx context.Context, in *AuthenticationReq, opts ...grpc.CallOption) (*common.PlayerInfo, error) {
	out := new(common.PlayerInfo)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) GetPlayerInfo(ctx context.Context, in *GetPlayerInfoReq, opts ...grpc.CallOption) (*GetPlayerInfoRsp, error) {
	out := new(GetPlayerInfoRsp)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/GetPlayerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) PullRoles(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PullRolesRsp, error) {
	out := new(PullRolesRsp)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/PullRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) FetchUserRoles(ctx context.Context, in *FetchUserRolesReq, opts ...grpc.CallOption) (*FetchUserRolesRsp, error) {
	out := new(FetchUserRolesRsp)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/FetchUserRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) BatchFetchUserRoles(ctx context.Context, in *BatchFetchUserRolesReq, opts ...grpc.CallOption) (*BatchFetchUserRolesRsp, error) {
	out := new(BatchFetchUserRolesRsp)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/BatchFetchUserRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) ListBots(ctx context.Context, in *ListBotsReq, opts ...grpc.CallOption) (*ListBotsRsp, error) {
	out := new(ListBotsRsp)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/ListBots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) EndGame(ctx context.Context, in *EndGameRequest, opts ...grpc.CallOption) (*EndGameResponse, error) {
	out := new(EndGameResponse)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/EndGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) SendTextMessage(ctx context.Context, in *SendTextMessageReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/SendTextMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) GetUserDefinedRole(ctx context.Context, in *GetUserDefinedRoleReq, opts ...grpc.CallOption) (*Role, error) {
	out := new(Role)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/GetUserDefinedRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) SendGameInvitation(ctx context.Context, in *SendGameInvitationReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/SendGameInvitation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) ConsumeTrainingGame(ctx context.Context, in *ConsumeTrainingReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/ConsumeTrainingGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cenariusServiceClient) CheckTrainingGameBalance(ctx context.Context, in *TrainingGameBalanceReq, opts ...grpc.CallOption) (*TrainingGameBalanceRsp, error) {
	out := new(TrainingGameBalanceRsp)
	err := c.cc.Invoke(ctx, "/pb.cenarius.CenariusService/CheckTrainingGameBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CenariusServiceServer is the server API for CenariusService service.
type CenariusServiceServer interface {
	Authenticate(context.Context, *AuthenticationReq) (*common.PlayerInfo, error)
	GetPlayerInfo(context.Context, *GetPlayerInfoReq) (*GetPlayerInfoRsp, error)
	// 获取所有可以使用的职业列表, 游戏开始前或者游戏服务器启动时加载
	PullRoles(context.Context, *empty.Empty) (*PullRolesRsp, error)
	// 获取用户可以使用的职业列表(已经购买或者免费)
	FetchUserRoles(context.Context, *FetchUserRolesReq) (*FetchUserRolesRsp, error)
	// 同时获取多个用户的可用职业列表
	BatchFetchUserRoles(context.Context, *BatchFetchUserRolesReq) (*BatchFetchUserRolesRsp, error)
	//    rpc UpdateUserCoin (UpdateUserCoinReq) returns (UpdateUserCoinResp){
	//        option deprecated = true;
	//    };
	//    rpc BatchUpdateUserCoin (BatchUpdateCoinReq) returns (BatchUpdateCoinResp){
	//        option deprecated = true;
	//    };
	// 注意，这个接口目前是按 id 升序返回的
	ListBots(context.Context, *ListBotsReq) (*ListBotsRsp, error)
	EndGame(context.Context, *EndGameRequest) (*EndGameResponse, error)
	SendTextMessage(context.Context, *SendTextMessageReq) (*empty.Empty, error)
	GetUserDefinedRole(context.Context, *GetUserDefinedRoleReq) (*Role, error)
	// NOTE(QuantumGhost): 这个只是临时解决方案，上了云信 IM 之后可以客户端自己发送，就不需要服务器参与了
	SendGameInvitation(context.Context, *SendGameInvitationReq) (*empty.Empty, error)
	// 财务训练, 应该在游戏开始的时候再去消费,
	// 或者在游戏结束的时候 canaries 自动消费, 这样就不再需要这个接口了
	ConsumeTrainingGame(context.Context, *ConsumeTrainingReq) (*empty.Empty, error)
	// 获取财务训练余额, 创建训练模式的房间或者开始训练模式匹配的时候都可以去调用
	CheckTrainingGameBalance(context.Context, *TrainingGameBalanceReq) (*TrainingGameBalanceRsp, error)
}

func RegisterCenariusServiceServer(s *grpc.Server, srv CenariusServiceServer) {
	s.RegisterService(&_CenariusService_serviceDesc, srv)
}

func _CenariusService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).Authenticate(ctx, req.(*AuthenticationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_GetPlayerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlayerInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).GetPlayerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/GetPlayerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).GetPlayerInfo(ctx, req.(*GetPlayerInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_PullRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).PullRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/PullRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).PullRoles(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_FetchUserRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchUserRolesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).FetchUserRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/FetchUserRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).FetchUserRoles(ctx, req.(*FetchUserRolesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_BatchFetchUserRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchFetchUserRolesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).BatchFetchUserRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/BatchFetchUserRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).BatchFetchUserRoles(ctx, req.(*BatchFetchUserRolesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_ListBots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBotsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).ListBots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/ListBots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).ListBots(ctx, req.(*ListBotsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_EndGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).EndGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/EndGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).EndGame(ctx, req.(*EndGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_SendTextMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTextMessageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).SendTextMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/SendTextMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).SendTextMessage(ctx, req.(*SendTextMessageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_GetUserDefinedRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserDefinedRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).GetUserDefinedRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/GetUserDefinedRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).GetUserDefinedRole(ctx, req.(*GetUserDefinedRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_SendGameInvitation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendGameInvitationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).SendGameInvitation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/SendGameInvitation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).SendGameInvitation(ctx, req.(*SendGameInvitationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_ConsumeTrainingGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumeTrainingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).ConsumeTrainingGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/ConsumeTrainingGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).ConsumeTrainingGame(ctx, req.(*ConsumeTrainingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenariusService_CheckTrainingGameBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrainingGameBalanceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenariusServiceServer).CheckTrainingGameBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.cenarius.CenariusService/CheckTrainingGameBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenariusServiceServer).CheckTrainingGameBalance(ctx, req.(*TrainingGameBalanceReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CenariusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.cenarius.CenariusService",
	HandlerType: (*CenariusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authenticate",
			Handler:    _CenariusService_Authenticate_Handler,
		},
		{
			MethodName: "GetPlayerInfo",
			Handler:    _CenariusService_GetPlayerInfo_Handler,
		},
		{
			MethodName: "PullRoles",
			Handler:    _CenariusService_PullRoles_Handler,
		},
		{
			MethodName: "FetchUserRoles",
			Handler:    _CenariusService_FetchUserRoles_Handler,
		},
		{
			MethodName: "BatchFetchUserRoles",
			Handler:    _CenariusService_BatchFetchUserRoles_Handler,
		},
		{
			MethodName: "ListBots",
			Handler:    _CenariusService_ListBots_Handler,
		},
		{
			MethodName: "EndGame",
			Handler:    _CenariusService_EndGame_Handler,
		},
		{
			MethodName: "SendTextMessage",
			Handler:    _CenariusService_SendTextMessage_Handler,
		},
		{
			MethodName: "GetUserDefinedRole",
			Handler:    _CenariusService_GetUserDefinedRole_Handler,
		},
		{
			MethodName: "SendGameInvitation",
			Handler:    _CenariusService_SendGameInvitation_Handler,
		},
		{
			MethodName: "ConsumeTrainingGame",
			Handler:    _CenariusService_ConsumeTrainingGame_Handler,
		},
		{
			MethodName: "CheckTrainingGameBalance",
			Handler:    _CenariusService_CheckTrainingGameBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cenarius/main.proto",
}
