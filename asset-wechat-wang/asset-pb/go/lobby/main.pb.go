// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lobby/main.proto

package lobby

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "gitlab.com/vectorup/asset-pb/go/common"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DEPRECATED(QuantumGhost): this message should not be used
//
// Deprecated: Do not use.
type GameNodeMessage struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameNodeMessage) Reset()         { *m = GameNodeMessage{} }
func (m *GameNodeMessage) String() string { return proto.CompactTextString(m) }
func (*GameNodeMessage) ProtoMessage()    {}
func (*GameNodeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{0}
}

func (m *GameNodeMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameNodeMessage.Unmarshal(m, b)
}
func (m *GameNodeMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameNodeMessage.Marshal(b, m, deterministic)
}
func (m *GameNodeMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameNodeMessage.Merge(m, src)
}
func (m *GameNodeMessage) XXX_Size() int {
	return xxx_messageInfo_GameNodeMessage.Size(m)
}
func (m *GameNodeMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GameNodeMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GameNodeMessage proto.InternalMessageInfo

func (m *GameNodeMessage) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GameNodeMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// 内部通信用，agent 通过CheckGameRoom来检查用户是否存在正在玩的游戏
type CheckGameRoomRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckGameRoomRequest) Reset()         { *m = CheckGameRoomRequest{} }
func (m *CheckGameRoomRequest) String() string { return proto.CompactTextString(m) }
func (*CheckGameRoomRequest) ProtoMessage()    {}
func (*CheckGameRoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{1}
}

func (m *CheckGameRoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckGameRoomRequest.Unmarshal(m, b)
}
func (m *CheckGameRoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckGameRoomRequest.Marshal(b, m, deterministic)
}
func (m *CheckGameRoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckGameRoomRequest.Merge(m, src)
}
func (m *CheckGameRoomRequest) XXX_Size() int {
	return xxx_messageInfo_CheckGameRoomRequest.Size(m)
}
func (m *CheckGameRoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckGameRoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckGameRoomRequest proto.InternalMessageInfo

func (m *CheckGameRoomRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type CheckGameRoomResponse struct {
	// TODO(QuantumGhost): 把 GameInfo 作为一个整体定义到 common/types.proto 里面
	GameId  int64              `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Address string             `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	State   common.PlayerState `protobuf:"varint,3,opt,name=state,proto3,enum=pb.common.PlayerState" json:"state,omitempty"`
	UserIds []int64            `protobuf:"varint,4,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	// 如果在游戏房间中，就返回房间相关的信息
	Room                 *common.RoomInfo `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CheckGameRoomResponse) Reset()         { *m = CheckGameRoomResponse{} }
func (m *CheckGameRoomResponse) String() string { return proto.CompactTextString(m) }
func (*CheckGameRoomResponse) ProtoMessage()    {}
func (*CheckGameRoomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{2}
}

func (m *CheckGameRoomResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckGameRoomResponse.Unmarshal(m, b)
}
func (m *CheckGameRoomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckGameRoomResponse.Marshal(b, m, deterministic)
}
func (m *CheckGameRoomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckGameRoomResponse.Merge(m, src)
}
func (m *CheckGameRoomResponse) XXX_Size() int {
	return xxx_messageInfo_CheckGameRoomResponse.Size(m)
}
func (m *CheckGameRoomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckGameRoomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckGameRoomResponse proto.InternalMessageInfo

func (m *CheckGameRoomResponse) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *CheckGameRoomResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CheckGameRoomResponse) GetState() common.PlayerState {
	if m != nil {
		return m.State
	}
	return common.PlayerState_PLAYER_STATE_BEGIN
}

func (m *CheckGameRoomResponse) GetUserIds() []int64 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *CheckGameRoomResponse) GetRoom() *common.RoomInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

type ResetPlayerRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPlayerRequest) Reset()         { *m = ResetPlayerRequest{} }
func (m *ResetPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPlayerRequest) ProtoMessage()    {}
func (*ResetPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{3}
}

func (m *ResetPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPlayerRequest.Unmarshal(m, b)
}
func (m *ResetPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPlayerRequest.Marshal(b, m, deterministic)
}
func (m *ResetPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPlayerRequest.Merge(m, src)
}
func (m *ResetPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPlayerRequest.Size(m)
}
func (m *ResetPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPlayerRequest proto.InternalMessageInfo

func (m *ResetPlayerRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type EndGameRequest struct {
	GameId               int64                    `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Players              []*EndGameRequest_Player `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *EndGameRequest) Reset()         { *m = EndGameRequest{} }
func (m *EndGameRequest) String() string { return proto.CompactTextString(m) }
func (*EndGameRequest) ProtoMessage()    {}
func (*EndGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{4}
}

func (m *EndGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGameRequest.Unmarshal(m, b)
}
func (m *EndGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGameRequest.Marshal(b, m, deterministic)
}
func (m *EndGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGameRequest.Merge(m, src)
}
func (m *EndGameRequest) XXX_Size() int {
	return xxx_messageInfo_EndGameRequest.Size(m)
}
func (m *EndGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndGameRequest proto.InternalMessageInfo

func (m *EndGameRequest) GetGameId() int64 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *EndGameRequest) GetPlayers() []*EndGameRequest_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type EndGameRequest_Player struct {
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// 新版本协议使用 xid 作为 PlayerId
	// 这个字段对业务逻辑没有影响，只用作日志记录
	PlayerId int64 `protobuf:"varint,2,opt,name=playerId,proto3" json:"playerId,omitempty"` // Deprecated: Do not use.
	// 新版游戏使用这个作为 PlayerId
	PlayerXid            string   `protobuf:"bytes,3,opt,name=playerXid,proto3" json:"playerXid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndGameRequest_Player) Reset()         { *m = EndGameRequest_Player{} }
func (m *EndGameRequest_Player) String() string { return proto.CompactTextString(m) }
func (*EndGameRequest_Player) ProtoMessage()    {}
func (*EndGameRequest_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{4, 0}
}

func (m *EndGameRequest_Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGameRequest_Player.Unmarshal(m, b)
}
func (m *EndGameRequest_Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGameRequest_Player.Marshal(b, m, deterministic)
}
func (m *EndGameRequest_Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGameRequest_Player.Merge(m, src)
}
func (m *EndGameRequest_Player) XXX_Size() int {
	return xxx_messageInfo_EndGameRequest_Player.Size(m)
}
func (m *EndGameRequest_Player) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGameRequest_Player.DiscardUnknown(m)
}

var xxx_messageInfo_EndGameRequest_Player proto.InternalMessageInfo

func (m *EndGameRequest_Player) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// Deprecated: Do not use.
func (m *EndGameRequest_Player) GetPlayerId() int64 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *EndGameRequest_Player) GetPlayerXid() string {
	if m != nil {
		return m.PlayerXid
	}
	return ""
}

type EndGameResponse struct {
	GameID               int64    `protobuf:"varint,2,opt,name=gameID,proto3" json:"gameID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndGameResponse) Reset()         { *m = EndGameResponse{} }
func (m *EndGameResponse) String() string { return proto.CompactTextString(m) }
func (*EndGameResponse) ProtoMessage()    {}
func (*EndGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{5}
}

func (m *EndGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndGameResponse.Unmarshal(m, b)
}
func (m *EndGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndGameResponse.Marshal(b, m, deterministic)
}
func (m *EndGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndGameResponse.Merge(m, src)
}
func (m *EndGameResponse) XXX_Size() int {
	return xxx_messageInfo_EndGameResponse.Size(m)
}
func (m *EndGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EndGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EndGameResponse proto.InternalMessageInfo

func (m *EndGameResponse) GetGameID() int64 {
	if m != nil {
		return m.GameID
	}
	return 0
}

type StreamInitParam struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	IsBot                bool     `protobuf:"varint,2,opt,name=isBot,proto3" json:"isBot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamInitParam) Reset()         { *m = StreamInitParam{} }
func (m *StreamInitParam) String() string { return proto.CompactTextString(m) }
func (*StreamInitParam) ProtoMessage()    {}
func (*StreamInitParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e2210dfa89cb1a9, []int{6}
}

func (m *StreamInitParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInitParam.Unmarshal(m, b)
}
func (m *StreamInitParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInitParam.Marshal(b, m, deterministic)
}
func (m *StreamInitParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInitParam.Merge(m, src)
}
func (m *StreamInitParam) XXX_Size() int {
	return xxx_messageInfo_StreamInitParam.Size(m)
}
func (m *StreamInitParam) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInitParam.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInitParam proto.InternalMessageInfo

func (m *StreamInitParam) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StreamInitParam) GetIsBot() bool {
	if m != nil {
		return m.IsBot
	}
	return false
}

func init() {
	proto.RegisterType((*GameNodeMessage)(nil), "pb.lobby.GameNodeMessage")
	proto.RegisterType((*CheckGameRoomRequest)(nil), "pb.lobby.CheckGameRoomRequest")
	proto.RegisterType((*CheckGameRoomResponse)(nil), "pb.lobby.CheckGameRoomResponse")
	proto.RegisterType((*ResetPlayerRequest)(nil), "pb.lobby.ResetPlayerRequest")
	proto.RegisterType((*EndGameRequest)(nil), "pb.lobby.EndGameRequest")
	proto.RegisterType((*EndGameRequest_Player)(nil), "pb.lobby.EndGameRequest.Player")
	proto.RegisterType((*EndGameResponse)(nil), "pb.lobby.EndGameResponse")
	proto.RegisterType((*StreamInitParam)(nil), "pb.lobby.StreamInitParam")
}

func init() { proto.RegisterFile("lobby/main.proto", fileDescriptor_0e2210dfa89cb1a9) }

var fileDescriptor_0e2210dfa89cb1a9 = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0x36, 0x69, 0x26, 0xd0, 0x84, 0x25, 0x54, 0xae, 0x55, 0xb5, 0x91, 0x25, 0xd4,
	0x20, 0x15, 0x07, 0xc2, 0xa9, 0x48, 0x80, 0x94, 0xa6, 0x82, 0x48, 0x80, 0xa2, 0xcd, 0x05, 0x71,
	0x40, 0x5a, 0xc7, 0x43, 0xb0, 0x1a, 0x7b, 0xcd, 0xee, 0xa6, 0x52, 0xfe, 0x80, 0x3b, 0x7f, 0xc3,
	0x95, 0x1f, 0x43, 0xde, 0xb5, 0xeb, 0x24, 0x4d, 0xc4, 0x6d, 0xe7, 0xcd, 0xcc, 0xf3, 0xbc, 0x99,
	0x27, 0x43, 0x6b, 0xce, 0x83, 0x60, 0xd9, 0x8b, 0x59, 0x94, 0xf8, 0xa9, 0xe0, 0x8a, 0x93, 0x83,
	0x34, 0xf0, 0x35, 0xe8, 0x3e, 0x9a, 0xf2, 0x38, 0xe6, 0xc9, 0x4a, 0xd2, 0x6d, 0xe7, 0x50, 0xc0,
	0xa6, 0x37, 0x98, 0x84, 0x39, 0x4a, 0x72, 0x54, 0x2d, 0x53, 0x94, 0x06, 0xf3, 0xae, 0xa0, 0xf9,
	0x9e, 0xc5, 0xf8, 0x99, 0x87, 0xf8, 0x09, 0xa5, 0x64, 0x33, 0x24, 0x04, 0xf6, 0x16, 0x8b, 0x28,
	0x74, 0xac, 0x8e, 0xd5, 0xad, 0x53, 0xfd, 0x26, 0x0e, 0xd4, 0x58, 0x18, 0x0a, 0x94, 0xd2, 0xa9,
	0x68, 0xb8, 0x08, 0x5f, 0x57, 0x1c, 0xcb, 0xf3, 0xa1, 0x7d, 0xf5, 0x03, 0xa7, 0x37, 0x19, 0x13,
	0xe5, 0x3c, 0xa6, 0xf8, 0x73, 0x81, 0x52, 0x91, 0x23, 0xa8, 0x2e, 0x24, 0x8a, 0x91, 0xe1, 0xb2,
	0x69, 0x1e, 0x79, 0x7f, 0x2c, 0x78, 0xb2, 0xd1, 0x20, 0x53, 0x9e, 0x48, 0xcc, 0x3a, 0x66, 0x2c,
	0xc6, 0xb2, 0xc3, 0x44, 0xbb, 0xbf, 0x4f, 0x2e, 0x60, 0x5f, 0x2a, 0xa6, 0xd0, 0xb1, 0x3b, 0x56,
	0xf7, 0xb0, 0x7f, 0xe4, 0xa7, 0x81, 0x6f, 0x74, 0xfa, 0xe3, 0x39, 0x5b, 0xa2, 0x98, 0x64, 0x59,
	0x6a, 0x8a, 0x32, 0x1e, 0x33, 0x83, 0x74, 0xf6, 0x3a, 0x76, 0xd7, 0xa6, 0x45, 0x48, 0xce, 0x61,
	0x4f, 0x70, 0x1e, 0x3b, 0xfb, 0x1d, 0xab, 0xdb, 0xe8, 0x3f, 0x5e, 0xa1, 0xc9, 0x06, 0x1c, 0x25,
	0xdf, 0x39, 0xd5, 0x05, 0xde, 0x05, 0x10, 0x8a, 0x12, 0x95, 0x61, 0xff, 0x9f, 0xd4, 0xbf, 0x16,
	0x1c, 0x5e, 0x27, 0xa1, 0x16, 0x5a, 0x96, 0x6e, 0xd5, 0x78, 0x09, 0xb5, 0x54, 0x73, 0x66, 0x1a,
	0xed, 0x6e, 0xa3, 0x7f, 0xe6, 0x17, 0x37, 0xf6, 0xd7, 0x29, 0x72, 0x65, 0xb4, 0xa8, 0x77, 0xbf,
	0x41, 0xd5, 0x40, 0xbb, 0xe6, 0x20, 0xa7, 0x70, 0x60, 0x8a, 0x47, 0xa1, 0xde, 0xa0, 0x3d, 0xa8,
	0x38, 0x16, 0xbd, 0xc3, 0xc8, 0x09, 0xd4, 0xcd, 0xfb, 0x4b, 0x14, 0xea, 0x55, 0xd6, 0x69, 0x09,
	0x78, 0xcf, 0xa0, 0x79, 0x37, 0xc1, 0xc6, 0xa5, 0x86, 0x86, 0x2e, 0x57, 0x31, 0xf4, 0xde, 0x41,
	0x73, 0xa2, 0x04, 0xb2, 0x78, 0x94, 0x44, 0x6a, 0xcc, 0x04, 0x8b, 0x77, 0xce, 0xd4, 0x86, 0xfd,
	0x48, 0x0e, 0xb8, 0xd2, 0x0c, 0x07, 0xd4, 0x04, 0xfd, 0xdf, 0x36, 0x3c, 0xf8, 0x98, 0x89, 0x9e,
	0xa0, 0xb8, 0x8d, 0xa6, 0x48, 0x86, 0xd0, 0xa2, 0x38, 0x8b, 0xa4, 0x42, 0x51, 0x58, 0x95, 0x1c,
	0x97, 0xab, 0xd9, 0xb0, 0xaf, 0xdb, 0x5a, 0x39, 0xdd, 0xb5, 0x10, 0x5c, 0x78, 0xf6, 0xaf, 0x8a,
	0x45, 0xc6, 0xf0, 0x70, 0xcd, 0x72, 0xe4, 0xb4, 0xa4, 0xd8, 0x66, 0x5e, 0xf7, 0x6c, 0x67, 0x3e,
	0xdf, 0xc0, 0x1b, 0x68, 0xac, 0x18, 0x81, 0x9c, 0x94, 0xf5, 0xf7, 0xfd, 0x71, 0x7f, 0x2a, 0x72,
	0x09, 0xd5, 0x0f, 0x2c, 0x09, 0xe7, 0x6b, 0x62, 0x36, 0x56, 0xe7, 0x92, 0x55, 0x3b, 0xb3, 0xe5,
	0x9c, 0xb3, 0xf0, 0x85, 0x45, 0x5e, 0x42, 0xad, 0x30, 0xd3, 0x96, 0x82, 0x6d, 0x4d, 0xe4, 0x2d,
	0xd4, 0xf2, 0x0b, 0x12, 0x67, 0x97, 0xad, 0xdc, 0xe3, 0x2d, 0x19, 0x23, 0x76, 0x70, 0xfe, 0xf5,
	0xe9, 0x2c, 0x52, 0x73, 0xa6, 0x89, 0x7b, 0xb7, 0x38, 0x55, 0x5c, 0x2c, 0xd2, 0x1e, 0x93, 0x12,
	0xd5, 0xf3, 0x34, 0xe8, 0xcd, 0x78, 0x4f, 0x37, 0x06, 0x55, 0xfd, 0x5f, 0x79, 0xf5, 0x2f, 0x00,
	0x00, 0xff, 0xff, 0xcc, 0x1e, 0x54, 0xe0, 0xb2, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LobbyServiceClient is the client API for LobbyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LobbyServiceClient interface {
	RegisterGameNode(ctx context.Context, in *GameNodeMessage, opts ...grpc.CallOption) (*common.Error, error)
	CheckGameRoom(ctx context.Context, in *CheckGameRoomRequest, opts ...grpc.CallOption) (*CheckGameRoomResponse, error)
	ResetPlayer(ctx context.Context, in *ResetPlayerRequest, opts ...grpc.CallOption) (*common.Error, error)
	Handle(ctx context.Context, in *StreamInitParam, opts ...grpc.CallOption) (LobbyService_HandleClient, error)
	Request(ctx context.Context, in *common.Payload, opts ...grpc.CallOption) (*common.Payload, error)
	EndGame(ctx context.Context, in *EndGameRequest, opts ...grpc.CallOption) (*EndGameResponse, error)
}

type lobbyServiceClient struct {
	cc *grpc.ClientConn
}

func NewLobbyServiceClient(cc *grpc.ClientConn) LobbyServiceClient {
	return &lobbyServiceClient{cc}
}

// Deprecated: Do not use.
func (c *lobbyServiceClient) RegisterGameNode(ctx context.Context, in *GameNodeMessage, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/pb.lobby.LobbyService/RegisterGameNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyServiceClient) CheckGameRoom(ctx context.Context, in *CheckGameRoomRequest, opts ...grpc.CallOption) (*CheckGameRoomResponse, error) {
	out := new(CheckGameRoomResponse)
	err := c.cc.Invoke(ctx, "/pb.lobby.LobbyService/CheckGameRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyServiceClient) ResetPlayer(ctx context.Context, in *ResetPlayerRequest, opts ...grpc.CallOption) (*common.Error, error) {
	out := new(common.Error)
	err := c.cc.Invoke(ctx, "/pb.lobby.LobbyService/ResetPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyServiceClient) Handle(ctx context.Context, in *StreamInitParam, opts ...grpc.CallOption) (LobbyService_HandleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LobbyService_serviceDesc.Streams[0], "/pb.lobby.LobbyService/Handle", opts...)
	if err != nil {
		return nil, err
	}
	x := &lobbyServiceHandleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LobbyService_HandleClient interface {
	Recv() (*common.Payload, error)
	grpc.ClientStream
}

type lobbyServiceHandleClient struct {
	grpc.ClientStream
}

func (x *lobbyServiceHandleClient) Recv() (*common.Payload, error) {
	m := new(common.Payload)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *lobbyServiceClient) Request(ctx context.Context, in *common.Payload, opts ...grpc.CallOption) (*common.Payload, error) {
	out := new(common.Payload)
	err := c.cc.Invoke(ctx, "/pb.lobby.LobbyService/Request", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lobbyServiceClient) EndGame(ctx context.Context, in *EndGameRequest, opts ...grpc.CallOption) (*EndGameResponse, error) {
	out := new(EndGameResponse)
	err := c.cc.Invoke(ctx, "/pb.lobby.LobbyService/EndGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LobbyServiceServer is the server API for LobbyService service.
type LobbyServiceServer interface {
	RegisterGameNode(context.Context, *GameNodeMessage) (*common.Error, error)
	CheckGameRoom(context.Context, *CheckGameRoomRequest) (*CheckGameRoomResponse, error)
	ResetPlayer(context.Context, *ResetPlayerRequest) (*common.Error, error)
	Handle(*StreamInitParam, LobbyService_HandleServer) error
	Request(context.Context, *common.Payload) (*common.Payload, error)
	EndGame(context.Context, *EndGameRequest) (*EndGameResponse, error)
}

func RegisterLobbyServiceServer(s *grpc.Server, srv LobbyServiceServer) {
	s.RegisterService(&_LobbyService_serviceDesc, srv)
}

func _LobbyService_RegisterGameNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameNodeMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServiceServer).RegisterGameNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.lobby.LobbyService/RegisterGameNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServiceServer).RegisterGameNode(ctx, req.(*GameNodeMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _LobbyService_CheckGameRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckGameRoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServiceServer).CheckGameRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.lobby.LobbyService/CheckGameRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServiceServer).CheckGameRoom(ctx, req.(*CheckGameRoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LobbyService_ResetPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServiceServer).ResetPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.lobby.LobbyService/ResetPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServiceServer).ResetPlayer(ctx, req.(*ResetPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LobbyService_Handle_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamInitParam)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LobbyServiceServer).Handle(m, &lobbyServiceHandleServer{stream})
}

type LobbyService_HandleServer interface {
	Send(*common.Payload) error
	grpc.ServerStream
}

type lobbyServiceHandleServer struct {
	grpc.ServerStream
}

func (x *lobbyServiceHandleServer) Send(m *common.Payload) error {
	return x.ServerStream.SendMsg(m)
}

func _LobbyService_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Payload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServiceServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.lobby.LobbyService/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServiceServer).Request(ctx, req.(*common.Payload))
	}
	return interceptor(ctx, in, info, handler)
}

func _LobbyService_EndGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LobbyServiceServer).EndGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.lobby.LobbyService/EndGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LobbyServiceServer).EndGame(ctx, req.(*EndGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LobbyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.lobby.LobbyService",
	HandlerType: (*LobbyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterGameNode",
			Handler:    _LobbyService_RegisterGameNode_Handler,
		},
		{
			MethodName: "CheckGameRoom",
			Handler:    _LobbyService_CheckGameRoom_Handler,
		},
		{
			MethodName: "ResetPlayer",
			Handler:    _LobbyService_ResetPlayer_Handler,
		},
		{
			MethodName: "Request",
			Handler:    _LobbyService_Request_Handler,
		},
		{
			MethodName: "EndGame",
			Handler:    _LobbyService_EndGame_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Handle",
			Handler:       _LobbyService_Handle_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "lobby/main.proto",
}
